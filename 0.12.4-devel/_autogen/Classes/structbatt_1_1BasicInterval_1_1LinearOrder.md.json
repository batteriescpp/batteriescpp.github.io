{
  "abstract": false,
  "anchor": "",
  "brief": "Partial order on Interval values that corresponds to a strict ordering on a one dimensional number line. ",
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "Any pair of intervals that overlap are considered \"equal\" under this ordering.\n\nRequires that the lower bound of the \"greater\" interval is greater than or equal to the upper bound of the \"lesser.\" ",
  "explicit": false,
  "fullname": "batt::BasicInterval::LinearOrder",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<batteries/interval.hpp>",
  "inline": false,
  "kind": "struct",
  "language": "cpp",
  "location": {
    "bodyEnd": 234,
    "bodyFile": "batteries/interval.hpp",
    "bodyStart": 215,
    "column": 5,
    "file": "batteries/interval.hpp",
    "line": 215
  },
  "name": "batt::BasicInterval::LinearOrder",
  "override": false,
  "parent": {
    "anchor": "",
    "brief": "A set of totally ordered values, defined by a lower and upper bound. ",
    "category": "classes",
    "fullname": "batt::BasicInterval",
    "kind": "struct",
    "language": "cpp",
    "name": "batt::BasicInterval",
    "refid": "structbatt_1_1BasicInterval",
    "summary": "A set of totally ordered values, defined by a lower and upper bound. ",
    "title": "batt::BasicInterval",
    "url": "/_autogen/Classes/structbatt_1_1BasicInterval/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "A set of totally ordered values, defined by a lower and upper bound. ",
      "category": "classes",
      "fullname": "batt::BasicInterval",
      "kind": "struct",
      "language": "cpp",
      "name": "batt::BasicInterval",
      "refid": "structbatt_1_1BasicInterval",
      "summary": "A set of totally ordered values, defined by a lower and upper bound. ",
      "title": "batt::BasicInterval",
      "url": "/_autogen/Classes/structbatt_1_1BasicInterval/",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-operator()",
      "argsString": "(const BasicInterval< TraitsL > &l, const BasicInterval< TraitsR > &r) const",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "bool batt::BasicInterval< Traits >::LinearOrder::operator()",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::BasicInterval::LinearOrder::operator()",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 221,
        "bodyFile": "batteries/interval.hpp",
        "bodyStart": 217,
        "column": 14,
        "file": "batteries/interval.hpp",
        "line": 217
      },
      "name": "operator()",
      "override": false,
      "params": [
        {
          "name": "l",
          "type": "const [BasicInterval](/_autogen/Classes/structbatt_1_1BasicInterval/)< TraitsL > &",
          "typePlain": "const BasicInterval< TraitsL > &"
        },
        {
          "name": "r",
          "type": "const [BasicInterval](/_autogen/Classes/structbatt_1_1BasicInterval/)< TraitsR > &",
          "typePlain": "const BasicInterval< TraitsR > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structbatt_1_1BasicInterval_1_1LinearOrder_1ac689658c3580041a24db8dd05899c18f",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename TraitsL",
          "typePlain": "typename TraitsL"
        },
        {
          "name": "",
          "type": "typename TraitsR",
          "typePlain": "typename TraitsR"
        }
      ],
      "title": "operator()",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/structbatt_1_1BasicInterval_1_1LinearOrder/#function-operator()",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator()",
      "argsString": "(const L &l, const BasicInterval< TraitsR > &r) const",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "bool batt::BasicInterval< Traits >::LinearOrder::operator()",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::BasicInterval::LinearOrder::operator()",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 227,
        "bodyFile": "batteries/interval.hpp",
        "bodyStart": 224,
        "column": 14,
        "file": "batteries/interval.hpp",
        "line": 224
      },
      "name": "operator()",
      "override": false,
      "params": [
        {
          "name": "l",
          "type": "const L &",
          "typePlain": "const L &"
        },
        {
          "name": "r",
          "type": "const [BasicInterval](/_autogen/Classes/structbatt_1_1BasicInterval/)< TraitsR > &",
          "typePlain": "const BasicInterval< TraitsR > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structbatt_1_1BasicInterval_1_1LinearOrder_1a0c407912a26422d74fc45c469f20cc93",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename L",
          "typePlain": "typename L"
        },
        {
          "name": "",
          "type": "typename TraitsR",
          "typePlain": "typename TraitsR"
        }
      ],
      "title": "operator()",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/structbatt_1_1BasicInterval_1_1LinearOrder/#function-operator()",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator()",
      "argsString": "(const BasicInterval< TraitsL > &l, const R &r) const",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "bool batt::BasicInterval< Traits >::LinearOrder::operator()",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::BasicInterval::LinearOrder::operator()",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 233,
        "bodyFile": "batteries/interval.hpp",
        "bodyStart": 230,
        "column": 14,
        "file": "batteries/interval.hpp",
        "line": 230
      },
      "name": "operator()",
      "override": false,
      "params": [
        {
          "name": "l",
          "type": "const [BasicInterval](/_autogen/Classes/structbatt_1_1BasicInterval/)< TraitsL > &",
          "typePlain": "const BasicInterval< TraitsL > &"
        },
        {
          "name": "r",
          "type": "const R &",
          "typePlain": "const R &"
        }
      ],
      "pureVirtual": false,
      "refid": "structbatt_1_1BasicInterval_1_1LinearOrder_1a510ee3eeffbe48f6fb5c3e576874b7bd",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename TraitsL",
          "typePlain": "typename TraitsL"
        },
        {
          "name": "",
          "type": "typename R",
          "typePlain": "typename R"
        }
      ],
      "title": "operator()",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/structbatt_1_1BasicInterval_1_1LinearOrder/#function-operator()",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "refid": "structbatt_1_1BasicInterval_1_1LinearOrder",
  "static": false,
  "strong": false,
  "summary": "Partial order on Interval values that corresponds to a strict ordering on a one dimensional number line. ",
  "title": "batt::BasicInterval::LinearOrder",
  "url": "/_autogen/Classes/structbatt_1_1BasicInterval_1_1LinearOrder/",
  "visibility": "public"
}