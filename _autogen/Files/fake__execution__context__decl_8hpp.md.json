{
  "abstract": false,
  "anchor": "#file-fake-execution-context-decl.hpp",
  "category": "files",
  "const": false,
  "defines": [
    {
      "abstract": false,
      "anchor": "#define-batteries-async-fake-execution-context-decl-hpp",
      "category": "defines",
      "const": false,
      "definition": "",
      "explicit": false,
      "fullname": "BATTERIES_ASYNC_FAKE_EXECUTION_CONTEXT_DECL_HPP",
      "hasDetails": false,
      "inline": false,
      "kind": "define",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/fake_execution_context_decl.hpp",
        "bodyStart": 6,
        "column": 9,
        "file": "batteries/async/fake_execution_context_decl.hpp",
        "line": 6
      },
      "name": "BATTERIES_ASYNC_FAKE_EXECUTION_CONTEXT_DECL_HPP",
      "override": false,
      "refid": "fake__execution__context__decl_8hpp_1a6e9beeb75e6e0dc956c4b14bdcd49fbf",
      "static": false,
      "strong": false,
      "title": "BATTERIES_ASYNC_FAKE_EXECUTION_CONTEXT_DECL_HPP",
      "url": "/_autogen/Files/fake__execution__context__decl_8hpp/#define-batteries-async-fake-execution-context-decl-hpp",
      "visibility": "public"
    }
  ],
  "definition": "",
  "explicit": false,
  "fullname": "batteries/async/fake_execution_context_decl.hpp",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "includes": "<batteries/config.hpp>",
  "inline": false,
  "kind": "file",
  "language": "cpp",
  "location": {
    "column": 0,
    "file": "batteries/async/fake_execution_context_decl.hpp",
    "line": 0
  },
  "name": "batteries/async/fake_execution_context_decl.hpp",
  "namespaces": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "override": false,
  "parent": {
    "anchor": "#dir-batteries/async",
    "category": "dirs",
    "fullname": "batteries/async",
    "kind": "dir",
    "language": "",
    "name": "batteries/async",
    "refid": "dir_faaa2176564b41e79cedcf3028f42662",
    "title": "batteries/async",
    "url": "/_autogen/Files/dir_faaa2176564b41e79cedcf3028f42662/#dir-batteries/async",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "#dir-batteries",
      "category": "dirs",
      "fullname": "batteries",
      "kind": "dir",
      "language": "",
      "name": "batteries",
      "refid": "dir_af4e2857c92a31b60ebae85174ebeccb",
      "title": "batteries",
      "url": "/_autogen/Files/dir_af4e2857c92a31b60ebae85174ebeccb/#dir-batteries",
      "visibility": "public"
    },
    {
      "anchor": "#dir-batteries/async",
      "category": "dirs",
      "fullname": "batteries/async",
      "kind": "dir",
      "language": "",
      "name": "batteries/async",
      "refid": "dir_faaa2176564b41e79cedcf3028f42662",
      "title": "batteries/async",
      "url": "/_autogen/Files/dir_faaa2176564b41e79cedcf3028f42662/#dir-batteries/async",
      "visibility": "public"
    }
  ],
  "programlisting": "//######=###=##=#=#=#=#=#==#==#====#+==#+==============+==+==+==+=+==+=+=+=+=+=+=+\n// Copyright 2022 Anthony Paul Astolfi\n//\n#pragma once\n#ifndef BATTERIES_ASYNC_FAKE_EXECUTION_CONTEXT_DECL_HPP\n#define BATTERIES_ASYNC_FAKE_EXECUTION_CONTEXT_DECL_HPP\n\n#include <batteries/config.hpp>\n//\n#include <batteries/async/handler.hpp>\n#include <batteries/async/watch_decl.hpp>\n#include <batteries/int_types.hpp>\n\n#include <boost/asio/execution_context.hpp>\n\n#include <functional>\n#include <mutex>\n#include <vector>\n\nnamespace batt {\n\ntemplate <typename OutstandingWorkP>\nclass BasicFakeExecutor;\n\n//=#=#==#==#===============+=+=+=+=++=++++++++++++++-++-+--+-+----+---------------\n// A drop-in replacement for boost::asio::io_context, suitable for fake-testing in unit tests.\n//\n// Unlike a \"real\" execution context, this class doesn't\n//\nclass FakeExecutionContext : public boost::asio::execution_context\n{\n   public:\n    template <typename OutstandingWorkP>\n    friend class BasicFakeExecutor;\n\n    struct AlwaysReturnZero {\n        usize operator()(usize) const\n        {\n            return 0;\n        }\n    };\n\n    using executor_type = BasicFakeExecutor<boost::asio::execution::outstanding_work_t::untracked_t>;\n\n    FakeExecutionContext() = default;\n    ~FakeExecutionContext() = default;\n\n    executor_type get_executor();\n\n    // The current work count.\n    //\n    Watch<i64>& work_count();\n\n    // Add a ready-to-run completion handler to the context.  This handler is never run automatically by the\n    // FakeExecutionContext; it must be removed via `pop_ready_handler` and run by the client code.\n    //\n    void push_ready_handler(UniqueHandler<>&& handler);\n\n    // Passes `picker` the current number of ready-to-run completion handlers for this executor; picker then\n    // returns some non-negative integer smaller than this number.  This method then removes that handler from\n    // the ready set and returns it.\n    //\n    UniqueHandler<> pop_ready_handler(const std::function<usize(usize)>& picker = AlwaysReturnZero{});\n\n    // Access the default allocator directly.\n    //\n    std::allocator<void> get_allocator() const\n    {\n        return this->allocator_;\n    }\n\n    // Shortcut to pop an arbitrary ready handler and run it.\n    //\n    bool poll_one();\n\n    // Shortcut to pop all ready handlers and run them.\n    //\n    usize poll();\n\n    // Shortcut to wait for ready handlers and run them, while work count is > 0.\n    //\n    usize run();\n\n   private:\n    Watch<i64> work_count_{0};\n    Watch<i64> push_ready_count_{0};\n    Watch<i64> pop_ready_count_{0};\n    std::allocator<void> allocator_;\n    std::mutex mutex_;\n    std::vector<UniqueHandler<>> ready_to_run_;\n};\n\n}  // namespace batt\n\n#endif  // BATTERIES_ASYNC_FAKE_EXECUTION_CONTEXT_HPP",
  "publicClasses": [
    {
      "anchor": "",
      "category": "classes",
      "fullname": "batt::BasicFakeExecutor",
      "kind": "class",
      "language": "cpp",
      "name": "batt::BasicFakeExecutor",
      "refid": "classbatt_1_1BasicFakeExecutor",
      "title": "batt::BasicFakeExecutor",
      "url": "/_autogen/Classes/classbatt_1_1BasicFakeExecutor/",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "execution_context",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "batt::FakeExecutionContext",
      "kind": "class",
      "language": "cpp",
      "name": "batt::FakeExecutionContext",
      "refid": "classbatt_1_1FakeExecutionContext",
      "title": "batt::FakeExecutionContext",
      "url": "/_autogen/Classes/classbatt_1_1FakeExecutionContext/",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "batt::FakeExecutionContext::AlwaysReturnZero",
      "kind": "struct",
      "language": "cpp",
      "name": "batt::FakeExecutionContext::AlwaysReturnZero",
      "refid": "structbatt_1_1FakeExecutionContext_1_1AlwaysReturnZero",
      "title": "batt::FakeExecutionContext::AlwaysReturnZero",
      "url": "/_autogen/Classes/structbatt_1_1FakeExecutionContext_1_1AlwaysReturnZero/",
      "visibility": "public"
    }
  ],
  "refid": "fake__execution__context__decl_8hpp",
  "static": false,
  "strong": false,
  "title": "batteries/async/fake_execution_context_decl.hpp",
  "url": "/_autogen/Files/fake__execution__context__decl_8hpp/#file-fake-execution-context-decl.hpp",
  "visibility": "public"
}