{
  "abstract": false,
  "anchor": "",
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "batt::BasicMCSMutex::Lock",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 329,
    "bodyFile": "batteries/async/mcs_lock.hpp",
    "bodyStart": 173,
    "column": 5,
    "file": "batteries/async/mcs_lock.hpp",
    "line": 172
  },
  "name": "batt::BasicMCSMutex::Lock",
  "override": false,
  "parent": {
    "anchor": "",
    "brief": "A fair mutual exclusion lock based on the MCS lock algorithm. ",
    "category": "classes",
    "fullname": "batt::BasicMCSMutex",
    "kind": "class",
    "language": "cpp",
    "name": "batt::BasicMCSMutex",
    "refid": "classbatt_1_1BasicMCSMutex",
    "summary": "A fair mutual exclusion lock based on the MCS lock algorithm. ",
    "title": "batt::BasicMCSMutex",
    "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "A fair mutual exclusion lock based on the MCS lock algorithm. ",
      "category": "classes",
      "fullname": "batt::BasicMCSMutex",
      "kind": "class",
      "language": "cpp",
      "name": "batt::BasicMCSMutex",
      "refid": "classbatt_1_1BasicMCSMutex",
      "summary": "A fair mutual exclusion lock based on the MCS lock algorithm. ",
      "title": "batt::BasicMCSMutex",
      "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex/",
      "visibility": "public"
    }
  ],
  "privateAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-mutex-",
      "brief": "The mutex this object has locked. ",
      "category": "attributes",
      "const": false,
      "definition": "BasicMCSMutex& batt::BasicMCSMutex< kMetricsEnabled >::Lock::mutex_",
      "explicit": false,
      "fullname": "batt::BasicMCSMutex::Lock::mutex_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/mcs_lock.hpp",
        "bodyStart": 319,
        "column": 23,
        "file": "batteries/async/mcs_lock.hpp",
        "line": 319
      },
      "name": "mutex_",
      "override": false,
      "refid": "classbatt_1_1BasicMCSMutex_1_1Lock_1aca134b3a4027269b9ad4e48ded79f4dc",
      "static": false,
      "strong": false,
      "summary": "The mutex this object has locked. ",
      "title": "mutex_",
      "type": "[BasicMCSMutex](/_autogen/Classes/classbatt_1_1BasicMCSMutex/) &",
      "typePlain": "BasicMCSMutex &",
      "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/#variable-mutex-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-next-",
      "brief": "The next lock holder after us in the queue; this field is updated by the constructor of `next_`, so we might need to spin/wait for it to be set. ",
      "category": "attributes",
      "const": false,
      "definition": "batt::CpuCacheLineIsolated<std::atomic<Lock*> > batt::BasicMCSMutex< kMetricsEnabled >::Lock::next_",
      "explicit": false,
      "fullname": "batt::BasicMCSMutex::Lock::next_",
      "hasDetails": false,
      "initializer": "{nullptr}",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/mcs_lock.hpp",
        "bodyStart": 324,
        "column": 36,
        "file": "batteries/async/mcs_lock.hpp",
        "line": 324
      },
      "name": "next_",
      "override": false,
      "refid": "classbatt_1_1BasicMCSMutex_1_1Lock_1aab79778b1f69fc0d4499d1c482c13f5c",
      "static": false,
      "strong": false,
      "summary": "The next lock holder after us in the queue; this field is updated by the constructor of next_, so we might need to spin/wait for it to be set. ",
      "title": "next_",
      "type": "[batt::CpuCacheLineIsolated](/_autogen/Classes/classbatt_1_1CpuCacheLineIsolated/)< std::atomic< [Lock](/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/) * > >",
      "typePlain": "batt::CpuCacheLineIsolated< std::atomic< Lock * > >",
      "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/#variable-next-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-waiting-to-acquire-",
      "brief": "Used by the previous lock holder to notify us when lock ownership passes to us. ",
      "category": "attributes",
      "const": false,
      "definition": "batt::CpuCacheLineIsolated<std::atomic<u32> > batt::BasicMCSMutex< kMetricsEnabled >::Lock::waiting_to_acquire_",
      "explicit": false,
      "fullname": "batt::BasicMCSMutex::Lock::waiting_to_acquire_",
      "hasDetails": false,
      "initializer": "{1}",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/mcs_lock.hpp",
        "bodyStart": 328,
        "column": 36,
        "file": "batteries/async/mcs_lock.hpp",
        "line": 328
      },
      "name": "waiting_to_acquire_",
      "override": false,
      "refid": "classbatt_1_1BasicMCSMutex_1_1Lock_1a143ec68b658dd34a3446a00c7d52a031",
      "static": false,
      "strong": false,
      "summary": "Used by the previous lock holder to notify us when lock ownership passes to us. ",
      "title": "waiting_to_acquire_",
      "type": "[batt::CpuCacheLineIsolated](/_autogen/Classes/classbatt_1_1CpuCacheLineIsolated/)< std::atomic< u32 > >",
      "typePlain": "batt::CpuCacheLineIsolated< std::atomic< u32 > >",
      "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/#variable-waiting-to-acquire-",
      "visibility": "private"
    }
  ],
  "publicAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-kacquirespincyclesinit",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::BasicMCSMutex< kMetricsEnabled >::Lock::kAcquireSpinCyclesInit",
      "explicit": false,
      "fullname": "batt::BasicMCSMutex::Lock::kAcquireSpinCyclesInit",
      "hasDetails": false,
      "initializer": "= 2048",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/mcs_lock.hpp",
        "bodyStart": 175,
        "column": 32,
        "file": "batteries/async/mcs_lock.hpp",
        "line": 175
      },
      "name": "kAcquireSpinCyclesInit",
      "override": false,
      "refid": "classbatt_1_1BasicMCSMutex_1_1Lock_1a6f36030001c9da0c6e17a349200d5f8b",
      "static": true,
      "strong": false,
      "title": "kAcquireSpinCyclesInit",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/#variable-kacquirespincyclesinit",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kacquirespincyclessteady",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::BasicMCSMutex< kMetricsEnabled >::Lock::kAcquireSpinCyclesSteady",
      "explicit": false,
      "fullname": "batt::BasicMCSMutex::Lock::kAcquireSpinCyclesSteady",
      "hasDetails": false,
      "initializer": "= 8",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/mcs_lock.hpp",
        "bodyStart": 176,
        "column": 32,
        "file": "batteries/async/mcs_lock.hpp",
        "line": 176
      },
      "name": "kAcquireSpinCyclesSteady",
      "override": false,
      "refid": "classbatt_1_1BasicMCSMutex_1_1Lock_1abbb7b45edb019e17d441d3e7bf96aa41",
      "static": true,
      "strong": false,
      "title": "kAcquireSpinCyclesSteady",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/#variable-kacquirespincyclessteady",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-lock",
      "argsString": "(BasicMCSMutex &mutex) noexcept",
      "brief": "Acquires a lock on the passed mutex. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::BasicMCSMutex< kMetricsEnabled >::Lock::Lock",
      "deleted": false,
      "explicit": true,
      "fullname": "batt::BasicMCSMutex::Lock::Lock",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 253,
        "bodyFile": "batteries/async/mcs_lock.hpp",
        "bodyStart": 180,
        "column": 18,
        "file": "batteries/async/mcs_lock.hpp",
        "line": 180
      },
      "name": "Lock",
      "override": false,
      "params": [
        {
          "name": "mutex",
          "type": "[BasicMCSMutex](/_autogen/Classes/classbatt_1_1BasicMCSMutex/) &",
          "typePlain": "BasicMCSMutex &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1BasicMCSMutex_1_1Lock_1a22cda487ed1ce5d0e7812bb94fd8331a",
      "static": false,
      "strong": false,
      "summary": "Acquires a lock on the passed mutex. ",
      "title": "Lock",
      "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/#function-lock",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-lock",
      "argsString": "(const Lock &)=delete",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::BasicMCSMutex< kMetricsEnabled >::Lock::Lock",
      "deleted": true,
      "explicit": false,
      "fullname": "batt::BasicMCSMutex::Lock::Lock",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 9,
        "file": "batteries/async/mcs_lock.hpp",
        "line": 255
      },
      "name": "Lock",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "const [Lock](/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/) &",
          "typePlain": "const Lock &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1BasicMCSMutex_1_1Lock_1a820b826450e4c7c4ece4a854d7ced6f7",
      "static": false,
      "strong": false,
      "title": "Lock",
      "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/#function-lock",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator=",
      "argsString": "(const Lock &)=delete",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Lock& batt::BasicMCSMutex< kMetricsEnabled >::Lock::operator=",
      "deleted": true,
      "explicit": false,
      "fullname": "batt::BasicMCSMutex::Lock::operator=",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 14,
        "file": "batteries/async/mcs_lock.hpp",
        "line": 256
      },
      "name": "operator=",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "const [Lock](/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/) &",
          "typePlain": "const Lock &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1BasicMCSMutex_1_1Lock_1a6a6953a22a50a711f3475de5bb71b9fe",
      "static": false,
      "strong": false,
      "title": "operator=",
      "type": "[Lock](/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/) &",
      "typePlain": "Lock &",
      "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/#function-operator=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-~lock",
      "argsString": "() noexcept",
      "brief": "Releases the lock held by the current thread. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::BasicMCSMutex< kMetricsEnabled >::Lock::~Lock",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::BasicMCSMutex::Lock::~Lock",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 314,
        "bodyFile": "batteries/async/mcs_lock.hpp",
        "bodyStart": 260,
        "column": 9,
        "file": "batteries/async/mcs_lock.hpp",
        "line": 260
      },
      "name": "~Lock",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1BasicMCSMutex_1_1Lock_1ac239cbfad0764d3fb61764778f68f226",
      "static": false,
      "strong": false,
      "summary": "Releases the lock held by the current thread. ",
      "title": "~Lock",
      "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/#function-~lock",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1BasicMCSMutex_1_1Lock",
  "static": false,
  "strong": false,
  "title": "batt::BasicMCSMutex::Lock",
  "url": "/_autogen/Classes/classbatt_1_1BasicMCSMutex_1_1Lock/",
  "visibility": "public"
}