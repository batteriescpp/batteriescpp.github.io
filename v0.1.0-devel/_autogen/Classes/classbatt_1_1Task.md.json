{
  "abstract": false,
  "anchor": "",
  "baseClasses": [
    {
      "external": true,
      "name": "boost::intrusive::list_base_hook< boost::intrusive::link_mode< boost::intrusive::auto_unlink > >",
      "refid": null,
      "virtual": "non-virtual",
      "visibility": "public"
    }
  ],
  "brief": "A user-space cooperatively scheduled thread of control. ",
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "Does not support preemption. ",
  "explicit": false,
  "friends": [
    {
      "abstract": false,
      "anchor": "#friend-debuginfoframe",
      "argsString": "",
      "category": "friends",
      "const": false,
      "default": false,
      "definition": "friend class DebugInfoFrame",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::DebugInfoFrame",
      "hasDetails": false,
      "inline": false,
      "kind": "friend",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 87,
        "column": 5,
        "file": "batteries/async/task_decl.hpp",
        "line": 87
      },
      "name": "DebugInfoFrame",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "[DebugInfoFrame](/_autogen/Classes/classbatt_1_1DebugInfoFrame/)",
          "typePlain": "DebugInfoFrame"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a1413823a64e1e35412d674568b93e995",
      "static": false,
      "strong": false,
      "title": "DebugInfoFrame",
      "type": "class",
      "typePlain": "class",
      "url": "/_autogen/Classes/classbatt_1_1Task/#friend-debuginfoframe",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#friend-print-debug-info",
      "argsString": "(DebugInfoFrame *p, std::ostream &out)",
      "category": "friends",
      "const": false,
      "default": false,
      "definition": "void print_debug_info",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::print_debug_info",
      "hasDetails": false,
      "inline": false,
      "kind": "friend",
      "language": "cpp",
      "location": {
        "bodyEnd": 66,
        "bodyFile": "batteries/async/debug_info_impl.hpp",
        "bodyStart": 57,
        "column": 17,
        "file": "batteries/async/task_decl.hpp",
        "line": 89
      },
      "name": "print_debug_info",
      "override": false,
      "params": [
        {
          "name": "p",
          "type": "[DebugInfoFrame](/_autogen/Classes/classbatt_1_1DebugInfoFrame/) *",
          "typePlain": "DebugInfoFrame *"
        },
        {
          "name": "out",
          "type": "std::ostream &",
          "typePlain": "std::ostream &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a283f311e6292e86ad7a1c96e44ca62da",
      "static": false,
      "strong": false,
      "title": "print_debug_info",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#friend-print-debug-info",
      "virtual": false,
      "visibility": "private"
    }
  ],
  "fullname": "batt::Task",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<batteries/async/task_decl.hpp>",
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 1253,
    "bodyFile": "batteries/async/task_decl.hpp",
    "bodyStart": 86,
    "column": 1,
    "file": "batteries/async/task_decl.hpp",
    "line": 84
  },
  "name": "batt::Task",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "privateAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-id-",
      "category": "attributes",
      "const": false,
      "definition": "const i32 batt::Task::id_",
      "explicit": false,
      "fullname": "batt::Task::id_",
      "hasDetails": false,
      "initializer": "= next_id()",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1174,
        "column": 15,
        "file": "batteries/async/task_decl.hpp",
        "line": 1174
      },
      "name": "id_",
      "override": false,
      "refid": "classbatt_1_1Task_1a10e21741ca56727cfa3e5deb60062e1c",
      "static": false,
      "strong": false,
      "title": "id_",
      "type": "const i32",
      "typePlain": "const i32",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-id-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-name-",
      "category": "attributes",
      "const": false,
      "definition": "const std::string batt::Task::name_",
      "explicit": false,
      "fullname": "batt::Task::name_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1178,
        "column": 23,
        "file": "batteries/async/task_decl.hpp",
        "line": 1178
      },
      "name": "name_",
      "override": false,
      "refid": "classbatt_1_1Task_1a04e6563f56e3f269c5cc086dae9ffa9a",
      "static": false,
      "strong": false,
      "title": "name_",
      "type": "const std::string",
      "typePlain": "const std::string",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-name-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-ex-",
      "category": "attributes",
      "const": false,
      "definition": "executor_type batt::Task::ex_",
      "explicit": false,
      "fullname": "batt::Task::ex_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1182,
        "column": 19,
        "file": "batteries/async/task_decl.hpp",
        "line": 1182
      },
      "name": "ex_",
      "override": false,
      "refid": "classbatt_1_1Task_1aafb45c7440a80815485577e34925e3ab",
      "static": false,
      "strong": false,
      "title": "ex_",
      "type": "[executor_type](/_autogen/Classes/classbatt_1_1Task/#using-executor-type)",
      "typePlain": "executor_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-ex-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-scheduler-",
      "category": "attributes",
      "const": false,
      "definition": "Continuation batt::Task::scheduler_",
      "explicit": false,
      "fullname": "batt::Task::scheduler_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1187,
        "column": 18,
        "file": "batteries/async/task_decl.hpp",
        "line": 1187
      },
      "name": "scheduler_",
      "override": false,
      "refid": "classbatt_1_1Task_1acd197f2cb61a1c21a9eb0c534236e125",
      "static": false,
      "strong": false,
      "title": "scheduler_",
      "type": "Continuation",
      "typePlain": "Continuation",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-scheduler-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-self-",
      "category": "attributes",
      "const": false,
      "definition": "Continuation batt::Task::self_",
      "explicit": false,
      "fullname": "batt::Task::self_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1192,
        "column": 18,
        "file": "batteries/async/task_decl.hpp",
        "line": 1192
      },
      "name": "self_",
      "override": false,
      "refid": "classbatt_1_1Task_1a5470157562c33d6e1652c5d4d5a023f9",
      "static": false,
      "strong": false,
      "title": "self_",
      "type": "Continuation",
      "typePlain": "Continuation",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-self-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-state-",
      "category": "attributes",
      "const": false,
      "definition": "std::atomic<state_type> batt::Task::state_",
      "explicit": false,
      "fullname": "batt::Task::state_",
      "hasDetails": false,
      "initializer": "{kNeedSignal}",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1197,
        "column": 17,
        "file": "batteries/async/task_decl.hpp",
        "line": 1197
      },
      "name": "state_",
      "override": false,
      "refid": "classbatt_1_1Task_1a4f9a73a0b4acd1242aec3ab89ea9741a",
      "static": false,
      "strong": false,
      "title": "state_",
      "type": "std::atomic< [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type) >",
      "typePlain": "std::atomic< state_type >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-state-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-priority-",
      "category": "attributes",
      "const": false,
      "definition": "std::atomic<Priority::value_type> batt::Task::priority_",
      "explicit": false,
      "fullname": "batt::Task::priority_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1201,
        "column": 17,
        "file": "batteries/async/task_decl.hpp",
        "line": 1201
      },
      "name": "priority_",
      "override": false,
      "refid": "classbatt_1_1Task_1adb6c5b0edf69b14b8b1df0a60d5a328f",
      "static": false,
      "strong": false,
      "title": "priority_",
      "type": "std::atomic< Priority::value_type >",
      "typePlain": "std::atomic< Priority::value_type >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-priority-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-sleep-timer-",
      "category": "attributes",
      "const": false,
      "definition": "Optional<boost::asio::deadline_timer> batt::Task::sleep_timer_",
      "explicit": false,
      "fullname": "batt::Task::sleep_timer_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1205,
        "column": 14,
        "file": "batteries/async/task_decl.hpp",
        "line": 1205
      },
      "name": "sleep_timer_",
      "override": false,
      "refid": "classbatt_1_1Task_1a150e0b29b23dcae32ec92ebbe0ab55a0",
      "static": false,
      "strong": false,
      "title": "sleep_timer_",
      "type": "[Optional](/_autogen/Classes/classbatt_1_1Optional/)< boost::asio::deadline_timer >",
      "typePlain": "Optional< boost::asio::deadline_timer >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-sleep-timer-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-stack-trace-",
      "category": "attributes",
      "const": false,
      "definition": "Optional<boost::stacktrace::stacktrace> batt::Task::stack_trace_",
      "explicit": false,
      "fullname": "batt::Task::stack_trace_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1212,
        "column": 14,
        "file": "batteries/async/task_decl.hpp",
        "line": 1212
      },
      "name": "stack_trace_",
      "override": false,
      "refid": "classbatt_1_1Task_1a2cad10254761d7b2e6fc3fed8dce01be",
      "static": false,
      "strong": false,
      "title": "stack_trace_",
      "type": "[Optional](/_autogen/Classes/classbatt_1_1Optional/)< boost::stacktrace::stacktrace >",
      "typePlain": "Optional< boost::stacktrace::stacktrace >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-stack-trace-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-completion-handlers-",
      "category": "attributes",
      "const": false,
      "definition": "HandlerList batt::Task::completion_handlers_",
      "explicit": false,
      "fullname": "batt::Task::completion_handlers_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1216,
        "column": 6,
        "file": "batteries/async/task_decl.hpp",
        "line": 1216
      },
      "name": "completion_handlers_",
      "override": false,
      "refid": "classbatt_1_1Task_1ad2ed84221aa1d95ecd4f5ac1c23f9bc1",
      "static": false,
      "strong": false,
      "title": "completion_handlers_",
      "type": "HandlerList",
      "typePlain": "HandlerList",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-completion-handlers-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-activate-memory-",
      "category": "attributes",
      "const": false,
      "definition": "HandlerMemory<kHandlerMemoryBytes> batt::Task::activate_memory_",
      "explicit": false,
      "fullname": "batt::Task::activate_memory_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1221,
        "column": 19,
        "file": "batteries/async/task_decl.hpp",
        "line": 1221
      },
      "name": "activate_memory_",
      "override": false,
      "refid": "classbatt_1_1Task_1a47b957de1196a3d016c1dff04b90198c",
      "static": false,
      "strong": false,
      "title": "activate_memory_",
      "type": "[HandlerMemory](/_autogen/Classes/classbatt_1_1HandlerMemory/)< [kHandlerMemoryBytes](/_autogen/Classes/classbatt_1_1Task/#variable-khandlermemorybytes) >",
      "typePlain": "HandlerMemory< kHandlerMemoryBytes >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-activate-memory-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-stack-base-",
      "category": "attributes",
      "const": false,
      "definition": "const volatile u8* batt::Task::stack_base_",
      "explicit": false,
      "fullname": "batt::Task::stack_base_",
      "hasDetails": false,
      "initializer": "= nullptr",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1226,
        "column": 23,
        "file": "batteries/async/task_decl.hpp",
        "line": 1226
      },
      "name": "stack_base_",
      "override": false,
      "refid": "classbatt_1_1Task_1ae9323a99b7726bcaa057e07f03fe6821",
      "static": false,
      "strong": false,
      "title": "stack_base_",
      "type": "const volatile u8 *",
      "typePlain": "const volatile u8 *",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-stack-base-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-is-preempted-",
      "category": "attributes",
      "const": false,
      "definition": "bool batt::Task::is_preempted_",
      "explicit": false,
      "fullname": "batt::Task::is_preempted_",
      "hasDetails": false,
      "initializer": "= false",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1232,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1232
      },
      "name": "is_preempted_",
      "override": false,
      "refid": "classbatt_1_1Task_1a8c5de390bb368b0a982152ec4ad193cd",
      "static": false,
      "strong": false,
      "title": "is_preempted_",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-is-preempted-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-is-inside-work-fn-",
      "category": "attributes",
      "const": false,
      "definition": "bool batt::Task::is_inside_work_fn_",
      "explicit": false,
      "fullname": "batt::Task::is_inside_work_fn_",
      "hasDetails": false,
      "initializer": "= false",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1236,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1236
      },
      "name": "is_inside_work_fn_",
      "override": false,
      "refid": "classbatt_1_1Task_1a5507b5816713ed26a546ce7174c3f8bc",
      "static": false,
      "strong": false,
      "title": "is_inside_work_fn_",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-is-inside-work-fn-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-suspend-count-",
      "category": "attributes",
      "const": false,
      "definition": "volatile usize batt::Task::suspend_count_",
      "explicit": false,
      "fullname": "batt::Task::suspend_count_",
      "hasDetails": false,
      "initializer": "= 0",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1240,
        "column": 20,
        "file": "batteries/async/task_decl.hpp",
        "line": 1240
      },
      "name": "suspend_count_",
      "override": false,
      "refid": "classbatt_1_1Task_1a44d2c464b34465af4aaf2535d65f1026",
      "static": false,
      "strong": false,
      "title": "suspend_count_",
      "type": "usize",
      "typePlain": "usize",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-suspend-count-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-resume-count-",
      "category": "attributes",
      "const": false,
      "definition": "volatile usize batt::Task::resume_count_",
      "explicit": false,
      "fullname": "batt::Task::resume_count_",
      "hasDetails": false,
      "initializer": "= 0",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1244,
        "column": 20,
        "file": "batteries/async/task_decl.hpp",
        "line": 1244
      },
      "name": "resume_count_",
      "override": false,
      "refid": "classbatt_1_1Task_1a5d2e0aa3bfd62fb140d5d5f0170416a4",
      "static": false,
      "strong": false,
      "title": "resume_count_",
      "type": "usize",
      "typePlain": "usize",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-resume-count-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-child-tasks-",
      "category": "attributes",
      "const": false,
      "definition": "ConcurrentTaskList batt::Task::child_tasks_",
      "explicit": false,
      "fullname": "batt::Task::child_tasks_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1248,
        "column": 24,
        "file": "batteries/async/task_decl.hpp",
        "line": 1248
      },
      "name": "child_tasks_",
      "override": false,
      "refid": "classbatt_1_1Task_1abfcc1cda76df3caaead61544346c298c",
      "static": false,
      "strong": false,
      "title": "child_tasks_",
      "type": "[ConcurrentTaskList](/_autogen/Classes/classbatt_1_1Task_1_1ConcurrentTaskList/)",
      "typePlain": "ConcurrentTaskList",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-child-tasks-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-parent-task-list-",
      "category": "attributes",
      "const": false,
      "definition": "ConcurrentTaskList& batt::Task::parent_task_list_",
      "explicit": false,
      "fullname": "batt::Task::parent_task_list_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1252,
        "column": 24,
        "file": "batteries/async/task_decl.hpp",
        "line": 1252
      },
      "name": "parent_task_list_",
      "override": false,
      "refid": "classbatt_1_1Task_1aa4c64e30bf8627eef270af51d23a96ee",
      "static": false,
      "strong": false,
      "title": "parent_task_list_",
      "type": "[ConcurrentTaskList](/_autogen/Classes/classbatt_1_1Task_1_1ConcurrentTaskList/) &",
      "typePlain": "ConcurrentTaskList &",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-parent-task-list-",
      "visibility": "private"
    }
  ],
  "privateClasses": [
    {
      "anchor": "",
      "category": "classes",
      "fullname": "batt::Task::SpinLockGuard",
      "kind": "class",
      "language": "cpp",
      "name": "batt::Task::SpinLockGuard",
      "refid": "classbatt_1_1Task_1_1SpinLockGuard",
      "title": "batt::Task::SpinLockGuard",
      "url": "/_autogen/Classes/classbatt_1_1Task_1_1SpinLockGuard/",
      "visibility": "private"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "batt::Task::Trampoline",
      "kind": "class",
      "language": "cpp",
      "name": "batt::Task::Trampoline",
      "refid": "classbatt_1_1Task_1_1Trampoline",
      "title": "batt::Task::Trampoline",
      "url": "/_autogen/Classes/classbatt_1_1Task_1_1Trampoline/",
      "visibility": "private"
    }
  ],
  "privateFunctions": [
    {
      "abstract": false,
      "anchor": "#function-next-id",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "i32 batt::Task::next_id",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::next_id",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 53,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 49,
        "column": 16,
        "file": "batteries/async/task_decl.hpp",
        "line": 1030
      },
      "name": "next_id",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a6c523418e584daa7c7aee2d4d558eb06",
      "static": true,
      "strong": false,
      "title": "next_id",
      "type": "i32",
      "typePlain": "i32",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-next-id",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-current-ptr",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Task * batt::Task::current_ptr",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::current_ptr",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 60,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 57,
        "column": 17,
        "file": "batteries/async/task_decl.hpp",
        "line": 1032
      },
      "name": "current_ptr",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a17c544ae7806a6b27df7058e2a5942a0",
      "static": true,
      "strong": false,
      "title": "current_ptr",
      "type": "[Task](/_autogen/Classes/classbatt_1_1Task/) *",
      "typePlain": "Task *",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-current-ptr",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-spawn-impl",
      "argsString": "(ConcurrentTaskList &parent_task_list, TaskCtorArgs &&... task_ctor_args)",
      "brief": "Launch a [Task](/_autogen/Classes/classbatt_1_1Task/) that is a child of this one. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static void batt::Task::spawn_impl",
      "deleted": false,
      "details": "The new task will automatically be joined when this [Task](/_autogen/Classes/classbatt_1_1Task/) terminates. ",
      "explicit": false,
      "fullname": "batt::Task::spawn_impl",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 1045,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1038,
        "column": 17,
        "file": "batteries/async/task_decl.hpp",
        "line": 1038
      },
      "name": "spawn_impl",
      "override": false,
      "params": [
        {
          "name": "parent_task_list",
          "type": "[ConcurrentTaskList](/_autogen/Classes/classbatt_1_1Task_1_1ConcurrentTaskList/) &",
          "typePlain": "ConcurrentTaskList &"
        },
        {
          "name": "task_ctor_args",
          "type": "TaskCtorArgs &&...",
          "typePlain": "TaskCtorArgs &&..."
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a25c39a7fd3b88722f1a65c8a6c3faf4d",
      "static": true,
      "strong": false,
      "summary": "Launch a Task that is a child of this one. ",
      "templateParams": [
        {
          "name": "TaskCtorArgs",
          "type": "typename...",
          "typePlain": "typename..."
        }
      ],
      "title": "spawn_impl",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-spawn-impl",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-pre-body-fn-entry",
      "argsString": "(Continuation &&parent) noexcept",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::pre_body_fn_entry",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::pre_body_fn_entry",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 147,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 130,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1052
      },
      "name": "pre_body_fn_entry",
      "override": false,
      "params": [
        {
          "name": "parent",
          "type": "Continuation &&",
          "typePlain": "Continuation &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a779f2990dc48c8df831fb100e2e34123",
      "static": false,
      "strong": false,
      "title": "pre_body_fn_entry",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-pre-body-fn-entry",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-post-body-fn-exit",
      "argsString": "() noexcept",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Continuation batt::Task::post_body_fn_exit",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::post_body_fn_exit",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 165,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 151,
        "column": 18,
        "file": "batteries/async/task_decl.hpp",
        "line": 1056
      },
      "name": "post_body_fn_exit",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a38b3f8bf9b8f70c32c30dd7ee4cff138",
      "static": false,
      "strong": false,
      "title": "post_body_fn_exit",
      "type": "Continuation",
      "typePlain": "Continuation",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-post-body-fn-exit",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-yield-impl",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::yield_impl",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::yield_impl",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 418,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 398,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1060
      },
      "name": "yield_impl",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ad3b17f88e81e03bc85754eabcb3d5973",
      "static": false,
      "strong": false,
      "title": "yield_impl",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-yield-impl",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-sleep-impl",
      "argsString": "(const boost::posix_time::time_duration &duration)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "ErrorCode batt::Task::sleep_impl",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::sleep_impl",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 232,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 205,
        "column": 15,
        "file": "batteries/async/task_decl.hpp",
        "line": 1065
      },
      "name": "sleep_impl",
      "override": false,
      "params": [
        {
          "name": "duration",
          "type": "const boost::posix_time::time_duration &",
          "typePlain": "const boost::posix_time::time_duration &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ae68b191d78e98666d5420aad452db175",
      "static": false,
      "strong": false,
      "title": "sleep_impl",
      "type": "ErrorCode",
      "typePlain": "ErrorCode",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-sleep-impl",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-schedule-to-run",
      "argsString": "(state_type observed_state, bool force_post=false)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::schedule_to_run",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::schedule_to_run",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 347,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 323,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1072
      },
      "name": "schedule_to_run",
      "override": false,
      "params": [
        {
          "name": "observed_state",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        },
        {
          "defval": "false",
          "defvalPlain": "false",
          "name": "force_post",
          "type": "bool",
          "typePlain": "bool"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a32c478a5148933d213ef0481568ffde3",
      "static": false,
      "strong": false,
      "title": "schedule_to_run",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-schedule-to-run",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-run",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Task::IsDone batt::Task::run",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::run",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 385,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 351,
        "column": 12,
        "file": "batteries/async/task_decl.hpp",
        "line": 1079
      },
      "name": "run",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a91a0f9e017a11dd7dde5cb4ea7a59de4",
      "static": false,
      "strong": false,
      "title": "run",
      "type": "[IsDone](/_autogen/Classes/classbatt_1_1StrongType/)",
      "typePlain": "IsDone",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-run",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-resume-impl",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::resume_impl",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::resume_impl",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 394,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 389,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1083
      },
      "name": "resume_impl",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a66bb3ae9d7a418b1aefbb6540defec1f",
      "static": false,
      "strong": false,
      "title": "resume_impl",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-resume-impl",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-await-impl",
      "argsString": "(Fn &&fn)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "R batt::Task::await_impl",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::await_impl",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 1113,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 1089,
        "column": 7,
        "file": "batteries/async/task_decl.hpp",
        "line": 1089
      },
      "name": "await_impl",
      "override": false,
      "params": [
        {
          "name": "fn",
          "type": "Fn &&",
          "typePlain": "Fn &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a8235110572c70d4a43f16bd149e74c55",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename R",
          "typePlain": "typename R"
        },
        {
          "name": "",
          "type": "typename Fn",
          "typePlain": "typename Fn"
        }
      ],
      "title": "await_impl",
      "type": "R",
      "typePlain": "R",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await-impl",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-handle-event",
      "argsString": "(state_type event_mask)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::handle_event",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::handle_event",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 319,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 298,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1122
      },
      "name": "handle_event",
      "override": false,
      "params": [
        {
          "name": "event_mask",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a97293723114320bd680028667bf7e8af",
      "static": false,
      "strong": false,
      "title": "handle_event",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-handle-event",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-spin-lock",
      "argsString": "(state_type lock_mask)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "u32 batt::Task::spin_lock",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::spin_lock",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 436,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 422,
        "column": 16,
        "file": "batteries/async/task_decl.hpp",
        "line": 1131
      },
      "name": "spin_lock",
      "override": false,
      "params": [
        {
          "name": "lock_mask",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a48321e3cd9f15e0dfe371307d54bbe25",
      "static": false,
      "strong": false,
      "title": "spin_lock",
      "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-spin-lock",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-try-spin-lock",
      "argsString": "(state_type lock_mask, state_type &prior_state)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "bool batt::Task::try_spin_lock",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::try_spin_lock",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 444,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 440,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1136
      },
      "name": "try_spin_lock",
      "override": false,
      "params": [
        {
          "name": "lock_mask",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        },
        {
          "name": "prior_state",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type) &",
          "typePlain": "state_type &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a7f99220530ec3891e3a354c2a8d719f0",
      "static": false,
      "strong": false,
      "title": "try_spin_lock",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-try-spin-lock",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-spin-unlock",
      "argsString": "(state_type lock_mask)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::spin_unlock",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::spin_unlock",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 451,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 448,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1142
      },
      "name": "spin_unlock",
      "override": false,
      "params": [
        {
          "name": "lock_mask",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1adccb398985c2b26dd2e573f3f4a7480e",
      "static": false,
      "strong": false,
      "title": "spin_unlock",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-spin-unlock",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-try-dump-stack-trace",
      "argsString": "(bool force, std::ostream &out=std::cerr)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "bool batt::Task::try_dump_stack_trace",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::try_dump_stack_trace",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 552,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 479,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1147
      },
      "name": "try_dump_stack_trace",
      "override": false,
      "params": [
        {
          "name": "force",
          "type": "bool",
          "typePlain": "bool"
        },
        {
          "defval": "std::cerr",
          "defvalPlain": "std::cerr",
          "name": "out",
          "type": "std::ostream &",
          "typePlain": "std::ostream &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a46f16bb12e19171148dcb566a47eae0f",
      "static": false,
      "strong": false,
      "title": "try_dump_stack_trace",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-try-dump-stack-trace",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-activate-via-post",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::activate_via_post",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::activate_via_post",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 571,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 568,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1151
      },
      "name": "activate_via_post",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ad55df661c57e8b8fb951b3b55cc9404a",
      "static": false,
      "strong": false,
      "title": "activate_via_post",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-activate-via-post",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-activate-via-dispatch",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::activate_via_dispatch",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::activate_via_dispatch",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 578,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 575,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1155
      },
      "name": "activate_via_dispatch",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a4c69c31f6b317c35d13373faa5476799",
      "static": false,
      "strong": false,
      "title": "activate_via_dispatch",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-activate-via-dispatch",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-make-activation-handler",
      "argsString": "(bool via_post)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "auto batt::Task::make_activation_handler",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::make_activation_handler",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 564,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 556,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1160
      },
      "name": "make_activation_handler",
      "override": false,
      "params": [
        {
          "name": "via_post",
          "type": "bool",
          "typePlain": "bool"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a86ea72f3570e1cb23e687c577552861a",
      "static": false,
      "strong": false,
      "title": "make_activation_handler",
      "type": "auto",
      "typePlain": "auto",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-make-activation-handler",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-join-child-tasks",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::join_child_tasks",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::join_child_tasks",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 177,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 169,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1164
      },
      "name": "join_child_tasks",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a74b24c0cee0c928e339077d5df0459c6",
      "static": false,
      "strong": false,
      "title": "join_child_tasks",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-join-child-tasks",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-run-completion-handlers",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::run_completion_handlers",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::run_completion_handlers",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 201,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 181,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 1168
      },
      "name": "run_completion_handlers",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a5a5126867a2a2ebb41bca57e2facdc3f",
      "static": false,
      "strong": false,
      "title": "run_completion_handlers",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-run-completion-handlers",
      "virtual": false,
      "visibility": "private"
    }
  ],
  "publicAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-kdefaultstacksize",
      "brief": "The default stack size. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr StackSize batt::Task::kDefaultStackSize",
      "details": "Be generous and let the MMU take care of the rest... ",
      "explicit": false,
      "fullname": "batt::Task::kDefaultStackSize",
      "hasDetails": true,
      "initializer": "= StackSize{8 * kMiB}",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 150,
        "column": 32,
        "file": "batteries/async/task_decl.hpp",
        "line": 150
      },
      "name": "kDefaultStackSize",
      "override": false,
      "refid": "classbatt_1_1Task_1acd8a48edbaa29a720d2d6042e331d45d",
      "static": true,
      "strong": false,
      "summary": "The default stack size. ",
      "title": "kDefaultStackSize",
      "type": "constexpr [StackSize](/_autogen/Classes/classbatt_1_1StrongType/)",
      "typePlain": "constexpr StackSize",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kdefaultstacksize",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kdefaultstacktype",
      "brief": "The default stack type. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr StackType batt::Task::kDefaultStackType",
      "explicit": false,
      "fullname": "batt::Task::kDefaultStackType",
      "hasDetails": false,
      "initializer": "= StackType::kFixedSize",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 154,
        "column": 32,
        "file": "batteries/async/task_decl.hpp",
        "line": 154
      },
      "name": "kDefaultStackType",
      "override": false,
      "refid": "classbatt_1_1Task_1a7ee21461f88310afd9aa8cbab8d1dd11",
      "static": true,
      "strong": false,
      "summary": "The default stack type. ",
      "title": "kDefaultStackType",
      "type": "constexpr StackType",
      "typePlain": "constexpr StackType",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kdefaultstacktype",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kdefaultdeferstart",
      "brief": "By default, tasks start immediately upon construction. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr DeferStart batt::Task::kDefaultDeferStart",
      "explicit": false,
      "fullname": "batt::Task::kDefaultDeferStart",
      "hasDetails": false,
      "initializer": "= DeferStart{false}",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 158,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 158
      },
      "name": "kDefaultDeferStart",
      "override": false,
      "refid": "classbatt_1_1Task_1aee854c692dfba2b432a5f44452a0b4ea",
      "static": true,
      "strong": false,
      "summary": "By default, tasks start immediately upon construction. ",
      "title": "kDefaultDeferStart",
      "type": "constexpr [DeferStart](/_autogen/Classes/classbatt_1_1StrongType/)",
      "typePlain": "constexpr DeferStart",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kdefaultdeferstart",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kmaxnestingdepth",
      "brief": "The upper bound on [nesting_depth](). ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::Task::kMaxNestingDepth",
      "details": "When scheduling a task to run via `dispatch` would increase the nesting depth on the current thread to greater than [kMaxNestingDepth](/_autogen/Classes/classbatt_1_1Task/#variable-kmaxnestingdepth), `post` is used instead. ",
      "explicit": false,
      "fullname": "batt::Task::kMaxNestingDepth",
      "hasDetails": true,
      "initializer": "= 8",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 294,
        "column": 28,
        "file": "batteries/async/task_decl.hpp",
        "line": 294
      },
      "name": "kMaxNestingDepth",
      "override": false,
      "refid": "classbatt_1_1Task_1a8c18c589ecce118dd2218a91833dd0d2",
      "static": true,
      "strong": false,
      "summary": "The upper bound on nesting_depth. ",
      "title": "kMaxNestingDepth",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kmaxnestingdepth",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-khandlermemorybytes",
      "brief": "The number of bytes to statically allocate for handler memory buffers. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::Task::kHandlerMemoryBytes",
      "explicit": false,
      "fullname": "batt::Task::kHandlerMemoryBytes",
      "hasDetails": false,
      "initializer": "= 128",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 298,
        "column": 28,
        "file": "batteries/async/task_decl.hpp",
        "line": 298
      },
      "name": "kHandlerMemoryBytes",
      "override": false,
      "refid": "classbatt_1_1Task_1ab34feea5ce7e2596c0067c29fa4359ef",
      "static": true,
      "strong": false,
      "summary": "The number of bytes to statically allocate for handler memory buffers. ",
      "title": "kHandlerMemoryBytes",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-khandlermemorybytes",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kneedsignal",
      "brief": "Set when code within the task requests a signal, because it is awaiting some external async event. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kNeedSignal",
      "explicit": false,
      "fullname": "batt::Task::kNeedSignal",
      "hasDetails": false,
      "initializer": "= state_type{1} << 0",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 304,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 304
      },
      "name": "kNeedSignal",
      "override": false,
      "refid": "classbatt_1_1Task_1ac0d7dfc3d03d77967cf4ecde83c14be5",
      "static": true,
      "strong": false,
      "summary": "Set when code within the task requests a signal, because it is awaiting some external async event. ",
      "title": "kNeedSignal",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kneedsignal",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-khavesignal",
      "brief": "Set when the continuation generated by an `await` is invoked. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kHaveSignal",
      "explicit": false,
      "fullname": "batt::Task::kHaveSignal",
      "hasDetails": false,
      "initializer": "= state_type{1} << 1",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 308,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 308
      },
      "name": "kHaveSignal",
      "override": false,
      "refid": "classbatt_1_1Task_1a97a3230687ec09fc7a42156ff0d39a47",
      "static": true,
      "strong": false,
      "summary": "Set when the continuation generated by an await is invoked. ",
      "title": "kHaveSignal",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-khavesignal",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-ksuspended",
      "brief": "Set when the task is not currently running. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kSuspended",
      "explicit": false,
      "fullname": "batt::Task::kSuspended",
      "hasDetails": false,
      "initializer": "= state_type{1} << 2",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 312,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 312
      },
      "name": "kSuspended",
      "override": false,
      "refid": "classbatt_1_1Task_1ac8bfc313f0158dd52e6598eb605cfdb8",
      "static": true,
      "strong": false,
      "summary": "Set when the task is not currently running. ",
      "title": "kSuspended",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-ksuspended",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kterminated",
      "brief": "Indicates the task has finished execution. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kTerminated",
      "explicit": false,
      "fullname": "batt::Task::kTerminated",
      "hasDetails": false,
      "initializer": "= state_type{1} << 3",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 316,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 316
      },
      "name": "kTerminated",
      "override": false,
      "refid": "classbatt_1_1Task_1a2c48205d32934804d673816dc341e7b3",
      "static": true,
      "strong": false,
      "summary": "Indicates the task has finished execution. ",
      "title": "kTerminated",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kterminated",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kstacktrace",
      "brief": "Set to request that the task collect a stack trace the next time it resumes. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kStackTrace",
      "explicit": false,
      "fullname": "batt::Task::kStackTrace",
      "hasDetails": false,
      "initializer": "= state_type{1} << 4",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 320,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 320
      },
      "name": "kStackTrace",
      "override": false,
      "refid": "classbatt_1_1Task_1a879dc39d4a196fa018bb05be467a8089",
      "static": true,
      "strong": false,
      "summary": "Set to request that the task collect a stack trace the next time it resumes. ",
      "title": "kStackTrace",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kstacktrace",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-ksleeptimerlock",
      "brief": "Spin-lock bit to serialize access to the sleep timer member of the [Task](/_autogen/Classes/classbatt_1_1Task/). ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kSleepTimerLock",
      "explicit": false,
      "fullname": "batt::Task::kSleepTimerLock",
      "hasDetails": false,
      "initializer": "= state_type{1} << 5",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 324,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 324
      },
      "name": "kSleepTimerLock",
      "override": false,
      "refid": "classbatt_1_1Task_1a8f356626cf6f3407c0d55d365a969f30",
      "static": true,
      "strong": false,
      "summary": "Spin-lock bit to serialize access to the sleep timer member of the Task. ",
      "title": "kSleepTimerLock",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-ksleeptimerlock",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kcompletionhandlerslock",
      "brief": "Spin-lock bit to serialize access to the completions handlers list. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kCompletionHandlersLock",
      "explicit": false,
      "fullname": "batt::Task::kCompletionHandlersLock",
      "hasDetails": false,
      "initializer": "= state_type{1} << 6",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 328,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 328
      },
      "name": "kCompletionHandlersLock",
      "override": false,
      "refid": "classbatt_1_1Task_1ab5759d806fedb786726b8c88379a2d5b",
      "static": true,
      "strong": false,
      "summary": "Spin-lock bit to serialize access to the completions handlers list. ",
      "title": "kCompletionHandlersLock",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kcompletionhandlerslock",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-ksleeptimerlocksuspend",
      "brief": "Used to save the value of the [kSleepTimerLock](/_autogen/Classes/classbatt_1_1Task/#variable-ksleeptimerlock) bit when the [Task](/_autogen/Classes/classbatt_1_1Task/) is suspended (e.g., in `await` or `yield`). ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kSleepTimerLockSuspend",
      "details": "The [Task](/_autogen/Classes/classbatt_1_1Task/) should not hold any spinlocks while it is suspended, so we don't deadlock. Rather, the sleep timer lock is temporarily released while suspended and then re-acquired when the task is resumed. ",
      "explicit": false,
      "fullname": "batt::Task::kSleepTimerLockSuspend",
      "hasDetails": true,
      "initializer": "= state_type{1} << 7",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 335,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 335
      },
      "name": "kSleepTimerLockSuspend",
      "override": false,
      "refid": "classbatt_1_1Task_1aa0afb114de155c1c20775150b2f62c99",
      "static": true,
      "strong": false,
      "summary": "Used to save the value of the kSleepTimerLock bit when the Task is suspended (e.g., in await or yield). ",
      "title": "kSleepTimerLockSuspend",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-ksleeptimerlocksuspend",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kcompletionhandlersclosed",
      "brief": "State bit to indicate that completion handlers should not be added to the list, but called immediately. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kCompletionHandlersClosed",
      "explicit": false,
      "fullname": "batt::Task::kCompletionHandlersClosed",
      "hasDetails": false,
      "initializer": "= state_type{1} << 8",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 340,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 340
      },
      "name": "kCompletionHandlersClosed",
      "override": false,
      "refid": "classbatt_1_1Task_1af03d0caf68a33343d5560cd79cb2ebeb",
      "static": true,
      "strong": false,
      "summary": "State bit to indicate that completion handlers should not be added to the list, but called immediately. ",
      "title": "kCompletionHandlersClosed",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kcompletionhandlersclosed",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kinitialized",
      "brief": "State bit that indicates all fields have been initialized. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kInitialized",
      "explicit": false,
      "fullname": "batt::Task::kInitialized",
      "hasDetails": false,
      "initializer": "= state_type{1} << 9",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 344,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 344
      },
      "name": "kInitialized",
      "override": false,
      "refid": "classbatt_1_1Task_1ab831f3e532c26dc1e7ebaf222fa83e72",
      "static": true,
      "strong": false,
      "summary": "State bit that indicates all fields have been initialized. ",
      "title": "kInitialized",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kinitialized",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kstarted",
      "brief": "State bit that indicates all fields have been initialized. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr state_type batt::Task::kStarted",
      "explicit": false,
      "fullname": "batt::Task::kStarted",
      "hasDetails": false,
      "initializer": "= state_type{1} << 10",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 348,
        "column": 33,
        "file": "batteries/async/task_decl.hpp",
        "line": 348
      },
      "name": "kStarted",
      "override": false,
      "refid": "classbatt_1_1Task_1a824a7231100e667e543b4a1e83212a22",
      "static": true,
      "strong": false,
      "summary": "State bit that indicates all fields have been initialized. ",
      "title": "kStarted",
      "type": "constexpr [state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
      "typePlain": "constexpr state_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-kstarted",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-knumstateflags",
      "brief": "The number of state flags defined above. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::Task::kNumStateFlags",
      "explicit": false,
      "fullname": "batt::Task::kNumStateFlags",
      "hasDetails": false,
      "initializer": "= 11",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 352,
        "column": 28,
        "file": "batteries/async/task_decl.hpp",
        "line": 352
      },
      "name": "kNumStateFlags",
      "override": false,
      "refid": "classbatt_1_1Task_1af13c7211d85753c29b8e6ca337b01f20",
      "static": true,
      "strong": false,
      "summary": "The number of state flags defined above. ",
      "title": "kNumStateFlags",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-knumstateflags",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-debug-info",
      "category": "attributes",
      "const": false,
      "definition": "DebugInfoFrame* batt::Task::debug_info",
      "explicit": false,
      "fullname": "batt::Task::debug_info",
      "hasDetails": false,
      "initializer": "= nullptr",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 980,
        "column": 20,
        "file": "batteries/async/task_decl.hpp",
        "line": 980
      },
      "name": "debug_info",
      "override": false,
      "refid": "classbatt_1_1Task_1a42d43e8ce09aa6f4833f640817951981",
      "static": false,
      "strong": false,
      "title": "debug_info",
      "type": "[DebugInfoFrame](/_autogen/Classes/classbatt_1_1DebugInfoFrame/) *",
      "typePlain": "DebugInfoFrame *",
      "url": "/_autogen/Classes/classbatt_1_1Task/#variable-debug-info",
      "visibility": "public"
    }
  ],
  "publicClasses": [
    {
      "anchor": "",
      "brief": "Thread-safe list of tasks. ",
      "category": "classes",
      "fullname": "batt::Task::ConcurrentTaskList",
      "kind": "class",
      "language": "cpp",
      "name": "batt::Task::ConcurrentTaskList",
      "refid": "classbatt_1_1Task_1_1ConcurrentTaskList",
      "summary": "Thread-safe list of tasks. ",
      "title": "batt::Task::ConcurrentTaskList",
      "url": "/_autogen/Classes/classbatt_1_1Task_1_1ConcurrentTaskList/",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "Stack trace and debug information collected from a [Task](/_autogen/Classes/classbatt_1_1Task/). ",
      "category": "classes",
      "fullname": "batt::Task::DebugTrace",
      "kind": "struct",
      "language": "cpp",
      "name": "batt::Task::DebugTrace",
      "refid": "structbatt_1_1Task_1_1DebugTrace",
      "summary": "Stack trace and debug information collected from a Task. ",
      "title": "batt::Task::DebugTrace",
      "url": "/_autogen/Classes/structbatt_1_1Task_1_1DebugTrace/",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "[Optional]() params for [Task](/_autogen/Classes/classbatt_1_1Task/) creation. ",
      "category": "classes",
      "fullname": "batt::Task::Options",
      "kind": "struct",
      "language": "cpp",
      "name": "batt::Task::Options",
      "refid": "structbatt_1_1Task_1_1Options",
      "summary": "Optional params for Task creation. ",
      "title": "batt::Task::Options",
      "url": "/_autogen/Classes/structbatt_1_1Task_1_1Options/",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-strong-typedef-default-value",
      "argsString": "(DeferStart_TAG *)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "constexpr bool batt::Task::strong_typedef_default_value",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::strong_typedef_default_value",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 95,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 95,
        "column": 39,
        "file": "batteries/async/task_decl.hpp",
        "line": 95
      },
      "name": "strong_typedef_default_value",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "DeferStart_TAG *",
          "typePlain": "DeferStart_TAG *"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a0927b2398711e1b2ada4f257e7838583",
      "static": false,
      "strong": false,
      "title": "strong_typedef_default_value",
      "type": "constexpr bool",
      "typePlain": "constexpr bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-strong-typedef-default-value",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-strong-typedef-default-value",
      "argsString": "(Priority_TAG *)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "constexpr i32 batt::Task::strong_typedef_default_value",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::strong_typedef_default_value",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 103,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 103,
        "column": 38,
        "file": "batteries/async/task_decl.hpp",
        "line": 103
      },
      "name": "strong_typedef_default_value",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "Priority_TAG *",
          "typePlain": "Priority_TAG *"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a9ddb4f01f282fbc049793f0c403c7463",
      "static": false,
      "strong": false,
      "title": "strong_typedef_default_value",
      "type": "constexpr i32",
      "typePlain": "constexpr i32",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-strong-typedef-default-value",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-strong-typedef-default-value",
      "argsString": "(IsDone_TAG *)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "constexpr bool batt::Task::strong_typedef_default_value",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::strong_typedef_default_value",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 107,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 107,
        "column": 39,
        "file": "batteries/async/task_decl.hpp",
        "line": 107
      },
      "name": "strong_typedef_default_value",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "IsDone_TAG *",
          "typePlain": "IsDone_TAG *"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a1c88c84e8d9aa94a1552caf6c3fb6777",
      "static": false,
      "strong": false,
      "title": "strong_typedef_default_value",
      "type": "constexpr bool",
      "typePlain": "constexpr bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-strong-typedef-default-value",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-task",
      "argsString": "(const Task &)=delete",
      "brief": "[Task](/_autogen/Classes/classbatt_1_1Task/) is not copy-constructible. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::Task::Task",
      "deleted": true,
      "explicit": false,
      "fullname": "batt::Task::Task",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 5,
        "file": "batteries/async/task_decl.hpp",
        "line": 742
      },
      "name": "Task",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "const [Task](/_autogen/Classes/classbatt_1_1Task/) &",
          "typePlain": "const Task &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1adca9f23eaf81e4e295208ccd3e431b1f",
      "static": false,
      "strong": false,
      "summary": "Task is not copy-constructible. ",
      "title": "Task",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-task",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator=",
      "argsString": "(const Task &)=delete",
      "brief": "[Task](/_autogen/Classes/classbatt_1_1Task/) is not copy-assignable. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Task& batt::Task::operator=",
      "deleted": true,
      "explicit": false,
      "fullname": "batt::Task::operator=",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 746
      },
      "name": "operator=",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "const [Task](/_autogen/Classes/classbatt_1_1Task/) &",
          "typePlain": "const Task &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1aea66d03604655d985f9f0c717ce5d460",
      "static": false,
      "strong": false,
      "summary": "Task is not copy-assignable. ",
      "title": "operator=",
      "type": "[Task](/_autogen/Classes/classbatt_1_1Task/) &",
      "typePlain": "Task &",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-operator=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-task",
      "argsString": "(const boost::asio::any_io_executor &ex, StackSize stack_size, BodyFn &&body_fn) noexcept",
      "brief": "Creates a new [Task](/_autogen/Classes/classbatt_1_1Task/) with a custom stack size. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::Task::Task",
      "deleted": false,
      "details": "DEPRECATED - pass stack_size _after_ body_fn. ",
      "explicit": true,
      "fullname": "batt::Task::Task",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 755,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 752,
        "column": 14,
        "file": "batteries/async/task_decl.hpp",
        "line": 752
      },
      "name": "Task",
      "override": false,
      "params": [
        {
          "name": "ex",
          "type": "const boost::asio::any_io_executor &",
          "typePlain": "const boost::asio::any_io_executor &"
        },
        {
          "name": "stack_size",
          "type": "[StackSize](/_autogen/Classes/classbatt_1_1StrongType/)",
          "typePlain": "StackSize"
        },
        {
          "name": "body_fn",
          "type": "BodyFn &&",
          "typePlain": "BodyFn &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1aa71b1950cb707b381c62a9a667b79d9f",
      "static": false,
      "strong": false,
      "summary": "Creates a new Task with a custom stack size. ",
      "templateParams": [
        {
          "defval": "void()",
          "defvalPlain": "void()",
          "name": "",
          "type": "typename BodyFn",
          "typePlain": "typename BodyFn"
        }
      ],
      "title": "Task",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-task",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-task",
      "argsString": "(const boost::asio::any_io_executor &ex, BodyFn &&body_fn, Args &&... args) noexcept",
      "brief": "Create a new [Task](/_autogen/Classes/classbatt_1_1Task/), optionally setting name, stack size, stack type, and priority. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::Task::Task",
      "deleted": false,
      "details": "The default priority for a [Task](/_autogen/Classes/classbatt_1_1Task/) is the current task priority plus 100; this means that a new [Task](/_autogen/Classes/classbatt_1_1Task/) by default will always \"soft-preempt\" the currently running task. ",
      "explicit": true,
      "fullname": "batt::Task::Task",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 766,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 763,
        "column": 14,
        "file": "batteries/async/task_decl.hpp",
        "line": 763
      },
      "name": "Task",
      "override": false,
      "params": [
        {
          "name": "ex",
          "type": "const boost::asio::any_io_executor &",
          "typePlain": "const boost::asio::any_io_executor &"
        },
        {
          "name": "body_fn",
          "type": "BodyFn &&",
          "typePlain": "BodyFn &&"
        },
        {
          "name": "args",
          "type": "Args &&...",
          "typePlain": "Args &&..."
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ae8d28b11cf43777fc139f88359e3a046",
      "static": false,
      "strong": false,
      "summary": "Create a new Task, optionally setting name, stack size, stack type, and priority. ",
      "templateParams": [
        {
          "defval": "void()",
          "defvalPlain": "void()",
          "name": "",
          "type": "typename BodyFn",
          "typePlain": "typename BodyFn"
        },
        {
          "name": "Args",
          "type": "typename...",
          "typePlain": "typename..."
        },
        {
          "defval": "EnableIfNoShadow<[Options](/_autogen/Classes/structbatt_1_1Task_1_1Options/), Args...>",
          "defvalPlain": "EnableIfNoShadow<Options, Args...>",
          "name": "",
          "type": "typename",
          "typePlain": "typename"
        }
      ],
      "title": "Task",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-task",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-task",
      "argsString": "(const boost::asio::any_io_executor &ex, BodyFn &&body_fn) noexcept",
      "brief": "Create a new [Task](/_autogen/Classes/classbatt_1_1Task/), with default options. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::Task::Task",
      "deleted": false,
      "explicit": true,
      "fullname": "batt::Task::Task",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 774,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 771,
        "column": 14,
        "file": "batteries/async/task_decl.hpp",
        "line": 771
      },
      "name": "Task",
      "override": false,
      "params": [
        {
          "name": "ex",
          "type": "const boost::asio::any_io_executor &",
          "typePlain": "const boost::asio::any_io_executor &"
        },
        {
          "name": "body_fn",
          "type": "BodyFn &&",
          "typePlain": "BodyFn &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1aa048a0082fa6db80206ace61beab905a",
      "static": false,
      "strong": false,
      "summary": "Create a new Task, with default options. ",
      "templateParams": [
        {
          "defval": "void()",
          "defvalPlain": "void()",
          "name": "",
          "type": "typename BodyFn",
          "typePlain": "typename BodyFn"
        }
      ],
      "title": "Task",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-task",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-task",
      "argsString": "(ConcurrentTaskList &parent_task_list, const boost::asio::any_io_executor &ex, BodyFn &&body_fn, Args &&... args) noexcept",
      "brief": "Internal use only. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::Task::Task",
      "deleted": false,
      "details": "Supported Args... types:\n\n* std::string&& name\n* StackSize\n* StackType\n* Priority\n* DeferStart ",
      "explicit": true,
      "fullname": "batt::Task::Task",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 790,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 786,
        "column": 14,
        "file": "batteries/async/task_decl.hpp",
        "line": 786
      },
      "name": "Task",
      "override": false,
      "params": [
        {
          "name": "parent_task_list",
          "type": "[ConcurrentTaskList](/_autogen/Classes/classbatt_1_1Task_1_1ConcurrentTaskList/) &",
          "typePlain": "ConcurrentTaskList &"
        },
        {
          "name": "ex",
          "type": "const boost::asio::any_io_executor &",
          "typePlain": "const boost::asio::any_io_executor &"
        },
        {
          "name": "body_fn",
          "type": "BodyFn &&",
          "typePlain": "BodyFn &&"
        },
        {
          "name": "args",
          "type": "Args &&...",
          "typePlain": "Args &&..."
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1aa9b27df391f49129a66fbc0024c43b98",
      "static": false,
      "strong": false,
      "summary": "Internal use only. ",
      "templateParams": [
        {
          "defval": "void()",
          "defvalPlain": "void()",
          "name": "",
          "type": "typename BodyFn",
          "typePlain": "typename BodyFn"
        },
        {
          "name": "Args",
          "type": "typename...",
          "typePlain": "typename..."
        },
        {
          "defval": "EnableIfNoShadow<[Options](/_autogen/Classes/structbatt_1_1Task_1_1Options/), Args...>",
          "defvalPlain": "EnableIfNoShadow<Options, Args...>",
          "name": "",
          "type": "typename",
          "typePlain": "typename"
        }
      ],
      "title": "Task",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-task",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-task",
      "argsString": "(ConcurrentTaskList &parent_task_list, const boost::asio::any_io_executor &ex, BodyFn &&body_fn, OptionsT &&options) noexcept",
      "brief": "Internal use only. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::Task::Task",
      "deleted": false,
      "explicit": true,
      "fullname": "batt::Task::Task",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 843,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 796,
        "column": 14,
        "file": "batteries/async/task_decl.hpp",
        "line": 796
      },
      "name": "Task",
      "override": false,
      "params": [
        {
          "name": "parent_task_list",
          "type": "[ConcurrentTaskList](/_autogen/Classes/classbatt_1_1Task_1_1ConcurrentTaskList/) &",
          "typePlain": "ConcurrentTaskList &"
        },
        {
          "name": "ex",
          "type": "const boost::asio::any_io_executor &",
          "typePlain": "const boost::asio::any_io_executor &"
        },
        {
          "name": "body_fn",
          "type": "BodyFn &&",
          "typePlain": "BodyFn &&"
        },
        {
          "name": "options",
          "type": "OptionsT &&",
          "typePlain": "OptionsT &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a4a1207a5d2e559f1b5bb97872bbbf182",
      "static": false,
      "strong": false,
      "summary": "Internal use only. ",
      "templateParams": [
        {
          "defval": "void()",
          "defvalPlain": "void()",
          "name": "",
          "type": "typename BodyFn",
          "typePlain": "typename BodyFn"
        },
        {
          "name": "",
          "type": "typename OptionsT",
          "typePlain": "typename OptionsT"
        },
        {
          "defval": "std::enable_if_t<std::is_same_v<std::decay_t<OptionsT>, [Options](/_autogen/Classes/structbatt_1_1Task_1_1Options/)>>",
          "defvalPlain": "std::enable_if_t<std::is_same_v<std::decay_t<OptionsT>, Options>>",
          "name": "",
          "type": "typename",
          "typePlain": "typename"
        }
      ],
      "title": "Task",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-task",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-~task",
      "argsString": "() noexcept",
      "brief": "Destroys the [Task](/_autogen/Classes/classbatt_1_1Task/). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::Task::~Task",
      "deleted": false,
      "details": "A [Task](/_autogen/Classes/classbatt_1_1Task/) must be terminated when it is destroyed, or the program will panic. Calling [Task::join()](/_autogen/Classes/classbatt_1_1Task/#function-join) prior to destroying a [Task](/_autogen/Classes/classbatt_1_1Task/) object is sufficient. ",
      "explicit": false,
      "fullname": "batt::Task::~Task",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 126,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 117,
        "column": 5,
        "file": "batteries/async/task_decl.hpp",
        "line": 850
      },
      "name": "~Task",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ac994d07ee69a06e2b4eb92a799122275",
      "static": false,
      "strong": false,
      "summary": "Destroys the Task. ",
      "title": "~Task",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-~task",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-is-started",
      "argsString": "() const",
      "brief": "Returns true iff this task has been started. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "bool batt::Task::is_started",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::is_started",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 857,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 854,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 854
      },
      "name": "is_started",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a5f89c8cd0f2b375639db80b538747b7f",
      "static": false,
      "strong": false,
      "summary": "Returns true iff this task has been started. ",
      "title": "is_started",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-is-started",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-start",
      "argsString": "()",
      "brief": "Starts the task if not already started. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::start",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::start",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 878,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 861,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 861
      },
      "name": "start",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a8f858793a497cb48f18cd514d8b427ae",
      "static": false,
      "strong": false,
      "summary": "Starts the task if not already started. ",
      "title": "start",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-start",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-id",
      "argsString": "() const",
      "brief": "The unique id number assigned to this [Task](/_autogen/Classes/classbatt_1_1Task/). ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "i32 batt::Task::id",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::id",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 885,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 882,
        "column": 9,
        "file": "batteries/async/task_decl.hpp",
        "line": 882
      },
      "name": "id",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ab5352a46d81c78d94bb68b215926ae61",
      "static": false,
      "strong": false,
      "summary": "The unique id number assigned to this Task. ",
      "title": "id",
      "type": "i32",
      "typePlain": "i32",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-id",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-name",
      "argsString": "() const",
      "brief": "The user-friendly name assigned to this [Task](/_autogen/Classes/classbatt_1_1Task/). ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "std::string_view batt::Task::name",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::name",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 892,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 889,
        "column": 22,
        "file": "batteries/async/task_decl.hpp",
        "line": 889
      },
      "name": "name",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a9a9fb0a12f7b80afdf578c42dc7a4384",
      "static": false,
      "strong": false,
      "summary": "The user-friendly name assigned to this Task. ",
      "title": "name",
      "type": "std::string_view",
      "typePlain": "std::string_view",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-name",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-get-priority",
      "argsString": "() const",
      "brief": "The scheduling priority of this task; higher == more urgent. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "Priority batt::Task::get_priority",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::get_priority",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 899,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 896,
        "column": 14,
        "file": "batteries/async/task_decl.hpp",
        "line": 896
      },
      "name": "get_priority",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a8379f6b3cafdeb725d93563a1bb723be",
      "static": false,
      "strong": false,
      "summary": "The scheduling priority of this task; higher == more urgent. ",
      "title": "get_priority",
      "type": "[Priority](/_autogen/Classes/classbatt_1_1StrongType/)",
      "typePlain": "Priority",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-get-priority",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-set-priority",
      "argsString": "(Priority new_priority)",
      "brief": "Assigns a new priority to this [Task](/_autogen/Classes/classbatt_1_1Task/). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::set_priority",
      "deleted": false,
      "details": "This method will not trigger a yield or activation; it only affects future scheduling decisions. ",
      "explicit": false,
      "fullname": "batt::Task::set_priority",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 907,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 904,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 904
      },
      "name": "set_priority",
      "override": false,
      "params": [
        {
          "name": "new_priority",
          "type": "[Priority](/_autogen/Classes/classbatt_1_1StrongType/)",
          "typePlain": "Priority"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a9bc3a5148e577446e3a9125a85784dd8",
      "static": false,
      "strong": false,
      "summary": "Assigns a new priority to this Task. ",
      "title": "set_priority",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-set-priority",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-stack-pos",
      "argsString": "() const",
      "brief": "The current byte offset of the top of this [Task](/_autogen/Classes/classbatt_1_1Task/)'s stack. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "usize batt::Task::stack_pos",
      "deleted": false,
      "details": "This value is only meaningful if this method is called while on the current task. Usually you should just call [batt::Task::current_stack_pos()](/_autogen/Classes/classbatt_1_1Task/#function-current-stack-pos) instead. ",
      "explicit": false,
      "fullname": "batt::Task::stack_pos",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 240,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 236,
        "column": 11,
        "file": "batteries/async/task_decl.hpp",
        "line": 914
      },
      "name": "stack_pos",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a0b3d4d430a90db499313f5d753242fd6",
      "static": false,
      "strong": false,
      "summary": "The current byte offset of the top of this Task's stack. ",
      "title": "stack_pos",
      "type": "usize",
      "typePlain": "usize",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-stack-pos",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-stack-pos-of",
      "argsString": "(const volatile void *ptr) const",
      "brief": "The byte offset of the given pointer relative to the base of this [Task](/_autogen/Classes/classbatt_1_1Task/)'s stack; return value is undefined if `ptr` is not on the stack of this Task! ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "usize batt::Task::stack_pos_of",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::stack_pos_of",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 252,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 244,
        "column": 11,
        "file": "batteries/async/task_decl.hpp",
        "line": 919
      },
      "name": "stack_pos_of",
      "override": false,
      "params": [
        {
          "name": "ptr",
          "type": "const volatile void *",
          "typePlain": "const volatile void *"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ada85661272c5ecbdf7696369b2905d67",
      "static": false,
      "strong": false,
      "summary": "The byte offset of the given pointer relative to the base of this Task's stack; return value is undefined if ptr is not on the stack of this Task! ",
      "title": "stack_pos_of",
      "type": "usize",
      "typePlain": "usize",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-stack-pos-of",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-join",
      "argsString": "()",
      "brief": "Blocks the current Task/thread until this [Task](/_autogen/Classes/classbatt_1_1Task/) has finished. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::join",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::join",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 264,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 256,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 923
      },
      "name": "join",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ac5a48413d0ddf2e51845c7bee9369b61",
      "static": false,
      "strong": false,
      "summary": "Blocks the current Task/thread until this Task has finished. ",
      "title": "join",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-join",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-try-join",
      "argsString": "()",
      "brief": "Returns whether or not this [Task](/_autogen/Classes/classbatt_1_1Task/) is finished. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Task::IsDone batt::Task::try_join",
      "deleted": false,
      "details": "Equivalent to [is_done()](/_autogen/Classes/classbatt_1_1Task/#function-is-done).\n\nThis function is guaranteed never to block. ",
      "explicit": false,
      "fullname": "batt::Task::try_join",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 271,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 268,
        "column": 12,
        "file": "batteries/async/task_decl.hpp",
        "line": 929
      },
      "name": "try_join",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a7e5763bcbe474902f5b4e4e58a792227",
      "static": false,
      "strong": false,
      "summary": "Returns whether or not this Task is finished. ",
      "title": "try_join",
      "type": "[IsDone](/_autogen/Classes/classbatt_1_1StrongType/)",
      "typePlain": "IsDone",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-try-join",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-wake",
      "argsString": "()",
      "brief": "Interrupts a call to [sleep]() on this [Task](/_autogen/Classes/classbatt_1_1Task/). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "bool batt::Task::wake",
      "deleted": false,
      "details": "Has no effect if the [Task](/_autogen/Classes/classbatt_1_1Task/) is not inside [sleep](/_autogen/Classes/classbatt_1_1Task/#function-sleep). ",
      "explicit": false,
      "fullname": "batt::Task::wake",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 294,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 282,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 934
      },
      "name": "wake",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a189048dde1c0a57cbadd20bf80b28277",
      "static": false,
      "strong": false,
      "summary": "Interrupts a call to sleep on this Task. ",
      "title": "wake",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-wake",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-get-executor",
      "argsString": "() const",
      "brief": "The executor passed in to this [Task](/_autogen/Classes/classbatt_1_1Task/) at construction time. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "executor_type batt::Task::get_executor",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::get_executor",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 941,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 938,
        "column": 19,
        "file": "batteries/async/task_decl.hpp",
        "line": 938
      },
      "name": "get_executor",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a5633d4005b129fa1dcb1a5831bd9cd5e",
      "static": false,
      "strong": false,
      "summary": "The executor passed in to this Task at construction time. ",
      "title": "get_executor",
      "type": "[executor_type](/_autogen/Classes/classbatt_1_1Task/#using-executor-type)",
      "typePlain": "executor_type",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-get-executor",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-is-done",
      "argsString": "() const",
      "brief": "Returns whether or not this [Task](/_autogen/Classes/classbatt_1_1Task/) is finished. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "Task::IsDone batt::Task::is_done",
      "deleted": false,
      "details": "Equivalent to [try_join()](/_autogen/Classes/classbatt_1_1Task/#function-try-join). ",
      "explicit": false,
      "fullname": "batt::Task::is_done",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 278,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 275,
        "column": 12,
        "file": "batteries/async/task_decl.hpp",
        "line": 945
      },
      "name": "is_done",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a47d638a3a7c0b9d03c75372157a3e74b",
      "static": false,
      "strong": false,
      "summary": "Returns whether or not this Task is finished. ",
      "title": "is_done",
      "type": "[IsDone](/_autogen/Classes/classbatt_1_1StrongType/)",
      "typePlain": "IsDone",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-is-done",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-call-when-done",
      "argsString": "(F &&handler)",
      "brief": "Attaches a listener callback to the task; this callback will be invoked when the task completes execution. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::call_when_done",
      "deleted": false,
      "details": "This method can be thought of as an asynchronous version of [batt::Task::join](/_autogen/Classes/classbatt_1_1Task/#function-join).",
      "explicit": false,
      "fullname": "batt::Task::call_when_done",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 976,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 956,
        "column": 10,
        "file": "batteries/async/task_decl.hpp",
        "line": 956
      },
      "name": "call_when_done",
      "override": false,
      "paramList": [
        {
          "name": "handler",
          "text": "The handler to invoke when the [Task](/_autogen/Classes/classbatt_1_1Task/) has finished; should have the signature `#!cpp void()`"
        }
      ],
      "params": [
        {
          "name": "handler",
          "type": "F &&",
          "typePlain": "F &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1aa6f92294a6e8971aaab71c1ee8afb82c",
      "static": false,
      "strong": false,
      "summary": "Attaches a listener callback to the task; this callback will be invoked when the task completes execution. ",
      "templateParams": [
        {
          "defval": "void()",
          "defvalPlain": "void()",
          "name": "",
          "type": "typename F",
          "typePlain": "typename F"
        }
      ],
      "title": "call_when_done",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-call-when-done",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-default-name",
      "argsString": "()",
      "brief": "The name given to a [batt::Task](/_autogen/Classes/classbatt_1_1Task/) if none is passed into the constructor. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static std::string batt::Task::default_name",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::default_name",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 165,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 162,
        "column": 24,
        "file": "batteries/async/task_decl.hpp",
        "line": 162
      },
      "name": "default_name",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a01ff6ba85723b47fd74a9ade9ab27cd9",
      "static": true,
      "strong": false,
      "summary": "The name given to a batt::Task if none is passed into the constructor. ",
      "title": "default_name",
      "type": "std::string",
      "typePlain": "std::string",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-default-name",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-default-priority",
      "argsString": "()",
      "brief": "Returns the default task priority (based on the current task priority). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static Priority batt::Task::default_priority",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::default_priority",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 172,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 169,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 169
      },
      "name": "default_priority",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a6e5673ddb2ad9ff57bd64b1eba8bcf19",
      "static": true,
      "strong": false,
      "summary": "Returns the default task priority (based on the current task priority). ",
      "title": "default_priority",
      "type": "[Priority](/_autogen/Classes/classbatt_1_1StrongType/)",
      "typePlain": "Priority",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-default-priority",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-nesting-depth",
      "argsString": "()",
      "brief": "Thread-local counter that limits stack growth while running Tasks via `dispatch`. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "usize & batt::Task::nesting_depth",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::nesting_depth",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 45,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 41,
        "column": 18,
        "file": "batteries/async/task_decl.hpp",
        "line": 287
      },
      "name": "nesting_depth",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1aedf7b0eaac5641faef3b8de9395c91ca",
      "static": true,
      "strong": false,
      "summary": "Thread-local counter that limits stack growth while running Tasks via dispatch. ",
      "title": "nesting_depth",
      "type": "usize &",
      "typePlain": "usize &",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-nesting-depth",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-is-post-init-state",
      "argsString": "(state_type state)",
      "brief": "Returns true iff the given state indicates the [Task](/_autogen/Classes/classbatt_1_1Task/) has been initialized. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static constexpr bool batt::Task::is_post_init_state",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::is_post_init_state",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 370,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 367,
        "column": 27,
        "file": "batteries/async/task_decl.hpp",
        "line": 367
      },
      "name": "is_post_init_state",
      "override": false,
      "params": [
        {
          "name": "state",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ab2cc9d9137fc208cb57bda7f4c87b59c",
      "static": true,
      "strong": false,
      "summary": "Returns true iff the given state indicates the Task has been initialized. ",
      "title": "is_post_init_state",
      "type": "constexpr bool",
      "typePlain": "constexpr bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-is-post-init-state",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-is-pre-start-state",
      "argsString": "(state_type state)",
      "brief": "Returns true iff the given state is initialized but not started. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static constexpr bool batt::Task::is_pre_start_state",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::is_pre_start_state",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 379,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 374,
        "column": 27,
        "file": "batteries/async/task_decl.hpp",
        "line": 374
      },
      "name": "is_pre_start_state",
      "override": false,
      "params": [
        {
          "name": "state",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a3872be01cf8c5e7f8aefc8a455e65883",
      "static": true,
      "strong": false,
      "summary": "Returns true iff the given state is initialized but not started. ",
      "title": "is_pre_start_state",
      "type": "constexpr bool",
      "typePlain": "constexpr bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-is-pre-start-state",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-is-started-state",
      "argsString": "(state_type state)",
      "brief": "Returns true iff the given state is started. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static constexpr bool batt::Task::is_started_state",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::is_started_state",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 386,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 383,
        "column": 27,
        "file": "batteries/async/task_decl.hpp",
        "line": 383
      },
      "name": "is_started_state",
      "override": false,
      "params": [
        {
          "name": "state",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a73d50db4186893643c9f2a7cc2ff9449",
      "static": true,
      "strong": false,
      "summary": "Returns true iff the given state is started. ",
      "title": "is_started_state",
      "type": "constexpr bool",
      "typePlain": "constexpr bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-is-started-state",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-is-running-state",
      "argsString": "(state_type state)",
      "brief": "Returns true iff the given state is _not_ a suspended state. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static constexpr bool batt::Task::is_running_state",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::is_running_state",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 393,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 390,
        "column": 27,
        "file": "batteries/async/task_decl.hpp",
        "line": 390
      },
      "name": "is_running_state",
      "override": false,
      "params": [
        {
          "name": "state",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a36f6a88a2e927ac405941f15259f945a",
      "static": true,
      "strong": false,
      "summary": "Returns true iff the given state is not a suspended state. ",
      "title": "is_running_state",
      "type": "constexpr bool",
      "typePlain": "constexpr bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-is-running-state",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-is-ready-state",
      "argsString": "(state_type state)",
      "brief": "Returns true iff the task is not currently running, but is ready to be resumed. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static constexpr bool batt::Task::is_ready_state",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::is_ready_state",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 418,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 397,
        "column": 27,
        "file": "batteries/async/task_decl.hpp",
        "line": 397
      },
      "name": "is_ready_state",
      "override": false,
      "params": [
        {
          "name": "state",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1abd7042f8cd557197d69038423e14cdbe",
      "static": true,
      "strong": false,
      "summary": "Returns true iff the task is not currently running, but is ready to be resumed. ",
      "title": "is_ready_state",
      "type": "constexpr bool",
      "typePlain": "constexpr bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-is-ready-state",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-is-terminal-state",
      "argsString": "(state_type state)",
      "brief": "Returns true if the passed state represents a fully terminated task. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static constexpr bool batt::Task::is_terminal_state",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::is_terminal_state",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 426,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 422,
        "column": 27,
        "file": "batteries/async/task_decl.hpp",
        "line": 422
      },
      "name": "is_terminal_state",
      "override": false,
      "params": [
        {
          "name": "state",
          "type": "[state_type](/_autogen/Classes/classbatt_1_1Task/#using-state-type)",
          "typePlain": "state_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a0f285b6ab1b26300d10f1c65074adac4",
      "static": true,
      "strong": false,
      "summary": "Returns true if the passed state represents a fully terminated task. ",
      "title": "is_terminal_state",
      "type": "constexpr bool",
      "typePlain": "constexpr bool",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-is-terminal-state",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-all-tasks",
      "argsString": "()",
      "brief": "Returns a reference to the global task list. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "auto batt::Task::all_tasks",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::all_tasks",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 75,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 71,
        "column": 31,
        "file": "batteries/async/task_decl.hpp",
        "line": 443
      },
      "name": "all_tasks",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a98c1792b7d9ee1559ffb7cdbda955fc4",
      "static": true,
      "strong": false,
      "summary": "Returns a reference to the global task list. ",
      "title": "all_tasks",
      "type": "[ConcurrentTaskList](/_autogen/Classes/classbatt_1_1Task_1_1ConcurrentTaskList/) &",
      "typePlain": "ConcurrentTaskList &",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-all-tasks",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-current",
      "argsString": "()",
      "brief": "Returns a reference to the currently running [Task](/_autogen/Classes/classbatt_1_1Task/), if there is one. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Task & batt::Task::current",
      "deleted": false,
      "details": "WARNING: if this method is called outside of any [batt::Task](/_autogen/Classes/classbatt_1_1Task/), behavior is undefined. ",
      "explicit": false,
      "fullname": "batt::Task::current",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 67,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 64,
        "column": 17,
        "file": "batteries/async/task_decl.hpp",
        "line": 449
      },
      "name": "current",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ae1895e7301d61954079bd7e0fbd7e6b5",
      "static": true,
      "strong": false,
      "summary": "Returns a reference to the currently running Task, if there is one. ",
      "title": "current",
      "type": "[Task](/_autogen/Classes/classbatt_1_1Task/) &",
      "typePlain": "Task &",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-current",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-spawn",
      "argsString": "(CtorArgs &&... args)",
      "brief": "Launch a [Task](/_autogen/Classes/classbatt_1_1Task/) that is a child of the current one. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static void batt::Task::spawn",
      "deleted": false,
      "details": "The new task will automatically be joined when the current [Task](/_autogen/Classes/classbatt_1_1Task/) terminates. ",
      "explicit": false,
      "fullname": "batt::Task::spawn",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 463,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 455,
        "column": 17,
        "file": "batteries/async/task_decl.hpp",
        "line": 455
      },
      "name": "spawn",
      "override": false,
      "params": [
        {
          "name": "args",
          "type": "CtorArgs &&...",
          "typePlain": "CtorArgs &&..."
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1aa9c7bde0d6ca7887199d0e8cef6317b7",
      "static": true,
      "strong": false,
      "summary": "Launch a Task that is a child of the current one. ",
      "templateParams": [
        {
          "name": "CtorArgs",
          "type": "typename...",
          "typePlain": "typename..."
        }
      ],
      "title": "spawn",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-spawn",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-current-name",
      "argsString": "()",
      "brief": "Returns the current task name, or \"\" if there is no current task. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static std::string_view batt::Task::current_name",
      "deleted": false,
      "details": "Unlike [batt::Task::current()](/_autogen/Classes/classbatt_1_1Task/#function-current), this method is safe to call outside a task. ",
      "explicit": false,
      "fullname": "batt::Task::current_name",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 476,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 469,
        "column": 29,
        "file": "batteries/async/task_decl.hpp",
        "line": 469
      },
      "name": "current_name",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a398007eb7b117765f681601852b3d4e6",
      "static": true,
      "strong": false,
      "summary": "Returns the current task name, or \"\" if there is no current task. ",
      "title": "current_name",
      "type": "std::string_view",
      "typePlain": "std::string_view",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-current-name",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-current-id",
      "argsString": "()",
      "brief": "Returns the unique id number of the current [Task](/_autogen/Classes/classbatt_1_1Task/) or thread. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static i32 batt::Task::current_id",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::current_id",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 488,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 480,
        "column": 16,
        "file": "batteries/async/task_decl.hpp",
        "line": 480
      },
      "name": "current_id",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a354fb946ee975ec01e98739afb7786bf",
      "static": true,
      "strong": false,
      "summary": "Returns the unique id number of the current Task or thread. ",
      "title": "current_id",
      "type": "i32",
      "typePlain": "i32",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-current-id",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-current-stack-pos",
      "argsString": "()",
      "brief": "Returns the current stack position, if currently inside a task. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Optional< usize > batt::Task::current_stack_pos",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::current_stack_pos",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 99,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 92,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 494
      },
      "name": "current_stack_pos",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1af87816f280e46ebbe3d0001fad221c0c",
      "returns": [
        "If called from inside a task, the current stack position in bytes, else batt::None "
      ],
      "static": true,
      "strong": false,
      "summary": "Returns the current stack position, if currently inside a task. ",
      "title": "current_stack_pos",
      "type": "[Optional](/_autogen/Classes/classbatt_1_1Optional/)< usize >",
      "typePlain": "Optional< usize >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-current-stack-pos",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-current-stack-pos-of",
      "argsString": "(const volatile void *ptr)",
      "brief": "brief Returns the stack position of `ptr` relative to the current stack base, if currently inside a task. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Optional< usize > batt::Task::current_stack_pos_of",
      "deleted": false,
      "details": "NOTE: If `ptr` isn't actually on the current task's stack, then this function will still return a number, but it will be essentially a garbage value. It's up to the caller to make sure that `ptr` points at something on the task stack.",
      "explicit": false,
      "fullname": "batt::Task::current_stack_pos_of",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 110,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 103,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 505
      },
      "name": "current_stack_pos_of",
      "override": false,
      "params": [
        {
          "name": "ptr",
          "type": "const volatile void *",
          "typePlain": "const volatile void *"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ae2821bcc8615733e4b69efea6d5ea400",
      "returns": [
        "If called from inside a task, the stack offset in bytes of `ptr`, else batt::None "
      ],
      "static": true,
      "strong": false,
      "summary": "brief Returns the stack position of ptr relative to the current stack base, if currently inside a task. ",
      "title": "current_stack_pos_of",
      "type": "[Optional](/_autogen/Classes/classbatt_1_1Optional/)< usize >",
      "typePlain": "Optional< usize >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-current-stack-pos-of",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-backtrace-all",
      "argsString": "(bool force, std::ostream &out=std::cerr)",
      "brief": "Dumps stack traces and debug info from all Tasks and threads to stderr. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "i32 batt::Task::backtrace_all",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::backtrace_all",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 475,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 455,
        "column": 16,
        "file": "batteries/async/task_decl.hpp",
        "line": 516
      },
      "name": "backtrace_all",
      "override": false,
      "paramList": [
        {
          "name": "force",
          "text": "If true, then this function will attempt to dump debug information for running tasks, even though this may cause data races (if you're debugging a tricky threading issue, sometimes the risk of a crash is outweighed by the benefit of some additional clues about what's going on!)"
        }
      ],
      "params": [
        {
          "name": "force",
          "type": "bool",
          "typePlain": "bool"
        },
        {
          "defval": "std::cerr",
          "defvalPlain": "std::cerr",
          "name": "out",
          "type": "std::ostream &",
          "typePlain": "std::ostream &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ab1d0a881285cbf3d1c8467e3604b5ed2",
      "returns": [
        "The number of tasks dumped. "
      ],
      "static": true,
      "strong": false,
      "summary": "Dumps stack traces and debug info from all Tasks and threads to stderr. ",
      "title": "backtrace_all",
      "type": "i32",
      "typePlain": "i32",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-backtrace-all",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-yield",
      "argsString": "()",
      "brief": "Yields control from the current Task/thread, allowing other tasks to run. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Task::yield",
      "deleted": false,
      "details": "Suspends the current task and immediately schedules it to resume via `boost::asio::post`. ",
      "explicit": false,
      "fullname": "batt::Task::yield",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 88,
        "bodyFile": "batteries/async/task_impl.hpp",
        "bodyStart": 79,
        "column": 17,
        "file": "batteries/async/task_decl.hpp",
        "line": 522
      },
      "name": "yield",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1afdd8d980aed14f9e6519c1b3f0967dd5",
      "static": true,
      "strong": false,
      "summary": "Yields control from the current Task/thread, allowing other tasks to run. ",
      "title": "yield",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-yield",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-sleep",
      "argsString": "(const Duration &duration)",
      "brief": "Puts the current Task/thread to sleep for the specified duration. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static ErrorCode batt::Task::sleep",
      "deleted": false,
      "details": "This operation can be interrupted by a [batt::Task::wake()](/_autogen/Classes/classbatt_1_1Task/#function-wake), in which case a \"cancelled\" error code is returned instead of success (no error).\n\nThis method is safe to call outside a task; in this case, it is implemented via `std::this_task::sleep_for`.",
      "explicit": false,
      "fullname": "batt::Task::sleep",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 546,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 537,
        "column": 22,
        "file": "batteries/async/task_decl.hpp",
        "line": 537
      },
      "name": "sleep",
      "override": false,
      "params": [
        {
          "name": "duration",
          "type": "const Duration &",
          "typePlain": "const Duration &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1af0513531c8e3fcfcbb2cf549d982d124",
      "returns": [
        "`batt::ErrorCode{}` (no error) if the specified duration passed, else `boost::asio::error::operation_aborted` (indicating that [batt::Task::wake()](/_autogen/Classes/classbatt_1_1Task/#function-wake) was called on the given task) "
      ],
      "static": true,
      "strong": false,
      "summary": "Puts the current Task/thread to sleep for the specified duration. ",
      "templateParams": [
        {
          "defval": "boost::posix_time::ptime",
          "defvalPlain": "boost::posix_time::ptime",
          "name": "",
          "type": "typename Duration",
          "typePlain": "typename Duration"
        }
      ],
      "title": "sleep",
      "type": "ErrorCode",
      "typePlain": "ErrorCode",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-sleep",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await",
      "argsString": "(Fn &&fn)",
      "brief": "Suspends the current thread/Task until an asynchronous event occurs. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static R batt::Task::await",
      "deleted": false,
      "details": "The param `fn` is passed a continuation handler that will cause this [Task](/_autogen/Classes/classbatt_1_1Task/) to wake up, causing [await](/_autogen/Classes/classbatt_1_1Task/#function-await) to return an instance of type `R` constructed from the arguments passed to the handler. For example, `await` can be used to turn an async socket read into a synchronous call:\n\n\n\n```cpp\nboost::asio::ip::tcp::socket s;\n\nusing ReadResult = std::pair<boost::system::error_code, std::size_t>;\n\nReadResult r = Task::await<ReadResult>([&](auto&& handler) {\n    s.async_read_some(buffers, BATT_FORWARD(handler));\n  });\n\nif (r.first) {\n  std::cout << \"Error! ec=\" << r.first;\n} else {\n  std::cout << r.second << \" bytes were read.\";\n}\n```",
      "explicit": false,
      "fullname": "batt::Task::await",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 601,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 571,
        "column": 14,
        "file": "batteries/async/task_decl.hpp",
        "line": 571
      },
      "name": "await",
      "override": false,
      "params": [
        {
          "name": "fn",
          "type": "Fn &&",
          "typePlain": "Fn &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a72261d020f4a72e075109fce61812270",
      "static": true,
      "strong": false,
      "summary": "Suspends the current thread/Task until an asynchronous event occurs. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename R",
          "typePlain": "typename R"
        },
        {
          "name": "",
          "type": "typename Fn",
          "typePlain": "typename Fn"
        }
      ],
      "title": "await",
      "type": "R",
      "typePlain": "R",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await",
      "argsString": "(batt::StaticType< R >, Fn &&fn)",
      "brief": "Suspends the current thread/Task until an asynchronous event occurs. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static R batt::Task::await",
      "deleted": false,
      "details": "This overload takes the return type as an explicit formal parameter (instead of a template parameter). ",
      "explicit": false,
      "fullname": "batt::Task::await",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 614,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 611,
        "column": 14,
        "file": "batteries/async/task_decl.hpp",
        "line": 611
      },
      "name": "await",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "[batt::StaticType](/_autogen/Classes/structbatt_1_1StaticType/)< R >",
          "typePlain": "batt::StaticType< R >"
        },
        {
          "name": "fn",
          "type": "Fn &&",
          "typePlain": "Fn &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a490dc8163a734bf94912c5960f4a824b",
      "static": true,
      "strong": false,
      "summary": "Suspends the current thread/Task until an asynchronous event occurs. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename R",
          "typePlain": "typename R"
        },
        {
          "name": "",
          "type": "typename Fn",
          "typePlain": "typename Fn"
        }
      ],
      "title": "await",
      "type": "R",
      "typePlain": "R",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await",
      "argsString": "(const Future< T > &future_result)",
      "brief": "Suspends the current thread/Task until the passed [Future](/_autogen/Classes/classbatt_1_1Future/) is ready. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static StatusOr<T> batt::Task::await",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::await",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 624,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 619,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 619
      },
      "name": "await",
      "override": false,
      "params": [
        {
          "name": "future_result",
          "type": "const [Future](/_autogen/Classes/classbatt_1_1Future/)< T > &",
          "typePlain": "const Future< T > &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a579659070ad84e7c709976c2ab95f11a",
      "static": true,
      "strong": false,
      "summary": "Suspends the current thread/Task until the passed Future is ready. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename T",
          "typePlain": "typename T"
        }
      ],
      "title": "await",
      "type": "[StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< T >",
      "typePlain": "StatusOr< T >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await-read-some",
      "argsString": "(AsyncStream &s, BufferSequence &&buffers)",
      "brief": "Convenience function that calls `async_read_some` on the passed stream and awaits the result. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static IOResult<usize> batt::Task::await_read_some",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::await_read_some",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 634,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 629,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 629
      },
      "name": "await_read_some",
      "override": false,
      "params": [
        {
          "name": "s",
          "type": "AsyncStream &",
          "typePlain": "AsyncStream &"
        },
        {
          "name": "buffers",
          "type": "BufferSequence &&",
          "typePlain": "BufferSequence &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a48df94548ec2fd924310994e44185edb",
      "static": true,
      "strong": false,
      "summary": "Convenience function that calls async_read_some on the passed stream and awaits the result. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename AsyncStream",
          "typePlain": "typename AsyncStream"
        },
        {
          "name": "",
          "type": "typename BufferSequence",
          "typePlain": "typename BufferSequence"
        }
      ],
      "title": "await_read_some",
      "type": "[IOResult](/_autogen/Classes/classbatt_1_1IOResult/)< usize >",
      "typePlain": "IOResult< usize >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await-read-some",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await-read",
      "argsString": "(AsyncStream &s, BufferSequence &&buffers)",
      "brief": "Convenience function that calls `async_read` on the passed stream and awaits the result. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static IOResult<usize> batt::Task::await_read",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::await_read",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 644,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 639,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 639
      },
      "name": "await_read",
      "override": false,
      "params": [
        {
          "name": "s",
          "type": "AsyncStream &",
          "typePlain": "AsyncStream &"
        },
        {
          "name": "buffers",
          "type": "BufferSequence &&",
          "typePlain": "BufferSequence &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a1bf0a8a7ed7f6576ee01abdf6b3a08f4",
      "static": true,
      "strong": false,
      "summary": "Convenience function that calls async_read on the passed stream and awaits the result. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename AsyncStream",
          "typePlain": "typename AsyncStream"
        },
        {
          "name": "",
          "type": "typename BufferSequence",
          "typePlain": "typename BufferSequence"
        }
      ],
      "title": "await_read",
      "type": "[IOResult](/_autogen/Classes/classbatt_1_1IOResult/)< usize >",
      "typePlain": "IOResult< usize >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await-read",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await-write-some",
      "argsString": "(AsyncStream &s, BufferSequence &&buffers)",
      "brief": "Convenience function that calls `async_write_some` on the passed stream and awaits the result. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static IOResult<usize> batt::Task::await_write_some",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::await_write_some",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 654,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 649,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 649
      },
      "name": "await_write_some",
      "override": false,
      "params": [
        {
          "name": "s",
          "type": "AsyncStream &",
          "typePlain": "AsyncStream &"
        },
        {
          "name": "buffers",
          "type": "BufferSequence &&",
          "typePlain": "BufferSequence &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ab8e3f80c0e641fd205f7526d21f63db0",
      "static": true,
      "strong": false,
      "summary": "Convenience function that calls async_write_some on the passed stream and awaits the result. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename AsyncStream",
          "typePlain": "typename AsyncStream"
        },
        {
          "name": "",
          "type": "typename BufferSequence",
          "typePlain": "typename BufferSequence"
        }
      ],
      "title": "await_write_some",
      "type": "[IOResult](/_autogen/Classes/classbatt_1_1IOResult/)< usize >",
      "typePlain": "IOResult< usize >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await-write-some",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await-write",
      "argsString": "(AsyncStream &s, BufferSequence &&buffers)",
      "brief": "Convenience function that calls `async_write` on the passed stream and awaits the result. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static IOResult<usize> batt::Task::await_write",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::await_write",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 664,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 659,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 659
      },
      "name": "await_write",
      "override": false,
      "params": [
        {
          "name": "s",
          "type": "AsyncStream &",
          "typePlain": "AsyncStream &"
        },
        {
          "name": "buffers",
          "type": "BufferSequence &&",
          "typePlain": "BufferSequence &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ae8e34a2d4d91367126a455952ca5eff4",
      "static": true,
      "strong": false,
      "summary": "Convenience function that calls async_write on the passed stream and awaits the result. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename AsyncStream",
          "typePlain": "typename AsyncStream"
        },
        {
          "name": "",
          "type": "typename BufferSequence",
          "typePlain": "typename BufferSequence"
        }
      ],
      "title": "await_write",
      "type": "[IOResult](/_autogen/Classes/classbatt_1_1IOResult/)< usize >",
      "typePlain": "IOResult< usize >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await-write",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await-connect",
      "argsString": "(AsyncStream &s, const Endpoint &endpoint)",
      "brief": "Convenience function that calls `async_connect` on the passed stream and awaits the result. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static ErrorCode batt::Task::await_connect",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::await_connect",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 674,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 669,
        "column": 22,
        "file": "batteries/async/task_decl.hpp",
        "line": 669
      },
      "name": "await_connect",
      "override": false,
      "params": [
        {
          "name": "s",
          "type": "AsyncStream &",
          "typePlain": "AsyncStream &"
        },
        {
          "name": "endpoint",
          "type": "const Endpoint &",
          "typePlain": "const Endpoint &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a9374c3375e82ac5a360b1c28756ce608",
      "static": true,
      "strong": false,
      "summary": "Convenience function that calls async_connect on the passed stream and awaits the result. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename AsyncStream",
          "typePlain": "typename AsyncStream"
        },
        {
          "name": "",
          "type": "typename Endpoint",
          "typePlain": "typename Endpoint"
        }
      ],
      "title": "await_connect",
      "type": "ErrorCode",
      "typePlain": "ErrorCode",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await-connect",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await-accept",
      "argsString": "(AsyncAcceptor &a)",
      "brief": "Convenience function that calls `async_accept` on the passed stream and awaits the result. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static IOResult<StreamT> batt::Task::await_accept",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::await_accept",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 686,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 681,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 681
      },
      "name": "await_accept",
      "override": false,
      "params": [
        {
          "name": "a",
          "type": "AsyncAcceptor &",
          "typePlain": "AsyncAcceptor &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a8af83eb5ebd2049f7f755adbe038dc1a",
      "static": true,
      "strong": false,
      "summary": "Convenience function that calls async_accept on the passed stream and awaits the result. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename AsyncAcceptor",
          "typePlain": "typename AsyncAcceptor"
        },
        {
          "defval": "typename AsyncAcceptor::protocol_type",
          "defvalPlain": "typename AsyncAcceptor::protocol_type",
          "name": "",
          "type": "typename ProtocolT",
          "typePlain": "typename ProtocolT"
        },
        {
          "defval": "typename ProtocolT::socket",
          "defvalPlain": "typename ProtocolT::socket",
          "name": "",
          "type": "typename StreamT",
          "typePlain": "typename StreamT"
        }
      ],
      "title": "await_accept",
      "type": "[IOResult](/_autogen/Classes/classbatt_1_1IOResult/)< StreamT >",
      "typePlain": "IOResult< StreamT >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await-accept",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await-signal",
      "argsString": "(SignalSetT &signal_set)",
      "brief": "Convenience function that calls `async_wait` on the passed signal_set and awaits the result. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static IOResult<int> batt::Task::await_signal",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::await_signal",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 696,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 691,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 691
      },
      "name": "await_signal",
      "override": false,
      "params": [
        {
          "name": "signal_set",
          "type": "SignalSetT &",
          "typePlain": "SignalSetT &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1a90e522d76dc4ff75d2e704df847d33c5",
      "static": true,
      "strong": false,
      "summary": "Convenience function that calls async_wait on the passed signal_set and awaits the result. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename SignalSetT",
          "typePlain": "typename SignalSetT"
        }
      ],
      "title": "await_signal",
      "type": "[IOResult](/_autogen/Classes/classbatt_1_1IOResult/)< int >",
      "typePlain": "IOResult< int >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-await-signal",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-current-priority",
      "argsString": "()",
      "brief": "Returns the priority of the current [Task](/_autogen/Classes/classbatt_1_1Task/) (or the default priority if no [Task](/_autogen/Classes/classbatt_1_1Task/) is active). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static Priority batt::Task::current_priority",
      "deleted": false,
      "details": "NOTE: this function is safe to call outside of a task; in this case, the default priority (0) is returned. ",
      "explicit": false,
      "fullname": "batt::Task::current_priority",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 710,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 703,
        "column": 21,
        "file": "batteries/async/task_decl.hpp",
        "line": 703
      },
      "name": "current_priority",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1abbb67a6f049abb9fc1a604d88b24a25f",
      "static": true,
      "strong": false,
      "summary": "Returns the priority of the current Task (or the default priority if no Task is active). ",
      "title": "current_priority",
      "type": "[Priority](/_autogen/Classes/classbatt_1_1StrongType/)",
      "typePlain": "Priority",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-current-priority",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-inside-work-fn",
      "argsString": "()",
      "brief": "Returns true iff the current Task/thread is inside a [Worker]()'s work function. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static bool& batt::Task::inside_work_fn",
      "deleted": false,
      "details": "Used to avoid double-wait deadlocks on the same thread inside parallel algorithms. ",
      "explicit": false,
      "fullname": "batt::Task::inside_work_fn",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 724,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 715,
        "column": 17,
        "file": "batteries/async/task_decl.hpp",
        "line": 715
      },
      "name": "inside_work_fn",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1ae014b47795c00059fe11b1f94d730bee",
      "static": true,
      "strong": false,
      "summary": "Returns true iff the current Task/thread is inside a Worker's work function. ",
      "title": "inside_work_fn",
      "type": "bool &",
      "typePlain": "bool &",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-inside-work-fn",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-create-count",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static std::atomic<i64>& batt::Task::create_count",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::create_count",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 730,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 726,
        "column": 24,
        "file": "batteries/async/task_decl.hpp",
        "line": 726
      },
      "name": "create_count",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1acf779b903f1a9890a79458d594b1602e",
      "static": true,
      "strong": false,
      "title": "create_count",
      "type": "std::atomic< i64 > &",
      "typePlain": "std::atomic< i64 > &",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-create-count",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-destroy-count",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static std::atomic<i64>& batt::Task::destroy_count",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Task::destroy_count",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 736,
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 732,
        "column": 24,
        "file": "batteries/async/task_decl.hpp",
        "line": 732
      },
      "name": "destroy_count",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Task_1aa791566380bb86db329bd30881421d61",
      "static": true,
      "strong": false,
      "title": "destroy_count",
      "type": "std::atomic< i64 > &",
      "typePlain": "std::atomic< i64 > &",
      "url": "/_autogen/Classes/classbatt_1_1Task/#function-destroy-count",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#using-deferstart",
      "category": "types",
      "const": false,
      "definition": "using batt::Task::DeferStart =  ::batt::StrongType< bool , DeferStart_TAG >",
      "explicit": false,
      "fullname": "batt::Task::DeferStart",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 95,
        "column": 99,
        "file": "batteries/async/task_decl.hpp",
        "line": 95
      },
      "name": "DeferStart",
      "override": false,
      "refid": "classbatt_1_1Task_1acc54d85b8425b97fddf2026ec4e0fa34",
      "static": false,
      "strong": false,
      "title": "DeferStart",
      "type": "::[batt::StrongType](/_autogen/Classes/classbatt_1_1StrongType/)< bool, DeferStart_TAG >",
      "typePlain": "::batt::StrongType< bool, DeferStart_TAG >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#using-deferstart",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#using-state-type",
      "brief": "Integer type representing the atomic state of a [Task](/_autogen/Classes/classbatt_1_1Task/). ",
      "category": "types",
      "const": false,
      "definition": "using batt::Task::state_type =  u32",
      "explicit": false,
      "fullname": "batt::Task::state_type",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 99,
        "column": 5,
        "file": "batteries/async/task_decl.hpp",
        "line": 99
      },
      "name": "state_type",
      "override": false,
      "refid": "classbatt_1_1Task_1adcefb24674e86832dba4189b15dbfcb6",
      "static": false,
      "strong": false,
      "summary": "Integer type representing the atomic state of a Task. ",
      "title": "state_type",
      "type": "u32",
      "typePlain": "u32",
      "url": "/_autogen/Classes/classbatt_1_1Task/#using-state-type",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#using-priority",
      "category": "types",
      "const": false,
      "definition": "using batt::Task::Priority =  ::batt::StrongType< i32 , Priority_TAG >",
      "explicit": false,
      "fullname": "batt::Task::Priority",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 103,
        "column": 94,
        "file": "batteries/async/task_decl.hpp",
        "line": 103
      },
      "name": "Priority",
      "override": false,
      "refid": "classbatt_1_1Task_1af1cc2f5a140f14c9af0332da5106bf1a",
      "static": false,
      "strong": false,
      "title": "Priority",
      "type": "::[batt::StrongType](/_autogen/Classes/classbatt_1_1StrongType/)< i32, Priority_TAG >",
      "typePlain": "::batt::StrongType< i32, Priority_TAG >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#using-priority",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#using-isdone",
      "category": "types",
      "const": false,
      "definition": "using batt::Task::IsDone =  ::batt::StrongType< bool , IsDone_TAG >",
      "explicit": false,
      "fullname": "batt::Task::IsDone",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 107,
        "column": 99,
        "file": "batteries/async/task_decl.hpp",
        "line": 107
      },
      "name": "IsDone",
      "override": false,
      "refid": "classbatt_1_1Task_1ad1fec6142cb1a2311f1e80b4c68cca41",
      "static": false,
      "strong": false,
      "title": "IsDone",
      "type": "::[batt::StrongType](/_autogen/Classes/classbatt_1_1StrongType/)< bool, IsDone_TAG >",
      "typePlain": "::batt::StrongType< bool, IsDone_TAG >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#using-isdone",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#using-executor-type",
      "brief": "The executor for a [Task](/_autogen/Classes/classbatt_1_1Task/); this type is responsible for running the [Task](/_autogen/Classes/classbatt_1_1Task/) via `boost::asio::post` and/or `boost::asio::dispatch`. ",
      "category": "types",
      "const": false,
      "definition": "using batt::Task::executor_type =  boost::asio::any_io_executor",
      "explicit": false,
      "fullname": "batt::Task::executor_type",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 112,
        "column": 5,
        "file": "batteries/async/task_decl.hpp",
        "line": 112
      },
      "name": "executor_type",
      "override": false,
      "refid": "classbatt_1_1Task_1a3d0aa3ffd431da4b88a4730407d032fa",
      "static": false,
      "strong": false,
      "summary": "The executor for a Task; this type is responsible for running the Task via boost::asio::post and/or boost::asio::dispatch. ",
      "title": "executor_type",
      "type": "boost::asio::any_io_executor",
      "typePlain": "boost::asio::any_io_executor",
      "url": "/_autogen/Classes/classbatt_1_1Task/#using-executor-type",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#using-tasklist",
      "brief": "The type of a global linked list of tasks maintained by the Batteries runtime. ",
      "category": "types",
      "const": false,
      "definition": "using batt::Task::TaskList =  boost::intrusive::list<Task, boost::intrusive::constant_time_size<false> >",
      "explicit": false,
      "fullname": "batt::Task::TaskList",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 116,
        "column": 5,
        "file": "batteries/async/task_decl.hpp",
        "line": 116
      },
      "name": "TaskList",
      "override": false,
      "refid": "classbatt_1_1Task_1a4eda854137830319080c8466b6644d55",
      "static": false,
      "strong": false,
      "summary": "The type of a global linked list of tasks maintained by the Batteries runtime. ",
      "title": "TaskList",
      "type": "boost::intrusive::list< [Task](/_autogen/Classes/classbatt_1_1Task/), boost::intrusive::constant_time_size< false > >",
      "typePlain": "boost::intrusive::list< Task, boost::intrusive::constant_time_size< false > >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#using-tasklist",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#using-statebitset",
      "brief": "The bitset type for a state. ",
      "category": "types",
      "const": false,
      "definition": "using batt::Task::StateBitset =  std::bitset<kNumStateFlags>",
      "explicit": false,
      "fullname": "batt::Task::StateBitset",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/task_decl.hpp",
        "bodyStart": 363,
        "column": 5,
        "file": "batteries/async/task_decl.hpp",
        "line": 363
      },
      "name": "StateBitset",
      "override": false,
      "refid": "classbatt_1_1Task_1ae1e5d843ab1e5ede75427454c5b588e9",
      "static": false,
      "strong": false,
      "summary": "The bitset type for a state. ",
      "title": "StateBitset",
      "type": "std::bitset< [kNumStateFlags](/_autogen/Classes/classbatt_1_1Task/#variable-knumstateflags) >",
      "typePlain": "std::bitset< kNumStateFlags >",
      "url": "/_autogen/Classes/classbatt_1_1Task/#using-statebitset",
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1Task",
  "static": false,
  "strong": false,
  "summary": "A user-space cooperatively scheduled thread of control. ",
  "title": "batt::Task",
  "url": "/_autogen/Classes/classbatt_1_1Task/",
  "visibility": "public"
}