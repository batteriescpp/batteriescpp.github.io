{
  "abstract": false,
  "anchor": "",
  "baseClasses": [
    {
      "external": false,
      "name": "batt::WatchAtomic< i16 >",
      "privateAttributes": [
        {
          "abstract": false,
          "anchor": "#variable-value-",
          "category": "attributes",
          "const": false,
          "definition": "std::atomic<T> batt::WatchAtomic< T >::value_",
          "explicit": false,
          "fullname": "batt::WatchAtomic::value_",
          "hasDetails": false,
          "initializer": "{0}",
          "inline": false,
          "kind": "variable",
          "language": "cpp",
          "location": {
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 833,
            "column": 17,
            "file": "batteries/async/watch_decl.hpp",
            "line": 833
          },
          "name": "value_",
          "override": false,
          "refid": "classbatt_1_1WatchAtomic_1a053a88e5c91cf0795b2477a05101d21e",
          "static": false,
          "strong": false,
          "title": "value_",
          "type": "std::atomic< T >",
          "typePlain": "std::atomic< T >",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#variable-value-",
          "visibility": "private"
        },
        {
          "abstract": false,
          "anchor": "#variable-spin-state-",
          "category": "attributes",
          "const": false,
          "definition": "std::atomic<u32> batt::WatchAtomic< T >::spin_state_",
          "explicit": false,
          "fullname": "batt::WatchAtomic::spin_state_",
          "hasDetails": false,
          "initializer": "{kOpen}",
          "inline": false,
          "kind": "variable",
          "language": "cpp",
          "location": {
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 834,
            "column": 25,
            "file": "batteries/async/watch_decl.hpp",
            "line": 834
          },
          "name": "spin_state_",
          "override": false,
          "refid": "classbatt_1_1WatchAtomic_1a2504788c0d5c0814e92b652962d94d5a",
          "static": false,
          "strong": false,
          "title": "spin_state_",
          "type": "std::atomic< u32 >",
          "typePlain": "std::atomic< u32 >",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#variable-spin-state-",
          "visibility": "private"
        },
        {
          "abstract": false,
          "anchor": "#variable-observers-",
          "category": "attributes",
          "const": false,
          "definition": "HandlerList<StatusOr<T> > batt::WatchAtomic< T >::observers_",
          "explicit": false,
          "fullname": "batt::WatchAtomic::observers_",
          "hasDetails": false,
          "inline": false,
          "kind": "variable",
          "language": "cpp",
          "location": {
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 835,
            "column": 25,
            "file": "batteries/async/watch_decl.hpp",
            "line": 835
          },
          "name": "observers_",
          "override": false,
          "refid": "classbatt_1_1WatchAtomic_1a53431f2e9b76cc48c44913671e65a979",
          "static": false,
          "strong": false,
          "title": "observers_",
          "type": "HandlerList< [StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< T > >",
          "typePlain": "HandlerList< StatusOr< T > >",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#variable-observers-",
          "visibility": "private"
        }
      ],
      "privateFunctions": [
        {
          "abstract": false,
          "anchor": "#function-value",
          "argsString": "() noexcept",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "BATT_ALWAYS_INLINE std::atomic<T>& batt::WatchAtomic< T >::value",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::value",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 753,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 750,
            "column": 36,
            "file": "batteries/async/watch_decl.hpp",
            "line": 750
          },
          "name": "value",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1afbe9e5223459df536a239a7a4b36dcf9",
          "static": false,
          "strong": false,
          "title": "value",
          "type": "BATT_ALWAYS_INLINE std::atomic< T > &",
          "typePlain": "BATT_ALWAYS_INLINE std::atomic< T > &",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-value",
          "virtual": false,
          "visibility": "private"
        },
        {
          "abstract": false,
          "anchor": "#function-value",
          "argsString": "() const noexcept",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "BATT_ALWAYS_INLINE const std::atomic<T>& batt::WatchAtomic< T >::value",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::value",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 758,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 755,
            "column": 42,
            "file": "batteries/async/watch_decl.hpp",
            "line": 755
          },
          "name": "value",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a56d06764b65d9de6bb98cce892bcb146",
          "static": false,
          "strong": false,
          "title": "value",
          "type": "BATT_ALWAYS_INLINE const std::atomic< T > &",
          "typePlain": "BATT_ALWAYS_INLINE const std::atomic< T > &",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-value",
          "virtual": false,
          "visibility": "private"
        },
        {
          "abstract": false,
          "anchor": "#function-get-final-status",
          "argsString": "() const",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "Status batt::WatchAtomic< T >::get_final_status",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::get_final_status",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 776,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 760,
            "column": 12,
            "file": "batteries/async/watch_decl.hpp",
            "line": 760
          },
          "name": "get_final_status",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a8e9249271009924f33bb5ef8eafef9dc",
          "static": false,
          "strong": false,
          "title": "get_final_status",
          "type": "[Status](/_autogen/Classes/classbatt_1_1Status/)",
          "typePlain": "Status",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-get-final-status",
          "virtual": false,
          "visibility": "private"
        },
        {
          "abstract": false,
          "anchor": "#function-lock-observers",
          "argsString": "() const",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "u32 batt::WatchAtomic< T >::lock_observers",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::lock_observers",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 787,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 778,
            "column": 9,
            "file": "batteries/async/watch_decl.hpp",
            "line": 778
          },
          "name": "lock_observers",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a612b4442a0d75595f79c267d93bbf77d",
          "static": false,
          "strong": false,
          "title": "lock_observers",
          "type": "u32",
          "typePlain": "u32",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-lock-observers",
          "virtual": false,
          "visibility": "private"
        },
        {
          "abstract": false,
          "anchor": "#function-unlock-observers",
          "argsString": "(u32 desired_state) const",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "void batt::WatchAtomic< T >::unlock_observers",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::unlock_observers",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 792,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 789,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 789
          },
          "name": "unlock_observers",
          "override": false,
          "params": [
            {
              "name": "desired_state",
              "type": "u32",
              "typePlain": "u32"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a2d840913fa9cdebead9e32c99df26d0f",
          "static": false,
          "strong": false,
          "title": "unlock_observers",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-unlock-observers",
          "virtual": false,
          "visibility": "private"
        },
        {
          "abstract": false,
          "anchor": "#function-notify",
          "argsString": "(T new_value)",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::WatchAtomic< T >::notify",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::notify",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 831,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 794,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 794
          },
          "name": "notify",
          "override": false,
          "params": [
            {
              "name": "new_value",
              "type": "T",
              "typePlain": "T"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a960c51b52c7545863ce6e57b43ca322d",
          "static": false,
          "strong": false,
          "title": "notify",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-notify",
          "virtual": false,
          "visibility": "private"
        }
      ],
      "publicAttributes": [
        {
          "abstract": false,
          "anchor": "#variable-klocked",
          "brief": "(INTERNAL USE ONLY) spin-lock bit - indicates the state variable is locked. ",
          "category": "attributes",
          "const": false,
          "definition": "constexpr u32 batt::WatchAtomic< T >::kLocked",
          "explicit": false,
          "fullname": "batt::WatchAtomic::kLocked",
          "hasDetails": false,
          "initializer": "= 0x01",
          "inline": false,
          "kind": "variable",
          "language": "cpp",
          "location": {
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 294,
            "column": 26,
            "file": "batteries/async/watch_decl.hpp",
            "line": 294
          },
          "name": "kLocked",
          "override": false,
          "refid": "classbatt_1_1WatchAtomic_1ac22e1f894ecffd890a2cc87164ca98b1",
          "static": true,
          "strong": false,
          "summary": "(INTERNAL USE ONLY) spin-lock bit - indicates the state variable is locked. ",
          "title": "kLocked",
          "type": "constexpr u32",
          "typePlain": "constexpr u32",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#variable-klocked",
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#variable-kopen",
          "brief": "(INTERNAL USE ONLY) indicates that the [Watch](/_autogen/Classes/classbatt_1_1Watch/) is not closed. ",
          "category": "attributes",
          "const": false,
          "definition": "constexpr u32 batt::WatchAtomic< T >::kOpen",
          "explicit": false,
          "fullname": "batt::WatchAtomic::kOpen",
          "hasDetails": false,
          "initializer": "= 0x02",
          "inline": false,
          "kind": "variable",
          "language": "cpp",
          "location": {
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 298,
            "column": 26,
            "file": "batteries/async/watch_decl.hpp",
            "line": 298
          },
          "name": "kOpen",
          "override": false,
          "refid": "classbatt_1_1WatchAtomic_1a3b769009fcdbbce4a7bbd40bc3d49179",
          "static": true,
          "strong": false,
          "summary": "(INTERNAL USE ONLY) indicates that the Watch is not closed. ",
          "title": "kOpen",
          "type": "constexpr u32",
          "typePlain": "constexpr u32",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#variable-kopen",
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#variable-kwaiting",
          "brief": "(INTERNAL USE ONLY) indicates that one or more handlers are attached to the [Watch](/_autogen/Classes/classbatt_1_1Watch/), awaiting change notification. ",
          "category": "attributes",
          "const": false,
          "definition": "constexpr u32 batt::WatchAtomic< T >::kWaiting",
          "explicit": false,
          "fullname": "batt::WatchAtomic::kWaiting",
          "hasDetails": false,
          "initializer": "= 0x04",
          "inline": false,
          "kind": "variable",
          "language": "cpp",
          "location": {
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 303,
            "column": 26,
            "file": "batteries/async/watch_decl.hpp",
            "line": 303
          },
          "name": "kWaiting",
          "override": false,
          "refid": "classbatt_1_1WatchAtomic_1a59b426af4de816fa4cb217c0935eb192",
          "static": true,
          "strong": false,
          "summary": "(INTERNAL USE ONLY) indicates that one or more handlers are attached to the Watch, awaiting change notification. ",
          "title": "kWaiting",
          "type": "constexpr u32",
          "typePlain": "constexpr u32",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#variable-kwaiting",
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#variable-kclosedatend",
          "brief": "(INTERNAL USE ONLY) indicates the [Watch](/_autogen/Classes/classbatt_1_1Watch/) was closed with end-of-stream condition true ",
          "category": "attributes",
          "const": false,
          "definition": "constexpr u32 batt::WatchAtomic< T >::kClosedAtEnd",
          "explicit": false,
          "fullname": "batt::WatchAtomic::kClosedAtEnd",
          "hasDetails": false,
          "initializer": "= 0x08",
          "inline": false,
          "kind": "variable",
          "language": "cpp",
          "location": {
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 307,
            "column": 26,
            "file": "batteries/async/watch_decl.hpp",
            "line": 307
          },
          "name": "kClosedAtEnd",
          "override": false,
          "refid": "classbatt_1_1WatchAtomic_1a17f30e55aae0097bcb750795e6519d15",
          "static": true,
          "strong": false,
          "summary": "(INTERNAL USE ONLY) indicates the Watch was closed with end-of-stream condition true ",
          "title": "kClosedAtEnd",
          "type": "constexpr u32",
          "typePlain": "constexpr u32",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#variable-kclosedatend",
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#variable-kclosedbeforeend",
          "brief": "(INTERNAL USE ONLY) indicates the [Watch](/_autogen/Classes/classbatt_1_1Watch/) was closed with end-of-stream condition false ",
          "category": "attributes",
          "const": false,
          "definition": "constexpr u32 batt::WatchAtomic< T >::kClosedBeforeEnd",
          "explicit": false,
          "fullname": "batt::WatchAtomic::kClosedBeforeEnd",
          "hasDetails": false,
          "initializer": "= 0x10",
          "inline": false,
          "kind": "variable",
          "language": "cpp",
          "location": {
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 311,
            "column": 26,
            "file": "batteries/async/watch_decl.hpp",
            "line": 311
          },
          "name": "kClosedBeforeEnd",
          "override": false,
          "refid": "classbatt_1_1WatchAtomic_1a324f1a82a764dc1b56ebb5ab9849c7ca",
          "static": true,
          "strong": false,
          "summary": "(INTERNAL USE ONLY) indicates the Watch was closed with end-of-stream condition false ",
          "title": "kClosedBeforeEnd",
          "type": "constexpr u32",
          "typePlain": "constexpr u32",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#variable-kclosedbeforeend",
          "visibility": "public"
        }
      ],
      "publicFunctions": [
        {
          "abstract": false,
          "anchor": "#function-watchatomic",
          "argsString": "(const WatchAtomic &)=delete",
          "brief": "[Watch](/_autogen/Classes/classbatt_1_1Watch/) is not copy-constructible. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "batt::WatchAtomic< T >::WatchAtomic",
          "deleted": true,
          "explicit": false,
          "fullname": "batt::WatchAtomic::WatchAtomic",
          "hasDetails": false,
          "inline": false,
          "kind": "function",
          "language": "cpp",
          "location": {
            "column": 5,
            "file": "batteries/async/watch_decl.hpp",
            "line": 317
          },
          "name": "WatchAtomic",
          "override": false,
          "params": [
            {
              "name": "",
              "type": "const [WatchAtomic](/_autogen/Classes/classbatt_1_1WatchAtomic/) &",
              "typePlain": "const WatchAtomic &"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1ada300120f2c0523b2caeb4d5a5b1c1c3",
          "static": false,
          "strong": false,
          "summary": "Watch is not copy-constructible. ",
          "title": "WatchAtomic",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-watchatomic",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-operator=",
          "argsString": "(const WatchAtomic &)=delete",
          "brief": "[Watch](/_autogen/Classes/classbatt_1_1Watch/) is not copy-constructible. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "WatchAtomic& batt::WatchAtomic< T >::operator=",
          "deleted": true,
          "explicit": false,
          "fullname": "batt::WatchAtomic::operator=",
          "hasDetails": false,
          "inline": false,
          "kind": "function",
          "language": "cpp",
          "location": {
            "column": 17,
            "file": "batteries/async/watch_decl.hpp",
            "line": 321
          },
          "name": "operator=",
          "override": false,
          "params": [
            {
              "name": "",
              "type": "const [WatchAtomic](/_autogen/Classes/classbatt_1_1WatchAtomic/) &",
              "typePlain": "const WatchAtomic &"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1ac7016fddd3207e8fd9d85d25f5a8fdcb",
          "static": false,
          "strong": false,
          "summary": "Watch is not copy-constructible. ",
          "title": "operator=",
          "type": "[WatchAtomic](/_autogen/Classes/classbatt_1_1WatchAtomic/) &",
          "typePlain": "WatchAtomic &",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-operator=",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-watchatomic",
          "argsString": "()=default",
          "brief": "Constructs a [batt::Watch](/_autogen/Classes/classbatt_1_1Watch/) object with a default-initialized value of `T`. ",
          "category": "functions",
          "const": false,
          "default": true,
          "definition": "batt::WatchAtomic< T >::WatchAtomic",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::WatchAtomic",
          "hasDetails": false,
          "inline": false,
          "kind": "function",
          "language": "cpp",
          "location": {
            "column": 5,
            "file": "batteries/async/watch_decl.hpp",
            "line": 325
          },
          "name": "WatchAtomic",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a96726c417b278063239d80c51a0a219f",
          "static": false,
          "strong": false,
          "summary": "Constructs a batt::Watch object with a default-initialized value of T. ",
          "title": "WatchAtomic",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-watchatomic",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-watchatomic",
          "argsString": "(Init &&init_value) noexcept",
          "brief": "Constructs a [batt::Watch](/_autogen/Classes/classbatt_1_1Watch/) object with the given initial value. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "batt::WatchAtomic< T >::WatchAtomic",
          "deleted": false,
          "explicit": true,
          "fullname": "batt::WatchAtomic::WatchAtomic",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 332,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 330,
            "column": 14,
            "file": "batteries/async/watch_decl.hpp",
            "line": 330
          },
          "name": "WatchAtomic",
          "override": false,
          "params": [
            {
              "name": "init_value",
              "type": "Init &&",
              "typePlain": "Init &&"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1ab954b902007e387066062c72e9325bfa",
          "static": false,
          "strong": false,
          "summary": "Constructs a batt::Watch object with the given initial value. ",
          "templateParams": [
            {
              "name": "",
              "type": "typename Init",
              "typePlain": "typename Init"
            },
            {
              "defval": "EnableIfNoShadow<[WatchAtomic](/_autogen/Classes/classbatt_1_1WatchAtomic/), Init>",
              "defvalPlain": "EnableIfNoShadow<WatchAtomic, Init>",
              "name": "",
              "type": "typename",
              "typePlain": "typename"
            }
          ],
          "title": "WatchAtomic",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-watchatomic",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-~watchatomic",
          "argsString": "() noexcept",
          "brief": "Destroy the [Watch](/_autogen/Classes/classbatt_1_1Watch/), automatically calling [Watch::close](/_autogen/Classes/classbatt_1_1Watch/#function-close). ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "batt::WatchAtomic< T >::~WatchAtomic",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::~WatchAtomic",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 339,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 336,
            "column": 5,
            "file": "batteries/async/watch_decl.hpp",
            "line": 336
          },
          "name": "~WatchAtomic",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a0d6d9a8b92b7fc67663d305ea5b9590a",
          "static": false,
          "strong": false,
          "summary": "Destroy the Watch, automatically calling Watch::close. ",
          "title": "~WatchAtomic",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-~watchatomic",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-close",
          "argsString": "(StatusCode final_status_code=StatusCode::kClosed)",
          "brief": "Set the [Watch](/_autogen/Classes/classbatt_1_1Watch/) to the \"closed\" state, which disables all blocking/async synchronization on the [Watch](/_autogen/Classes/classbatt_1_1Watch/), immediately unblocking any currently waiting tasks/threads. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::WatchAtomic< T >::close",
          "deleted": false,
          "details": "This method is safe to call multiple times. The [Watch](/_autogen/Classes/classbatt_1_1Watch/) value can still be modified and retrieved after it is closed; this only disables the methods in the \"Synchronization\" category (see Summary section above). ",
          "explicit": false,
          "fullname": "batt::WatchAtomic::close",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 391,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 348,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 348
          },
          "name": "close",
          "override": false,
          "params": [
            {
              "defval": "StatusCode::kClosed",
              "defvalPlain": "StatusCode::kClosed",
              "name": "final_status_code",
              "type": "StatusCode",
              "typePlain": "StatusCode"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a9a6aed2b9d6bdca3507c881d93601ffc",
          "static": false,
          "strong": false,
          "summary": "Set the Watch to the \"closed\" state, which disables all blocking/async synchronization on the Watch, immediately unblocking any currently waiting tasks/threads. ",
          "title": "close",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-close",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-poke",
          "argsString": "() noexcept",
          "brief": "Wakes up all observers of this [Watch](/_autogen/Classes/classbatt_1_1Watch/), invoking their handlers with StatusCode::kPoke to indicate they should check their current situation and possibly retry. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::WatchAtomic< T >::poke",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::poke",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 407,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 396,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 396
          },
          "name": "poke",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a9cab02eed1cdd022ef5acf63365d713a",
          "static": false,
          "strong": false,
          "summary": "Wakes up all observers of this Watch, invoking their handlers with StatusCode::kPoke to indicate they should check their current situation and possibly retry. ",
          "title": "poke",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-poke",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-reset",
          "argsString": "()",
          "brief": "Resets the 'closed' status of this [Watch](/_autogen/Classes/classbatt_1_1Watch/). ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::WatchAtomic< T >::reset",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::reset",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 420,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 411,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 411
          },
          "name": "reset",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a916ea166f5330c0c8d686040dc58fc8e",
          "static": false,
          "strong": false,
          "summary": "Resets the 'closed' status of this Watch. ",
          "title": "reset",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-reset",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-is-closed",
          "argsString": "() const",
          "brief": "Tests whether the [Watch](/_autogen/Classes/classbatt_1_1Watch/) is in a \"closed\" state. ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "bool batt::WatchAtomic< T >::is_closed",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::is_closed",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 427,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 424,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 424
          },
          "name": "is_closed",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a72289812d0f6d51548ff287790f47b8f",
          "static": false,
          "strong": false,
          "summary": "Tests whether the Watch is in a \"closed\" state. ",
          "title": "is_closed",
          "type": "bool",
          "typePlain": "bool",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-is-closed",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-set-value",
          "argsString": "(T new_value)",
          "brief": "Atomically set the value of the [Watch](/_autogen/Classes/classbatt_1_1Watch/). ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "T batt::WatchAtomic< T >::set_value",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::set_value",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 441,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 431,
            "column": 7,
            "file": "batteries/async/watch_decl.hpp",
            "line": 431
          },
          "name": "set_value",
          "override": false,
          "params": [
            {
              "name": "new_value",
              "type": "T",
              "typePlain": "T"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1aa463b16a2a933a64a4e7722a26843bbe",
          "static": false,
          "strong": false,
          "summary": "Atomically set the value of the Watch. ",
          "title": "set_value",
          "type": "T",
          "typePlain": "T",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-set-value",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-get-value",
          "argsString": "() const",
          "brief": "The current value of the [Watch](/_autogen/Classes/classbatt_1_1Watch/). ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "T batt::WatchAtomic< T >::get_value",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::get_value",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 448,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 445,
            "column": 7,
            "file": "batteries/async/watch_decl.hpp",
            "line": 445
          },
          "name": "get_value",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1afb4a4ebdf8e28d4a29c8cc4f3561825d",
          "static": false,
          "strong": false,
          "summary": "The current value of the Watch. ",
          "title": "get_value",
          "type": "T",
          "typePlain": "T",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-get-value",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-fetch-add",
          "argsString": "(T arg)",
          "brief": "Atomically adds the specified amount to the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value, returning the previous value. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "T batt::WatchAtomic< T >::fetch_add",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::fetch_add",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 464,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 452,
            "column": 7,
            "file": "batteries/async/watch_decl.hpp",
            "line": 452
          },
          "name": "fetch_add",
          "override": false,
          "params": [
            {
              "name": "arg",
              "type": "T",
              "typePlain": "T"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a7f04147e18d1a6cd4a8b08e00ad30e52",
          "static": false,
          "strong": false,
          "summary": "Atomically adds the specified amount to the Watch value, returning the previous value. ",
          "title": "fetch_add",
          "type": "T",
          "typePlain": "T",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-fetch-add",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-fetch-or",
          "argsString": "(T arg)",
          "brief": "Atomically sets the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value to the bitwise-or of the current value and the passed `arg`, returning the previous value. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "T batt::WatchAtomic< T >::fetch_or",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::fetch_or",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 481,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 469,
            "column": 7,
            "file": "batteries/async/watch_decl.hpp",
            "line": 469
          },
          "name": "fetch_or",
          "override": false,
          "params": [
            {
              "name": "arg",
              "type": "T",
              "typePlain": "T"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a144b537bc68b780b7084182f8b8dcd6a",
          "static": false,
          "strong": false,
          "summary": "Atomically sets the Watch value to the bitwise-or of the current value and the passed arg, returning the previous value. ",
          "title": "fetch_or",
          "type": "T",
          "typePlain": "T",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-fetch-or",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-fetch-sub",
          "argsString": "(T arg)",
          "brief": "Atomically subtracts the specified amount from the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value, returning the previous value. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "T batt::WatchAtomic< T >::fetch_sub",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::fetch_sub",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 497,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 485,
            "column": 7,
            "file": "batteries/async/watch_decl.hpp",
            "line": 485
          },
          "name": "fetch_sub",
          "override": false,
          "params": [
            {
              "name": "arg",
              "type": "T",
              "typePlain": "T"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a05317e88b1e0ddad8144d3d4203ab08d",
          "static": false,
          "strong": false,
          "summary": "Atomically subtracts the specified amount from the Watch value, returning the previous value. ",
          "title": "fetch_sub",
          "type": "T",
          "typePlain": "T",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-fetch-sub",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-fetch-and",
          "argsString": "(T arg)",
          "brief": "Atomically sets the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value to the bitwise-and of the current value and the passed `arg`, returning the previous value. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "T batt::WatchAtomic< T >::fetch_and",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::fetch_and",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 514,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 502,
            "column": 7,
            "file": "batteries/async/watch_decl.hpp",
            "line": 502
          },
          "name": "fetch_and",
          "override": false,
          "params": [
            {
              "name": "arg",
              "type": "T",
              "typePlain": "T"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1af462effb275b9ff52a51f1266c21c5c4",
          "static": false,
          "strong": false,
          "summary": "Atomically sets the Watch value to the bitwise-and of the current value and the passed arg, returning the previous value. ",
          "title": "fetch_and",
          "type": "T",
          "typePlain": "T",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-fetch-and",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-modify",
          "argsString": "(Fn &&fn)",
          "brief": "Atomically modifies the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value by applying the passed transform `fn`. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "T batt::WatchAtomic< T >::modify",
          "deleted": false,
          "details": "`fn`**MUST** be safe to call multiple times within a single call to `modify`. This is because `modify` may be implemented via an atomic compare-and-swap loop.\n\n_NOTE: This behavior is acknowledged to be less than ideal and will be fixed in the future to be consistent, regardless of `T`_",
          "explicit": false,
          "fullname": "batt::WatchAtomic::modify",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 552,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 528,
            "column": 7,
            "file": "batteries/async/watch_decl.hpp",
            "line": 528
          },
          "name": "modify",
          "override": false,
          "params": [
            {
              "name": "fn",
              "type": "Fn &&",
              "typePlain": "Fn &&"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a0d2bed79fb91cf200fcde929f9400aef",
          "returns": [
            "if `T` is a primitive integer type (including `bool`), the new value of the [Watch](/_autogen/Classes/classbatt_1_1Watch/); else, the old value of the [Watch](/_autogen/Classes/classbatt_1_1Watch/)"
          ],
          "static": false,
          "strong": false,
          "summary": "Atomically modifies the Watch value by applying the passed transform fn. ",
          "templateParams": [
            {
              "defval": "T(T)",
              "defvalPlain": "T(T)",
              "name": "",
              "type": "typename Fn",
              "typePlain": "typename Fn"
            }
          ],
          "title": "modify",
          "type": "T",
          "typePlain": "T",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-modify",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-await-modify",
          "argsString": "(Fn &&fn)",
          "brief": "Retries `fn` on the watch value until it succeeds or the watch is closed. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "StatusOr<T> batt::WatchAtomic< T >::await_modify",
          "deleted": false,
          "details": "Return the old (pre-modify) value on which `fn` finally succeeded.\n\n`fn` should have the signature (T) -> Optional<T>. Returning None indicates `fn` should not be called again until a new value is available.\n\n`fn`**MUST** be safe to call multiple times within a single call to `await_modify`. This is because `await_modify` may be implemented via an atomic compare-and-swap loop.",
          "explicit": false,
          "fullname": "batt::WatchAtomic::await_modify",
          "hasDetails": true,
          "inline": false,
          "kind": "function",
          "language": "cpp",
          "location": {
            "column": 14,
            "file": "batteries/async/watch_decl.hpp",
            "line": 568
          },
          "name": "await_modify",
          "override": false,
          "params": [
            {
              "name": "fn",
              "type": "Fn &&",
              "typePlain": "Fn &&"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a916ca09d46b8b39afa36cce94059e905",
          "returns": [
            "\n\n* If successful, the old (pre-modify) value on which `fn` finally succeeded\n* `batt::StatusCode::kClosed` if the [Watch](/_autogen/Classes/classbatt_1_1Watch/) was closed before `fn` was successful "
          ],
          "static": false,
          "strong": false,
          "summary": "Retries fn on the watch value until it succeeds or the watch is closed. ",
          "templateParams": [
            {
              "defval": "[Optional](/_autogen/Classes/classbatt_1_1Optional/)<T>(T)",
              "defvalPlain": "Optional<T>(T)",
              "name": "",
              "type": "typename Fn",
              "typePlain": "typename Fn"
            }
          ],
          "title": "await_modify",
          "type": "[StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< T >",
          "typePlain": "StatusOr< T >",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-await-modify",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-modify-if",
          "argsString": "(Fn &&fn)",
          "brief": "Conditionally modify the value of the [Watch](/_autogen/Classes/classbatt_1_1Watch/). ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "Optional<T> batt::WatchAtomic< T >::modify_if",
          "deleted": false,
          "details": "Retries calling `fn` on the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value until EITHER of:\n\n* `fn` returns `batt::None`\n* BOTH of:\n    * `fn` returns a non-`batt::None` value\n    * the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value is atomically updated via compare-and-swap\n`fn`**MUST** be safe to call multiple times within a single call to `modify_if`. This is because `modify_if` may be implemented via an atomic compare-and-swap loop.\n\nUnlike batt::Watch::await_modify, this method never puts the current task/thread to sleep; it keeps _actively_ polling the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value until it reaches one of the exit criteria described above.",
          "explicit": false,
          "fullname": "batt::WatchAtomic::modify_if",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 613,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 587,
            "column": 14,
            "file": "batteries/async/watch_decl.hpp",
            "line": 587
          },
          "name": "modify_if",
          "override": false,
          "params": [
            {
              "name": "fn",
              "type": "Fn &&",
              "typePlain": "Fn &&"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a700fdcd58d475456964d02b3fdae1ec7",
          "returns": [
            "The final value returned by `fn`, which is either `batt::None` or the new [Watch](/_autogen/Classes/classbatt_1_1Watch/) value. "
          ],
          "static": false,
          "strong": false,
          "summary": "Conditionally modify the value of the Watch. ",
          "templateParams": [
            {
              "defval": "[Optional](/_autogen/Classes/classbatt_1_1Optional/)<T>(T)",
              "defvalPlain": "Optional<T>(T)",
              "name": "",
              "type": "typename Fn",
              "typePlain": "typename Fn"
            }
          ],
          "title": "modify_if",
          "type": "[Optional](/_autogen/Classes/classbatt_1_1Optional/)< T >",
          "typePlain": "Optional< T >",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-modify-if",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-async-wait",
          "argsString": "(T last_seen, Handler &&fn) const",
          "brief": "Invokes the passed handler `fn` with the described value as soon as one of the following conditions is true: ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "void batt::WatchAtomic< T >::async_wait",
          "deleted": false,
          "details": "\n\n* When the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value is _not_ equal to the passed value `last_seen`, invoke `fn` with the current value of the [Watch](/_autogen/Classes/classbatt_1_1Watch/).\n* When the [Watch](/_autogen/Classes/classbatt_1_1Watch/) is closed, invoke `fn` with `batt::StatusCode::kClosed`. ",
          "explicit": false,
          "fullname": "batt::WatchAtomic::async_wait",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 656,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 622,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 622
          },
          "name": "async_wait",
          "override": false,
          "params": [
            {
              "name": "last_seen",
              "type": "T",
              "typePlain": "T"
            },
            {
              "name": "fn",
              "type": "Handler &&",
              "typePlain": "Handler &&"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1aa984900bfa1ffcbf73330f56af2ee040",
          "static": false,
          "strong": false,
          "summary": "Invokes the passed handler fn with the described value as soon as one of the following conditions is true: ",
          "templateParams": [
            {
              "name": "",
              "type": "typename Handler",
              "typePlain": "typename Handler"
            }
          ],
          "title": "async_wait",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-async-wait",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-await-not-equal",
          "argsString": "(const T &last_seen) const",
          "brief": "Blocks the current task/thread until the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value is _not_ equal to `last_seen`. ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "StatusOr<T> batt::WatchAtomic< T >::await_not_equal",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::await_not_equal",
          "hasDetails": true,
          "inline": false,
          "kind": "function",
          "language": "cpp",
          "location": {
            "column": 14,
            "file": "batteries/async/watch_decl.hpp",
            "line": 664
          },
          "name": "await_not_equal",
          "override": false,
          "params": [
            {
              "name": "last_seen",
              "type": "const T &",
              "typePlain": "const T &"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a80ac3563bfd65b3bda95f88244e3e1d7",
          "returns": [
            "On success, the current value of the [Watch](/_autogen/Classes/classbatt_1_1Watch/), which is guaranteed to _not_ equal `last_seen`, else `batt::StatusCode::kClosed` if the [Watch](/_autogen/Classes/classbatt_1_1Watch/) was closed before a satisfactory value was observed "
          ],
          "static": false,
          "strong": false,
          "summary": "Blocks the current task/thread until the Watch value is not equal to last_seen. ",
          "title": "await_not_equal",
          "type": "[StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< T >",
          "typePlain": "StatusOr< T >",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-await-not-equal",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-await-true",
          "argsString": "(Pred &&pred) const",
          "brief": "Blocks the current task/thread until the passed predicate function returns `true` for the current value of the [Watch](/_autogen/Classes/classbatt_1_1Watch/). ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "StatusOr<T> batt::WatchAtomic< T >::await_true",
          "deleted": false,
          "details": "This is the most general of [Watch](/_autogen/Classes/classbatt_1_1Watch/)'s blocking getter methods.",
          "explicit": false,
          "fullname": "batt::WatchAtomic::await_true",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 684,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 675,
            "column": 14,
            "file": "batteries/async/watch_decl.hpp",
            "line": 675
          },
          "name": "await_true",
          "override": false,
          "params": [
            {
              "name": "pred",
              "type": "Pred &&",
              "typePlain": "Pred &&"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1aa32400a9e1e2601126b6f8e3aba4108d",
          "returns": [
            "On success, the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value for which `pred` returned `true`, else `batt::StatusCode::kClosed` if the [Watch](/_autogen/Classes/classbatt_1_1Watch/) was closed before a satisfactory value was observed "
          ],
          "static": false,
          "strong": false,
          "summary": "Blocks the current task/thread until the passed predicate function returns true for the current value of the Watch. ",
          "templateParams": [
            {
              "name": "",
              "type": "typename Pred",
              "typePlain": "typename Pred"
            }
          ],
          "title": "await_true",
          "type": "[StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< T >",
          "typePlain": "StatusOr< T >",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-await-true",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-await-equal",
          "argsString": "(T val) const",
          "brief": "Blocks the current task/thread until the [Watch](/_autogen/Classes/classbatt_1_1Watch/) contains the specified value. ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "Status batt::WatchAtomic< T >::await_equal",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::await_equal",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 699,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 692,
            "column": 12,
            "file": "batteries/async/watch_decl.hpp",
            "line": 692
          },
          "name": "await_equal",
          "override": false,
          "params": [
            {
              "name": "val",
              "type": "T",
              "typePlain": "T"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a2a48132c159d0fe07d161697801a4157",
          "returns": [
            "One of the following:\n\n* `batt::OkStatus()` if the [Watch](/_autogen/Classes/classbatt_1_1Watch/) value was observed to be `val`\n* `batt::StatusCode::kClosed` if the [Watch](/_autogen/Classes/classbatt_1_1Watch/) was closed before `val` was observed "
          ],
          "static": false,
          "strong": false,
          "summary": "Blocks the current task/thread until the Watch contains the specified value. ",
          "title": "await_equal",
          "type": "[Status](/_autogen/Classes/classbatt_1_1Status/)",
          "typePlain": "Status",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-await-equal",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-clamp-min-value",
          "argsString": "(T lower_bound, OrderFn &&order_fn)",
          "brief": "Modify the value to be at least `lower_bound`. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::WatchAtomic< T >::clamp_min_value",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::clamp_min_value",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 716,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 708,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 708
          },
          "name": "clamp_min_value",
          "override": false,
          "paramList": [
            {
              "name": "lower_bound",
              "text": "The (inclusive) lower bound value to enforce "
            },
            {
              "name": "order_fn",
              "text": "A callable object taking two T values and returning bool that returns true iff the first argument is less-than the second. "
            }
          ],
          "params": [
            {
              "name": "lower_bound",
              "type": "T",
              "typePlain": "T"
            },
            {
              "name": "order_fn",
              "type": "OrderFn &&",
              "typePlain": "OrderFn &&"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a4e60a9899c38ab54e501db84e8641ac0",
          "static": false,
          "strong": false,
          "summary": "Modify the value to be at least lower_bound. ",
          "templateParams": [
            {
              "defval": "bool(T, T)",
              "defvalPlain": "bool(T, T)",
              "name": "",
              "type": "typename OrderFn",
              "typePlain": "typename OrderFn"
            }
          ],
          "title": "clamp_min_value",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-clamp-min-value",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-clamp-max-value",
          "argsString": "(T upper_bound, OrderFn &&order_fn)",
          "brief": "Modify the value to be at most `upper_bound`. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::WatchAtomic< T >::clamp_max_value",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::clamp_max_value",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 733,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 725,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 725
          },
          "name": "clamp_max_value",
          "override": false,
          "paramList": [
            {
              "name": "upper_bound",
              "text": "The (inclusive) upper bound value to enforce "
            },
            {
              "name": "order_fn",
              "text": "A callable object taking two T values and returning bool that returns true iff the first argument is less-than the second. "
            }
          ],
          "params": [
            {
              "name": "upper_bound",
              "type": "T",
              "typePlain": "T"
            },
            {
              "name": "order_fn",
              "type": "OrderFn &&",
              "typePlain": "OrderFn &&"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1ac91683d208e88c4ec9b1d62165e5a9d0",
          "static": false,
          "strong": false,
          "summary": "Modify the value to be at most upper_bound. ",
          "templateParams": [
            {
              "defval": "bool(T, T)",
              "defvalPlain": "bool(T, T)",
              "name": "",
              "type": "typename OrderFn",
              "typePlain": "typename OrderFn"
            }
          ],
          "title": "clamp_max_value",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-clamp-max-value",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-clamp-min-value",
          "argsString": "(T lower_bound)",
          "brief": "Modify the value to be at least `lower_bound`, using the default ordering for T. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::WatchAtomic< T >::clamp_min_value",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::clamp_min_value",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 740,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 737,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 737
          },
          "name": "clamp_min_value",
          "override": false,
          "params": [
            {
              "name": "lower_bound",
              "type": "T",
              "typePlain": "T"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a888689502190236222e1255281f37256",
          "static": false,
          "strong": false,
          "summary": "Modify the value to be at least lower_bound, using the default ordering for T. ",
          "title": "clamp_min_value",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-clamp-min-value",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-clamp-max-value",
          "argsString": "(T upper_bound)",
          "brief": "Modify the value to be at most `upper_bound`, using the default ordering for T. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::WatchAtomic< T >::clamp_max_value",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::WatchAtomic::clamp_max_value",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 747,
            "bodyFile": "batteries/async/watch_decl.hpp",
            "bodyStart": 744,
            "column": 10,
            "file": "batteries/async/watch_decl.hpp",
            "line": 744
          },
          "name": "clamp_max_value",
          "override": false,
          "params": [
            {
              "name": "upper_bound",
              "type": "T",
              "typePlain": "T"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1WatchAtomic_1a23cce169668b8309675f4c19e5fe62a3",
          "static": false,
          "strong": false,
          "summary": "Modify the value to be at most upper_bound, using the default ordering for T. ",
          "title": "clamp_max_value",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/#function-clamp-max-value",
          "virtual": false,
          "visibility": "public"
        }
      ],
      "refid": "classbatt_1_1WatchAtomic",
      "url": "/_autogen/Classes/classbatt_1_1WatchAtomic/",
      "virtual": "non-virtual",
      "visibility": "public"
    }
  ],
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "batt::Watch< i16 >",
  "hasAdditionalMembers": true,
  "hasDetails": false,
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 857,
    "bodyFile": "batteries/async/watch_decl.hpp",
    "bodyStart": 857,
    "column": 11,
    "file": "batteries/async/watch_decl.hpp",
    "line": 857
  },
  "name": "batt::Watch< i16 >",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1Watch_3_01i16_01_4",
  "static": false,
  "strong": false,
  "title": "batt::Watch< i16 >",
  "url": "/_autogen/Classes/classbatt_1_1Watch_3_01i16_01_4/",
  "visibility": "public"
}