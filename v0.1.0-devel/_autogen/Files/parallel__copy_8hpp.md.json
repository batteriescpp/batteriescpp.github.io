{
  "abstract": false,
  "anchor": "#file-parallel-copy.hpp",
  "category": "files",
  "const": false,
  "defines": [
    {
      "abstract": false,
      "anchor": "#define-batteries-algo-parallel-copy-hpp",
      "category": "defines",
      "const": false,
      "definition": "",
      "explicit": false,
      "fullname": "BATTERIES_ALGO_PARALLEL_COPY_HPP",
      "hasDetails": false,
      "inline": false,
      "kind": "define",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/algo/parallel_copy.hpp",
        "bodyStart": 6,
        "column": 9,
        "file": "batteries/algo/parallel_copy.hpp",
        "line": 6
      },
      "name": "BATTERIES_ALGO_PARALLEL_COPY_HPP",
      "override": false,
      "refid": "parallel__copy_8hpp_1ab4557f8fcc4b983cd67bfbbc40035cf9",
      "static": false,
      "strong": false,
      "title": "BATTERIES_ALGO_PARALLEL_COPY_HPP",
      "url": "/_autogen/Files/parallel__copy_8hpp/#define-batteries-algo-parallel-copy-hpp",
      "visibility": "public"
    }
  ],
  "definition": "",
  "explicit": false,
  "fullname": "batteries/algo/parallel_copy.hpp",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "includes": "<batteries/async/slice_work.hpp>",
  "inline": false,
  "kind": "file",
  "language": "cpp",
  "location": {
    "column": 0,
    "file": "batteries/algo/parallel_copy.hpp",
    "line": 0
  },
  "name": "batteries/algo/parallel_copy.hpp",
  "namespaces": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "override": false,
  "parent": {
    "anchor": "#dir-batteries/algo",
    "category": "dirs",
    "fullname": "batteries/algo",
    "kind": "dir",
    "language": "",
    "name": "batteries/algo",
    "refid": "dir_23237b2d5d682108d256c42b41036300",
    "title": "batteries/algo",
    "url": "/_autogen/Files/dir_23237b2d5d682108d256c42b41036300/#dir-batteries/algo",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "#dir-batteries",
      "category": "dirs",
      "fullname": "batteries",
      "kind": "dir",
      "language": "",
      "name": "batteries",
      "refid": "dir_af4e2857c92a31b60ebae85174ebeccb",
      "title": "batteries",
      "url": "/_autogen/Files/dir_af4e2857c92a31b60ebae85174ebeccb/#dir-batteries",
      "visibility": "public"
    },
    {
      "anchor": "#dir-batteries/algo",
      "category": "dirs",
      "fullname": "batteries/algo",
      "kind": "dir",
      "language": "",
      "name": "batteries/algo",
      "refid": "dir_23237b2d5d682108d256c42b41036300",
      "title": "batteries/algo",
      "url": "/_autogen/Files/dir_23237b2d5d682108d256c42b41036300/#dir-batteries/algo",
      "visibility": "public"
    }
  ],
  "programlisting": "//######=###=##=#=#=#=#=#==#==#====#+==#+==============+==+==+==+=+==+=+=+=+=+=+=+\n// Copyright 2021-2022 Anthony Paul Astolfi\n//\n#pragma once\n#ifndef BATTERIES_ALGO_PARALLEL_COPY_HPP\n#define BATTERIES_ALGO_PARALLEL_COPY_HPP\n\n#include <batteries/async/slice_work.hpp>\n#include <batteries/async/work_context.hpp>\n#include <batteries/async/worker_pool.hpp>\n\n#include <batteries/int_types.hpp>\n\n#include <algorithm>\n#include <iterator>\n\nnamespace batt {\n\n//=#=#==#==#===============+=+=+=+=++=++++++++++++++-++-+--+-+----+---------------\n//\ntemplate <typename Src, typename Dst>\nvoid parallel_copy(WorkContext& work_context,   //\n                   Src src_begin, Src src_end,  //\n                   Dst dst_begin,               //\n                   TaskSize min_task_size,      //\n                   TaskCount max_tasks)\n{\n    if (max_tasks == 1) {\n        std::copy(src_begin, src_end, dst_begin);\n        return;\n    }\n\n    const WorkSlicePlan plan{WorkSliceParams{min_task_size, max_tasks}, src_begin, src_end};\n\n    BATT_CHECK_OK(slice_work(work_context, plan,\n                             /*gen_work_fn=*/\n                             [&](usize /*task_index*/, isize task_offset, isize task_size) {\n                                 return [src_begin, dst_begin, task_offset, task_size] {\n                                     auto task_src_begin = std::next(src_begin, task_offset);\n                                     auto task_src_end = std::next(task_src_begin, task_size);\n                                     auto task_dst_begin = std::next(dst_begin, task_offset);\n\n                                     std::copy(task_src_begin, task_src_end, task_dst_begin);\n                                 };\n                             }))\n        << \"work_context must not be closed!\";\n}\n\n}  // namespace batt\n\n#endif  // BATTERIES_ALGO_PARALLEL_COPY_HPP",
  "refid": "parallel__copy_8hpp",
  "static": false,
  "strong": false,
  "title": "batteries/algo/parallel_copy.hpp",
  "url": "/_autogen/Files/parallel__copy_8hpp/#file-parallel-copy.hpp",
  "visibility": "public"
}