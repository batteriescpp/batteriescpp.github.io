{
  "abstract": false,
  "anchor": "#file-requirements.hpp",
  "category": "files",
  "const": false,
  "defines": [
    {
      "abstract": false,
      "anchor": "#define-batteries-seq-requirements-hpp",
      "category": "defines",
      "const": false,
      "definition": "",
      "explicit": false,
      "fullname": "BATTERIES_SEQ_REQUIREMENTS_HPP",
      "hasDetails": false,
      "inline": false,
      "kind": "define",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/seq/requirements.hpp",
        "bodyStart": 6,
        "column": 9,
        "file": "batteries/seq/requirements.hpp",
        "line": 6
      },
      "name": "BATTERIES_SEQ_REQUIREMENTS_HPP",
      "override": false,
      "refid": "requirements_8hpp_1abe3e2d2abac4f168482c1818381fd505",
      "static": false,
      "strong": false,
      "title": "BATTERIES_SEQ_REQUIREMENTS_HPP",
      "url": "/_autogen/Files/requirements_8hpp/#define-batteries-seq-requirements-hpp",
      "visibility": "public"
    }
  ],
  "definition": "",
  "explicit": false,
  "fullname": "batteries/seq/requirements.hpp",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "includes": "<batteries/config.hpp>",
  "inline": false,
  "kind": "file",
  "language": "cpp",
  "location": {
    "column": 0,
    "file": "batteries/seq/requirements.hpp",
    "line": 0
  },
  "name": "batteries/seq/requirements.hpp",
  "namespaces": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt::detail",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt::detail",
      "refid": "namespacebatt_1_1detail",
      "title": "batt::detail",
      "url": "/_autogen/Namespaces/namespacebatt_1_1detail/",
      "visibility": "public"
    }
  ],
  "override": false,
  "parent": {
    "anchor": "#dir-batteries/seq",
    "category": "dirs",
    "fullname": "batteries/seq",
    "kind": "dir",
    "language": "",
    "name": "batteries/seq",
    "refid": "dir_0985703d1fb34e0edc7cc330d020d62d",
    "title": "batteries/seq",
    "url": "/_autogen/Files/dir_0985703d1fb34e0edc7cc330d020d62d/#dir-batteries/seq",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "#dir-batteries",
      "category": "dirs",
      "fullname": "batteries",
      "kind": "dir",
      "language": "",
      "name": "batteries",
      "refid": "dir_af4e2857c92a31b60ebae85174ebeccb",
      "title": "batteries",
      "url": "/_autogen/Files/dir_af4e2857c92a31b60ebae85174ebeccb/#dir-batteries",
      "visibility": "public"
    },
    {
      "anchor": "#dir-batteries/seq",
      "category": "dirs",
      "fullname": "batteries/seq",
      "kind": "dir",
      "language": "",
      "name": "batteries/seq",
      "refid": "dir_0985703d1fb34e0edc7cc330d020d62d",
      "title": "batteries/seq",
      "url": "/_autogen/Files/dir_0985703d1fb34e0edc7cc330d020d62d/#dir-batteries/seq",
      "visibility": "public"
    }
  ],
  "programlisting": "//######=###=##=#=#=#=#=#==#==#====#+==#+==============+==+==+==+=+==+=+=+=+=+=+=+\n// Copyright 2022 Anthony Paul Astolfi\n//\n#pragma once\n#ifndef BATTERIES_SEQ_REQUIREMENTS_HPP\n#define BATTERIES_SEQ_REQUIREMENTS_HPP\n\n#include <batteries/config.hpp>\n//\n#include <batteries/optional.hpp>\n#include <batteries/type_traits.hpp>\n\nnamespace batt {\n\nnamespace detail {\n\ntemplate <typename T>\ninline std::false_type has_seq_requirements_impl(...)\n{\n    return {};\n}\n\ntemplate <typename T, typename ItemT = typename std::decay_t<T>::Item,\n          typename = std::enable_if_t<                                                       //\n              std::is_convertible_v<decltype(std::declval<T>().next()), Optional<ItemT>> &&  //\n              std::is_convertible_v<decltype(std::declval<T>().peek()), Optional<ItemT>>     //\n              >>\ninline std::true_type has_seq_requirements_impl(std::decay_t<T>*)\n{\n    return {};\n}\n\n}  // namespace detail\n\ntemplate <typename T>\nusing HasSeqRequirements = decltype(detail::has_seq_requirements_impl<T>(nullptr));\n\ntemplate <typename T>\ninline constexpr bool has_seq_requirements(StaticType<T> = {})\n{\n    return HasSeqRequirements<T>{};\n}\n\ntemplate <typename T>\nusing EnableIfSeq = std::enable_if_t<has_seq_requirements<T>()>;\n\n}  // namespace batt\n\n#endif  // BATTERIES_SEQ_REQUIREMENTS_HPP",
  "refid": "requirements_8hpp",
  "static": false,
  "strong": false,
  "title": "batteries/seq/requirements.hpp",
  "url": "/_autogen/Files/requirements_8hpp/#file-requirements.hpp",
  "visibility": "public"
}