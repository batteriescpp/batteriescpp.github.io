{
  "abstract": false,
  "anchor": "#file-work-context.hpp",
  "category": "files",
  "const": false,
  "defines": [
    {
      "abstract": false,
      "anchor": "#define-batteries-async-work-context-hpp",
      "category": "defines",
      "const": false,
      "definition": "",
      "explicit": false,
      "fullname": "BATTERIES_ASYNC_WORK_CONTEXT_HPP",
      "hasDetails": false,
      "inline": false,
      "kind": "define",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/work_context.hpp",
        "bodyStart": 6,
        "column": 9,
        "file": "batteries/async/work_context.hpp",
        "line": 6
      },
      "name": "BATTERIES_ASYNC_WORK_CONTEXT_HPP",
      "override": false,
      "refid": "work__context_8hpp_1aa7eb089e91cc738e3828bca5b2fa6381",
      "static": false,
      "strong": false,
      "title": "BATTERIES_ASYNC_WORK_CONTEXT_HPP",
      "url": "/_autogen/Files/work__context_8hpp/#define-batteries-async-work-context-hpp",
      "visibility": "public"
    }
  ],
  "definition": "",
  "explicit": false,
  "fullname": "batteries/async/work_context.hpp",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "includes": "<batteries/config.hpp>",
  "inline": false,
  "kind": "file",
  "language": "cpp",
  "location": {
    "column": 0,
    "file": "batteries/async/work_context.hpp",
    "line": 0
  },
  "name": "batteries/async/work_context.hpp",
  "namespaces": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "override": false,
  "parent": {
    "anchor": "#dir-batteries/async",
    "category": "dirs",
    "fullname": "batteries/async",
    "kind": "dir",
    "language": "",
    "name": "batteries/async",
    "refid": "dir_faaa2176564b41e79cedcf3028f42662",
    "title": "batteries/async",
    "url": "/_autogen/Files/dir_faaa2176564b41e79cedcf3028f42662/#dir-batteries/async",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "#dir-batteries",
      "category": "dirs",
      "fullname": "batteries",
      "kind": "dir",
      "language": "",
      "name": "batteries",
      "refid": "dir_af4e2857c92a31b60ebae85174ebeccb",
      "title": "batteries",
      "url": "/_autogen/Files/dir_af4e2857c92a31b60ebae85174ebeccb/#dir-batteries",
      "visibility": "public"
    },
    {
      "anchor": "#dir-batteries/async",
      "category": "dirs",
      "fullname": "batteries/async",
      "kind": "dir",
      "language": "",
      "name": "batteries/async",
      "refid": "dir_faaa2176564b41e79cedcf3028f42662",
      "title": "batteries/async",
      "url": "/_autogen/Files/dir_faaa2176564b41e79cedcf3028f42662/#dir-batteries/async",
      "visibility": "public"
    }
  ],
  "programlisting": "//######=###=##=#=#=#=#=#==#==#====#+==#+==============+==+==+==+=+==+=+=+=+=+=+=+\n// Copyright 2022 Anthony Paul Astolfi\n//\n#pragma once\n#ifndef BATTERIES_ASYNC_WORK_CONTEXT_HPP\n#define BATTERIES_ASYNC_WORK_CONTEXT_HPP\n\n#include <batteries/config.hpp>\n//\n#include <batteries/async/worker_pool.hpp>\n\n#include <batteries/assert.hpp>\n#include <batteries/async/task.hpp>\n#include <batteries/finally.hpp>\n#include <batteries/logging.hpp>\n#include <batteries/utility.hpp>\n\n#include <thread>\n\nnamespace batt {\n\n// Tracks a set of work items submitted to a WorkerPool so that application code can wait on the\n// completion of the entire set.\n//\nclass WorkContext\n{\n   public:\n    WorkContext(const WorkContext&) = delete;\n    WorkContext& operator=(const WorkContext&) = delete;\n\n    explicit WorkContext(WorkerPool& worker_pool) noexcept : worker_pool_{worker_pool}\n    {\n    }\n\n    template <typename Fn>\n    decltype(auto) async_run(Fn&& work_fn)\n    {\n        this->on_work_started();\n        return this->worker_pool_.async_run([this, work_fn = BATT_FORWARD(work_fn)]() mutable {\n            const auto on_exit = batt::finally([&] {\n                this->on_work_finished();\n            });\n\n            work_fn();\n        });\n    }\n\n    void on_work_started()\n    {\n        this->ref_count_.fetch_add(1);\n        this->work_count_.fetch_add(1);\n    }\n\n    void on_work_finished()\n    {\n        this->work_count_.fetch_sub(1);\n        this->ref_count_.fetch_sub(1);\n    }\n\n    void await_done()\n    {\n        BATT_CHECK(!batt::Task::inside_work_fn());\n\n        BATT_DEBUG_INFO(\"work_count=\" << this->work_count_.get_value());\n        this->work_count_\n            .await_true([](i64 count) {\n                BATT_CHECK_GE(count, 0);\n                return count <= 0;\n            })\n            .IgnoreError();\n\n        while (this->ref_count_.load() > 0) {\n            batt::Task::yield();\n        }\n    }\n\n   private:\n    WorkerPool& worker_pool_;\n    batt::Watch<i64> work_count_{0};\n    std::atomic<i64> ref_count_{0};\n};\n\n// Guard class that automatically waits on the completion of work in a WorkContext.\n//\nclass ScopedWorkContext : public WorkContext\n{\n   public:\n    using WorkContext::WorkContext;\n\n    void cancel()\n    {\n        this->cancelled_.store(true);\n    }\n\n    ~ScopedWorkContext() noexcept\n    {\n        if (!this->cancelled_.load()) {\n            this->await_done();\n        }\n    }\n\n   private:\n    std::atomic<bool> cancelled_{false};\n};\n\n}  // namespace batt\n\n#endif  // BATTERIES_ASYNC_WORK_CONTEXT_HPP",
  "publicClasses": [
    {
      "anchor": "",
      "category": "classes",
      "derivedClasses": [
        {
          "external": false,
          "name": "batt::ScopedWorkContext",
          "refid": "classbatt_1_1ScopedWorkContext",
          "url": "/_autogen/Classes/classbatt_1_1ScopedWorkContext/",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "fullname": "batt::WorkContext",
      "kind": "class",
      "language": "cpp",
      "name": "batt::WorkContext",
      "refid": "classbatt_1_1WorkContext",
      "title": "batt::WorkContext",
      "url": "/_autogen/Classes/classbatt_1_1WorkContext/",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": false,
          "name": "batt::WorkContext",
          "refid": "classbatt_1_1WorkContext",
          "url": "/_autogen/Classes/classbatt_1_1WorkContext/",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "batt::ScopedWorkContext",
      "kind": "class",
      "language": "cpp",
      "name": "batt::ScopedWorkContext",
      "refid": "classbatt_1_1ScopedWorkContext",
      "title": "batt::ScopedWorkContext",
      "url": "/_autogen/Classes/classbatt_1_1ScopedWorkContext/",
      "visibility": "public"
    }
  ],
  "refid": "work__context_8hpp",
  "static": false,
  "strong": false,
  "title": "batteries/async/work_context.hpp",
  "url": "/_autogen/Files/work__context_8hpp/#file-work-context.hpp",
  "visibility": "public"
}