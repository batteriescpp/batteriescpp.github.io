{
  "abstract": false,
  "anchor": "#file-rolling.hpp",
  "category": "files",
  "const": false,
  "defines": [
    {
      "abstract": false,
      "anchor": "#define-batteries-seq-rolling-hpp",
      "category": "defines",
      "const": false,
      "definition": "",
      "explicit": false,
      "fullname": "BATTERIES_SEQ_ROLLING_HPP",
      "hasDetails": false,
      "inline": false,
      "kind": "define",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/seq/rolling.hpp",
        "bodyStart": 7,
        "column": 9,
        "file": "batteries/seq/rolling.hpp",
        "line": 7
      },
      "name": "BATTERIES_SEQ_ROLLING_HPP",
      "override": false,
      "refid": "rolling_8hpp_1aa2fd12d415d4a1cfc50f96c1aa307a46",
      "static": false,
      "strong": false,
      "title": "BATTERIES_SEQ_ROLLING_HPP",
      "url": "/_autogen/Files/rolling_8hpp/#define-batteries-seq-rolling-hpp",
      "visibility": "public"
    }
  ],
  "definition": "",
  "explicit": false,
  "fullname": "batteries/seq/rolling.hpp",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "includes": "<batteries/config.hpp>",
  "inline": false,
  "kind": "file",
  "language": "cpp",
  "location": {
    "column": 0,
    "file": "batteries/seq/rolling.hpp",
    "line": 0
  },
  "name": "batteries/seq/rolling.hpp",
  "namespaces": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt::seq",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt::seq",
      "refid": "namespacebatt_1_1seq",
      "title": "batt::seq",
      "url": "/_autogen/Namespaces/namespacebatt_1_1seq/",
      "visibility": "public"
    }
  ],
  "override": false,
  "parent": {
    "anchor": "#dir-batteries/seq",
    "category": "dirs",
    "fullname": "batteries/seq",
    "kind": "dir",
    "language": "",
    "name": "batteries/seq",
    "refid": "dir_0985703d1fb34e0edc7cc330d020d62d",
    "title": "batteries/seq",
    "url": "/_autogen/Files/dir_0985703d1fb34e0edc7cc330d020d62d/#dir-batteries/seq",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "#dir-batteries",
      "category": "dirs",
      "fullname": "batteries",
      "kind": "dir",
      "language": "",
      "name": "batteries",
      "refid": "dir_af4e2857c92a31b60ebae85174ebeccb",
      "title": "batteries",
      "url": "/_autogen/Files/dir_af4e2857c92a31b60ebae85174ebeccb/#dir-batteries",
      "visibility": "public"
    },
    {
      "anchor": "#dir-batteries/seq",
      "category": "dirs",
      "fullname": "batteries/seq",
      "kind": "dir",
      "language": "",
      "name": "batteries/seq",
      "refid": "dir_0985703d1fb34e0edc7cc330d020d62d",
      "title": "batteries/seq",
      "url": "/_autogen/Files/dir_0985703d1fb34e0edc7cc330d020d62d/#dir-batteries/seq",
      "visibility": "public"
    }
  ],
  "programlisting": "//######=###=##=#=#=#=#=#==#==#====#+==#+==============+==+==+==+=+==+=+=+=+=+=+=+\n// Copyright 2022 Anthony Paul Astolfi\n//\n\n#pragma once\n#ifndef BATTERIES_SEQ_ROLLING_HPP\n#define BATTERIES_SEQ_ROLLING_HPP\n\n#include <batteries/config.hpp>\n//\n\n#include <batteries/seq/map_fold.hpp>\n#include <batteries/utility.hpp>\n\n#include <tuple>\n#include <type_traits>\n\nnamespace batt {\nnamespace seq {\n\n//==#==========+==+=+=++=+++++++++++-+-+--+----- --- -- -  -  -   -\n// rolling(initial, binary_fn) -\n//\n//  a1, a2, a3, a4, ... => b1 = fn(initial, a1), b2 = fn(b1, a2), b3 = fn(b2, a3), etc.\n//\ntemplate <typename T, typename BinaryFn>\nstruct RollingBinder {\n    BinaryFn binary_fn;\n    T initial;\n};\n\ntemplate <typename T, typename BinaryFn>\ninline RollingBinder<T, BinaryFn> rolling(BinaryFn&& binary_fn, T&& initial = T{})\n{\n    return {BATT_FORWARD(binary_fn), BATT_FORWARD(initial)};\n}\n\ntemplate <typename Seq, typename T, typename BinaryFn>\n[[nodiscard]] auto operator|(Seq&& seq, RollingBinder<T, BinaryFn>&& binder)\n{\n    static_assert(std::is_same_v<Seq, std::decay_t<Seq>>, \"Sequences may not be captured by reference.\");\n\n    return BATT_FORWARD(seq) | map_fold(BATT_FORWARD(binder.initial),\n                                        [binary_fn = BATT_FORWARD(binder.binary_fn)](auto a, auto b) {\n                                            auto c = binary_fn(a, b);\n                                            return std::make_tuple(c, c);\n                                        });\n}\n\n}  // namespace seq\n}  // namespace batt\n\n#endif  // BATTERIES_SEQ_ROLLING_HPP",
  "publicClasses": [
    {
      "anchor": "",
      "category": "classes",
      "fullname": "batt::seq::RollingBinder",
      "kind": "struct",
      "language": "cpp",
      "name": "batt::seq::RollingBinder",
      "refid": "structbatt_1_1seq_1_1RollingBinder",
      "title": "batt::seq::RollingBinder",
      "url": "/_autogen/Classes/structbatt_1_1seq_1_1RollingBinder/",
      "visibility": "public"
    }
  ],
  "refid": "rolling_8hpp",
  "static": false,
  "strong": false,
  "title": "batteries/seq/rolling.hpp",
  "url": "/_autogen/Files/rolling_8hpp/#file-rolling.hpp",
  "visibility": "public"
}