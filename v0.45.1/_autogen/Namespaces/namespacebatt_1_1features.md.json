{
  "abstract": false,
  "anchor": "",
  "category": "namespaces",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "batt::features",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "inline": false,
  "kind": "namespace",
  "language": "cpp",
  "location": {
    "column": 1,
    "file": "batteries/config.hpp",
    "line": 194
  },
  "name": "batt::features",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "publicClasses": [
    {
      "anchor": "",
      "brief": "Captures the normative feature mask plus the stack trace where the global singleton instance of this type was initialized. ",
      "category": "classes",
      "fullname": "batt::features::State",
      "kind": "struct",
      "language": "cpp",
      "name": "batt::features::State",
      "refid": "structbatt_1_1features_1_1State",
      "summary": "Captures the normative feature mask plus the stack trace where the global singleton instance of this type was initialized. ",
      "title": "batt::features::State",
      "url": "/_autogen/Classes/structbatt_1_1features_1_1State/",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-get-feature-mask",
      "argsString": "()",
      "brief": "Computes and returns the build-time feature mask for the current configuration. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "constexpr mask_type batt::features::get_feature_mask",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::features::get_feature_mask",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 251,
        "bodyFile": "batteries/config.hpp",
        "bodyStart": 222,
        "column": 28,
        "file": "batteries/config.hpp",
        "line": 222
      },
      "name": "get_feature_mask",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "config_8hpp_1a10fcc3feda13731c900e167c5f9fc059",
      "static": false,
      "strong": false,
      "summary": "Computes and returns the build-time feature mask for the current configuration. ",
      "title": "get_feature_mask",
      "type": "constexpr mask_type",
      "typePlain": "constexpr mask_type",
      "url": "/_autogen/Namespaces/namespacebatt_1_1features/#function-get-feature-mask",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-get-global-state",
      "argsString": "()",
      "brief": "Computes and returns the normative feature mask for the program. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "const State& batt::features::get_global_state",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::features::get_global_state",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 267,
        "bodyFile": "batteries/config.hpp",
        "bodyStart": 263,
        "column": 20,
        "file": "batteries/config.hpp",
        "line": 263
      },
      "name": "get_global_state",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "config_8hpp_1ad61d96d5f3e543dc67fa29a715a8a734",
      "static": false,
      "strong": false,
      "summary": "Computes and returns the normative feature mask for the program. ",
      "title": "get_global_state",
      "type": "const [State](/_autogen/Classes/structbatt_1_1features_1_1State/) &",
      "typePlain": "const State &",
      "url": "/_autogen/Namespaces/namespacebatt_1_1features/#function-get-global-state",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-check-local-feature-state",
      "argsString": "()",
      "brief": "Returns true if the computed feature mask for the current compilation unit is the same as the global mask; otherwise prints a diagnostic message and panics. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "bool batt::features::check_local_feature_state",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::features::check_local_feature_state",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 287,
        "bodyFile": "batteries/config.hpp",
        "bodyStart": 272,
        "column": 13,
        "file": "batteries/config.hpp",
        "line": 272
      },
      "name": "check_local_feature_state",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "config_8hpp_1ae7da94a7c5914ce2e4cda99a671a433d",
      "static": false,
      "strong": false,
      "summary": "Returns true if the computed feature mask for the current compilation unit is the same as the global mask; otherwise prints a diagnostic message and panics. ",
      "title": "check_local_feature_state",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Namespaces/namespacebatt_1_1features/#function-check-local-feature-state",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#enum-feature",
      "brief": "The list of build-time features that can potentially affect ABI. ",
      "category": "types",
      "const": false,
      "definition": "",
      "details": "Each of these should have a section in this file (see above) that describes the feature in more detail. ",
      "enumvalues": [
        {
          "anchor": "#enumvalue-kheaderonly",
          "category": "types",
          "definition": "",
          "fullname": "Feature::kHeaderOnly",
          "hasDetails": false,
          "initializer": "= 0",
          "kind": "enumvalue",
          "language": "",
          "name": "kHeaderOnly",
          "refid": "config_8hpp_1af94976fee74b13fd066c2574f88bed69a172101458799c2d6348670de581d8397",
          "title": "kHeaderOnly",
          "url": "/_autogen/Namespaces/namespacebatt_1_1features/#enumvalue-kheaderonly",
          "visibility": "public"
        },
        {
          "anchor": "#enumvalue-kseqspecializealgorithms",
          "category": "types",
          "definition": "",
          "fullname": "Feature::kSeqSpecializeAlgorithms",
          "hasDetails": false,
          "kind": "enumvalue",
          "language": "",
          "name": "kSeqSpecializeAlgorithms",
          "refid": "config_8hpp_1af94976fee74b13fd066c2574f88bed69a3b3c7099eaf2c80c6114595c40378d9e",
          "title": "kSeqSpecializeAlgorithms",
          "url": "/_autogen/Namespaces/namespacebatt_1_1features/#enumvalue-kseqspecializealgorithms",
          "visibility": "public"
        },
        {
          "anchor": "#enumvalue-kwithglog",
          "category": "types",
          "definition": "",
          "fullname": "Feature::kWithGlog",
          "hasDetails": false,
          "kind": "enumvalue",
          "language": "",
          "name": "kWithGlog",
          "refid": "config_8hpp_1af94976fee74b13fd066c2574f88bed69a6f78a5c09177c47ab66096bd7686ca83",
          "title": "kWithGlog",
          "url": "/_autogen/Namespaces/namespacebatt_1_1features/#enumvalue-kwithglog",
          "visibility": "public"
        },
        {
          "anchor": "#enumvalue-kwithprotobuf",
          "category": "types",
          "definition": "",
          "fullname": "Feature::kWithProtobuf",
          "hasDetails": false,
          "kind": "enumvalue",
          "language": "",
          "name": "kWithProtobuf",
          "refid": "config_8hpp_1af94976fee74b13fd066c2574f88bed69a955b37b2bc329ae650eab7387ccd7240",
          "title": "kWithProtobuf",
          "url": "/_autogen/Namespaces/namespacebatt_1_1features/#enumvalue-kwithprotobuf",
          "visibility": "public"
        },
        {
          "anchor": "#enumvalue-kcompilergcc",
          "category": "types",
          "definition": "",
          "fullname": "Feature::kCompilerGCC",
          "hasDetails": false,
          "kind": "enumvalue",
          "language": "",
          "name": "kCompilerGCC",
          "refid": "config_8hpp_1af94976fee74b13fd066c2574f88bed69ac90d916edb7343f1aaab53bef72dab31",
          "title": "kCompilerGCC",
          "url": "/_autogen/Namespaces/namespacebatt_1_1features/#enumvalue-kcompilergcc",
          "visibility": "public"
        },
        {
          "anchor": "#enumvalue-kcompilerclang",
          "category": "types",
          "definition": "",
          "fullname": "Feature::kCompilerClang",
          "hasDetails": false,
          "kind": "enumvalue",
          "language": "",
          "name": "kCompilerClang",
          "refid": "config_8hpp_1af94976fee74b13fd066c2574f88bed69a57cb809ab8fe2ec34e364aefae7a1176",
          "title": "kCompilerClang",
          "url": "/_autogen/Namespaces/namespacebatt_1_1features/#enumvalue-kcompilerclang",
          "visibility": "public"
        },
        {
          "anchor": "#enumvalue-kwithasserts",
          "category": "types",
          "definition": "",
          "fullname": "Feature::kWithAsserts",
          "hasDetails": false,
          "kind": "enumvalue",
          "language": "",
          "name": "kWithAsserts",
          "refid": "config_8hpp_1af94976fee74b13fd066c2574f88bed69a99a35b82cf20dae1643ef10c367e6c79",
          "title": "kWithAsserts",
          "url": "/_autogen/Namespaces/namespacebatt_1_1features/#enumvalue-kwithasserts",
          "visibility": "public"
        },
        {
          "anchor": "#enumvalue-knumfeatures",
          "category": "types",
          "definition": "",
          "fullname": "Feature::kNumFeatures",
          "hasDetails": false,
          "kind": "enumvalue",
          "language": "",
          "name": "kNumFeatures",
          "refid": "config_8hpp_1af94976fee74b13fd066c2574f88bed69a2ea68de98c00278fd16b465acd1d2b20",
          "title": "kNumFeatures",
          "url": "/_autogen/Namespaces/namespacebatt_1_1features/#enumvalue-knumfeatures",
          "visibility": "public"
        }
      ],
      "explicit": false,
      "fullname": "batt::features::Feature",
      "hasDetails": true,
      "inline": false,
      "kind": "enum",
      "language": "cpp",
      "location": {
        "bodyEnd": 212,
        "bodyFile": "batteries/config.hpp",
        "bodyStart": 200,
        "column": 1,
        "file": "batteries/config.hpp",
        "line": 200
      },
      "name": "Feature",
      "override": false,
      "refid": "config_8hpp_1af94976fee74b13fd066c2574f88bed69",
      "static": false,
      "strong": false,
      "summary": "The list of build-time features that can potentially affect ABI. ",
      "title": "Feature",
      "url": "/_autogen/Namespaces/namespacebatt_1_1features/#enum-feature",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#using-mask-type",
      "category": "types",
      "const": false,
      "definition": "using batt::features::mask_type = typedef unsigned long long",
      "explicit": false,
      "fullname": "batt::features::mask_type",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/config.hpp",
        "bodyStart": 214,
        "column": 1,
        "file": "batteries/config.hpp",
        "line": 214
      },
      "name": "mask_type",
      "override": false,
      "refid": "config_8hpp_1a4eb2c9b2e13389374f8991954a09cbe3",
      "static": false,
      "strong": false,
      "title": "mask_type",
      "type": "unsigned long long",
      "typePlain": "unsigned long long",
      "url": "/_autogen/Namespaces/namespacebatt_1_1features/#using-mask-type",
      "visibility": "public"
    }
  ],
  "refid": "namespacebatt_1_1features",
  "static": false,
  "strong": false,
  "title": "batt::features",
  "url": "/_autogen/Namespaces/namespacebatt_1_1features/",
  "visibility": "public"
}