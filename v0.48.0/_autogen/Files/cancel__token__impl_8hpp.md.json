{
  "abstract": false,
  "anchor": "#file-cancel-token-impl.hpp",
  "category": "files",
  "const": false,
  "defines": [
    {
      "abstract": false,
      "anchor": "#define-batteries-async-cancel-token-impl-hpp",
      "category": "defines",
      "const": false,
      "definition": "",
      "explicit": false,
      "fullname": "BATTERIES_ASYNC_CANCEL_TOKEN_IMPL_HPP",
      "hasDetails": false,
      "inline": false,
      "kind": "define",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/cancel_token_impl.hpp",
        "bodyStart": 6,
        "column": 9,
        "file": "batteries/async/cancel_token_impl.hpp",
        "line": 6
      },
      "name": "BATTERIES_ASYNC_CANCEL_TOKEN_IMPL_HPP",
      "override": false,
      "refid": "cancel__token__impl_8hpp_1ac4224287eb755525458eab7bb6d07d00",
      "static": false,
      "strong": false,
      "title": "BATTERIES_ASYNC_CANCEL_TOKEN_IMPL_HPP",
      "url": "/_autogen/Files/cancel__token__impl_8hpp/#define-batteries-async-cancel-token-impl-hpp",
      "visibility": "public"
    }
  ],
  "definition": "",
  "explicit": false,
  "fullname": "batteries/async/cancel_token_impl.hpp",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "includes": "<batteries/config.hpp>",
  "inline": false,
  "kind": "file",
  "language": "cpp",
  "location": {
    "column": 0,
    "file": "batteries/async/cancel_token_impl.hpp",
    "line": 0
  },
  "name": "batteries/async/cancel_token_impl.hpp",
  "namespaces": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "override": false,
  "parent": {
    "anchor": "#dir-batteries/async",
    "category": "dirs",
    "fullname": "batteries/async",
    "kind": "dir",
    "language": "",
    "name": "batteries/async",
    "refid": "dir_faaa2176564b41e79cedcf3028f42662",
    "title": "batteries/async",
    "url": "/_autogen/Files/dir_faaa2176564b41e79cedcf3028f42662/#dir-batteries/async",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "#dir-batteries",
      "category": "dirs",
      "fullname": "batteries",
      "kind": "dir",
      "language": "",
      "name": "batteries",
      "refid": "dir_af4e2857c92a31b60ebae85174ebeccb",
      "title": "batteries",
      "url": "/_autogen/Files/dir_af4e2857c92a31b60ebae85174ebeccb/#dir-batteries",
      "visibility": "public"
    },
    {
      "anchor": "#dir-batteries/async",
      "category": "dirs",
      "fullname": "batteries/async",
      "kind": "dir",
      "language": "",
      "name": "batteries/async",
      "refid": "dir_faaa2176564b41e79cedcf3028f42662",
      "title": "batteries/async",
      "url": "/_autogen/Files/dir_faaa2176564b41e79cedcf3028f42662/#dir-batteries/async",
      "visibility": "public"
    }
  ],
  "programlisting": "//######=###=##=#=#=#=#=#==#==#====#+==#+==============+==+==+==+=+==+=+=+=+=+=+=+\n// Copyright 2023 Anthony Paul Astolfi\n//\n#pragma once\n#ifndef BATTERIES_ASYNC_CANCEL_TOKEN_IMPL_HPP\n#define BATTERIES_ASYNC_CANCEL_TOKEN_IMPL_HPP\n\n#include <batteries/config.hpp>\n//\n\nnamespace batt {\n\n//==#==========+==+=+=++=+++++++++++-+-+--+----- --- -- -  -  -   -\n//\nBATT_INLINE_IMPL /*static*/ const CancelToken& CancelToken::none() noexcept\n{\n    static const CancelToken none_{None};\n    return none_;\n}\n\n//==#==========+==+=+=++=+++++++++++-+-+--+----- --- -- -  -  -   -\n//\nBATT_INLINE_IMPL /*implicit*/ CancelToken::CancelToken(NoneType) noexcept : impl_{nullptr}\n{\n}\n\n//==#==========+==+=+=++=+++++++++++-+-+--+----- --- -- -  -  -   -\n//\nBATT_INLINE_IMPL CancelToken& CancelToken::operator=(const NoneType&) noexcept\n{\n    this->impl_ = nullptr;\n    return *this;\n}\n\n//==#==========+==+=+=++=+++++++++++-+-+--+----- --- -- -  -  -   -\n//\nBATT_INLINE_IMPL void CancelToken::cancel() const noexcept\n{\n    BATT_CHECK_NOT_NULLPTR(this->impl_);\n    this->impl_->state_.fetch_or(kCancelled);\n}\n\n//==#==========+==+=+=++=+++++++++++-+-+--+----- --- -- -  -  -   -\n//\nBATT_INLINE_IMPL bool CancelToken::is_valid() const noexcept\n{\n    return this->impl_ != nullptr;\n}\n\n//==#==========+==+=+=++=+++++++++++-+-+--+----- --- -- -  -  -   -\n//\nBATT_INLINE_IMPL bool CancelToken::is_cancelled() const noexcept\n{\n    BATT_CHECK_NOT_NULLPTR(this->impl_);\n    return this->impl_->is_cancelled();\n}\n\n//==#==========+==+=+=++=+++++++++++-+-+--+----- --- -- -  -  -   -\n//\nBATT_INLINE_IMPL /*explicit*/ CancelToken::operator bool() const noexcept\n{\n    return this->is_valid();\n}\n\n//==#==========+==+=+=++=+++++++++++-+-+--+----- --- -- -  -  -   -\n//\nBATT_INLINE_IMPL SmallFn<void(std::ostream&)> CancelToken::debug_info() const noexcept\n{\n    return [impl = this->impl_](std::ostream& out) {\n        if (impl) {\n            out << \"CancelToken{state=\" << std::bitset<8>{impl->state_.get_value()} << \",}\";\n        } else {\n            out << \"CancelToken{None}\";\n        }\n    };\n}\n\n}  //namespace batt\n\n#endif  // BATTERIES_ASYNC_CANCEL_TOKEN_IMPL_HPP",
  "refid": "cancel__token__impl_8hpp",
  "static": false,
  "strong": false,
  "title": "batteries/async/cancel_token_impl.hpp",
  "url": "/_autogen/Files/cancel__token__impl_8hpp/#file-cancel-token-impl.hpp",
  "visibility": "public"
}