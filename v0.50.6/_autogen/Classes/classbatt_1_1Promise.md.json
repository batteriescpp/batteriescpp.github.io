{
  "abstract": false,
  "anchor": "",
  "brief": "An obligation to provide a value of type T to a [Future](). ",
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "friends": [
    {
      "abstract": false,
      "anchor": "#friend-get-future",
      "argsString": "(const Promise< U > &promise)",
      "category": "friends",
      "const": false,
      "default": false,
      "definition": "Future<U> get_future",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Promise::get_future",
      "hasDetails": true,
      "inline": false,
      "kind": "friend",
      "language": "cpp",
      "location": {
        "column": 19,
        "file": "batteries/async/future_decl.hpp",
        "line": 49
      },
      "name": "get_future",
      "override": false,
      "params": [
        {
          "name": "promise",
          "type": "const [Promise](/_autogen/Classes/classbatt_1_1Promise/)< U > &",
          "typePlain": "const Promise< U > &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Promise_1aebf757a9dac1d3ae2f5c06f7ade9a0eb",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "title": "get_future",
      "type": "[Future](/_autogen/Classes/classbatt_1_1Future/)< U >",
      "typePlain": "Future< U >",
      "url": "/_autogen/Classes/classbatt_1_1Promise/#friend-get-future",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "fullname": "batt::Promise",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<batteries/async/future_decl.hpp>",
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 91,
    "bodyFile": "batteries/async/future_decl.hpp",
    "bodyStart": 46,
    "column": 1,
    "file": "batteries/async/future_decl.hpp",
    "line": 45
  },
  "name": "batt::Promise",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "privateAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-impl-",
      "category": "attributes",
      "const": false,
      "definition": "boost::intrusive_ptr<detail::FutureImpl<T> > batt::Promise< T >::impl_",
      "explicit": false,
      "fullname": "batt::Promise::impl_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/future_decl.hpp",
        "bodyStart": 90,
        "column": 26,
        "file": "batteries/async/future_decl.hpp",
        "line": 90
      },
      "name": "impl_",
      "override": false,
      "refid": "classbatt_1_1Promise_1ad79c534d7174d32a29109c9b7334ef4d",
      "static": false,
      "strong": false,
      "title": "impl_",
      "type": "boost::intrusive_ptr< [detail::FutureImpl](/_autogen/Classes/classbatt_1_1detail_1_1FutureImpl/)< T > >",
      "typePlain": "boost::intrusive_ptr< detail::FutureImpl< T > >",
      "url": "/_autogen/Classes/classbatt_1_1Promise/#variable-impl-",
      "visibility": "private"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-promise",
      "argsString": "()",
      "brief": "Constructs a new empty [Promise](/_autogen/Classes/classbatt_1_1Promise/) object. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::Promise< T >::Promise",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Promise::Promise",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 5,
        "file": "batteries/async/future_decl.hpp",
        "line": 55
      },
      "name": "Promise",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Promise_1a03dfc98c52731323235b434dfa09429b",
      "static": false,
      "strong": false,
      "summary": "Constructs a new empty Promise object. ",
      "title": "Promise",
      "url": "/_autogen/Classes/classbatt_1_1Promise/#function-promise",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-is-ready",
      "argsString": "() const",
      "brief": "Tests whether the [Future]() value is ready to be read. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "bool batt::Promise< T >::is_ready",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Promise::is_ready",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 10,
        "file": "batteries/async/future_decl.hpp",
        "line": 59
      },
      "name": "is_ready",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Promise_1a58abc46faab1f6fa6a64a467263252e4",
      "static": false,
      "strong": false,
      "summary": "Tests whether the Future value is ready to be read. ",
      "title": "is_ready",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/classbatt_1_1Promise/#function-is-ready",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-set-value",
      "argsString": "(T &&value)",
      "brief": "Sets the value of the promise, resolving the corresponding [Future]() and unblocking any pending calls to await. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Promise< T >::set_value",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Promise::set_value",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 10,
        "file": "batteries/async/future_decl.hpp",
        "line": 64
      },
      "name": "set_value",
      "override": false,
      "params": [
        {
          "name": "value",
          "type": "T &&",
          "typePlain": "T &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Promise_1a1f5947cddb7d0ba4ea7b656d9925c989",
      "static": false,
      "strong": false,
      "summary": "Sets the value of the promise, resolving the corresponding Future and unblocking any pending calls to await. ",
      "title": "set_value",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Promise/#function-set-value",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-set-value",
      "argsString": "(StatusOr< T > &&value)",
      "brief": "Sets the value of the promise, resolving the corresponding [Future]() and unblocking any pending calls to await. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Promise< T >::set_value",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Promise::set_value",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 10,
        "file": "batteries/async/future_decl.hpp",
        "line": 69
      },
      "name": "set_value",
      "override": false,
      "params": [
        {
          "name": "value",
          "type": "[StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< T > &&",
          "typePlain": "StatusOr< T > &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Promise_1a5e888504329e23cfe0a71eace780c5b5",
      "static": false,
      "strong": false,
      "summary": "Sets the value of the promise, resolving the corresponding Future and unblocking any pending calls to await. ",
      "title": "set_value",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Promise/#function-set-value",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-set-value",
      "argsString": "(const StatusOr< T > &value)",
      "brief": "Sets the value of the promise, resolving the corresponding [Future]() and unblocking any pending calls to await. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Promise< T >::set_value",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Promise::set_value",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 10,
        "file": "batteries/async/future_decl.hpp",
        "line": 74
      },
      "name": "set_value",
      "override": false,
      "params": [
        {
          "name": "value",
          "type": "const [StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< T > &",
          "typePlain": "const StatusOr< T > &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Promise_1af5fb917b9f7211850827cd6f85c03feb",
      "static": false,
      "strong": false,
      "summary": "Sets the value of the promise, resolving the corresponding Future and unblocking any pending calls to await. ",
      "title": "set_value",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Promise/#function-set-value",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-set-error",
      "argsString": "(const Status &status)",
      "brief": "Resolves the promise to the given error status. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Promise< T >::set_error",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Promise::set_error",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 10,
        "file": "batteries/async/future_decl.hpp",
        "line": 78
      },
      "name": "set_error",
      "override": false,
      "params": [
        {
          "name": "status",
          "type": "const [Status](/_autogen/Classes/classbatt_1_1Status/) &",
          "typePlain": "const Status &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Promise_1aef65a9330f3cb144ba5bd3f3f3284d65",
      "static": false,
      "strong": false,
      "summary": "Resolves the promise to the given error status. ",
      "title": "set_error",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Promise/#function-set-error",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-get-future",
      "argsString": "() const",
      "brief": "Same as `batt::get_future(*this)`. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "Future<T> batt::Promise< T >::get_future",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Promise::get_future",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 85,
        "bodyFile": "batteries/async/future_decl.hpp",
        "bodyStart": 82,
        "column": 12,
        "file": "batteries/async/future_decl.hpp",
        "line": 82
      },
      "name": "get_future",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Promise_1a5980e59f1a235888db97bd60759d4c2d",
      "static": false,
      "strong": false,
      "summary": "Same as batt::get_future(*this). ",
      "title": "get_future",
      "type": "[Future](/_autogen/Classes/classbatt_1_1Future/)< T >",
      "typePlain": "Future< T >",
      "url": "/_autogen/Classes/classbatt_1_1Promise/#function-get-future",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1Promise",
  "see": [
    "[batt::Future](/_autogen/Classes/classbatt_1_1Future/)"
  ],
  "static": false,
  "strong": false,
  "summary": "An obligation to provide a value of type T to a Future. ",
  "templateParams": [
    {
      "name": "",
      "type": "typename T",
      "typePlain": "typename T"
    }
  ],
  "title": "batt::Promise",
  "url": "/_autogen/Classes/classbatt_1_1Promise/",
  "visibility": "public"
}