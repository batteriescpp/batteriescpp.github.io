{
  "abstract": false,
  "anchor": "",
  "brief": "An atomic variable that maintains a gauge-like value, which can rise and fall over time, by means of two monotonic counters: one for increases, one for decreases. ",
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "The monotonic counters that combine to form the gauge value are stored in the upper and lower halves of the bits of a single atomic variable. Because under this scheme, we must prevent overflow from one counter into the next, each modification to the variable is subsequently normalized by resetting the most significant bit of both the increase counter and decrease counter to zero if they are ever both observed to be 1. This normalization is done via compare-and-swap loop after an atomic fetch add operation to do either the addition or subtraction. ",
  "explicit": false,
  "fullname": "batt::AtomicCounterGauge",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<batteries/atomic_counter_gauge.hpp>",
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 339,
    "bodyFile": "batteries/atomic_counter_gauge.hpp",
    "bodyStart": 27,
    "column": 1,
    "file": "batteries/atomic_counter_gauge.hpp",
    "line": 26
  },
  "name": "batt::AtomicCounterGauge",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "privateAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-state-",
      "category": "attributes",
      "const": false,
      "definition": "std::atomic<value_type> batt::AtomicCounterGauge< IntT >::state_",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::state_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 338,
        "column": 17,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 338
      },
      "name": "state_",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1aa75194eba9c47557499aa34b4412db21",
      "static": false,
      "strong": false,
      "title": "state_",
      "type": "std::atomic< value_type >",
      "typePlain": "std::atomic< value_type >",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-state-",
      "visibility": "private"
    }
  ],
  "privateFunctions": [
    {
      "abstract": false,
      "anchor": "#function-normalize",
      "argsString": "(value_type observed_state) noexcept",
      "brief": "Atomically normalizes the variable state using a CAS loop. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "value_type batt::AtomicCounterGauge< IntT >::normalize",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::normalize",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 335,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 325,
        "column": 16,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 325
      },
      "name": "normalize",
      "override": false,
      "params": [
        {
          "name": "observed_state",
          "type": "value_type",
          "typePlain": "value_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a00624af81432518c8af63d4500695777",
      "see": [
        "[State::normalize](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/#function-normalize). "
      ],
      "static": false,
      "strong": false,
      "summary": "Atomically normalizes the variable state using a CAS loop. ",
      "title": "normalize",
      "type": "value_type",
      "typePlain": "value_type",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-normalize",
      "virtual": false,
      "visibility": "private"
    }
  ],
  "publicAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-knumbits",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::AtomicCounterGauge< IntT >::kNumBits",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kNumBits",
      "hasDetails": false,
      "initializer": "= sizeof(IntT) * 8",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 52,
        "column": 28,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 52
      },
      "name": "kNumBits",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1ac04a930d084dbf2b03429a5e78c0d0e0",
      "static": true,
      "strong": false,
      "title": "kNumBits",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-knumbits",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-knumcountbits",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::AtomicCounterGauge< IntT >::kNumCountBits",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kNumCountBits",
      "hasDetails": false,
      "initializer": "= kNumBits / 2",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 53,
        "column": 28,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 53
      },
      "name": "kNumCountBits",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a31ad42678eb0bb0d250e5c0c8a390fa5",
      "static": true,
      "strong": false,
      "title": "kNumCountBits",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-knumcountbits",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-khalfmask",
      "category": "attributes",
      "const": false,
      "definition": "constexpr value_type batt::AtomicCounterGauge< IntT >::kHalfMask",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kHalfMask",
      "hasDetails": false,
      "initializer": "= ((value_type{1} << kNumCountBits) - 1)",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 57,
        "column": 33,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 57
      },
      "name": "kHalfMask",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1ac3a578527ef55777166344773c6303ff",
      "static": true,
      "strong": false,
      "title": "kHalfMask",
      "type": "constexpr value_type",
      "typePlain": "constexpr value_type",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-khalfmask",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kcountmask",
      "category": "attributes",
      "const": false,
      "definition": "constexpr value_type batt::AtomicCounterGauge< IntT >::kCountMask",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kCountMask",
      "hasDetails": false,
      "initializer": "= (value_type{1} << (kNumCountBits - 1)) - 1",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 58,
        "column": 33,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 58
      },
      "name": "kCountMask",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a023b5c4155bb25a69175ccfeebf009c0",
      "static": true,
      "strong": false,
      "title": "kCountMask",
      "type": "constexpr value_type",
      "typePlain": "constexpr value_type",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-kcountmask",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kgaugemask",
      "category": "attributes",
      "const": false,
      "definition": "constexpr value_type batt::AtomicCounterGauge< IntT >::kGaugeMask",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kGaugeMask",
      "hasDetails": false,
      "initializer": "= kCountMask",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 59,
        "column": 33,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 59
      },
      "name": "kGaugeMask",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1ad3d6acff986e3370aad53e0499e88856",
      "static": true,
      "strong": false,
      "title": "kGaugeMask",
      "type": "constexpr value_type",
      "typePlain": "constexpr value_type",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-kgaugemask",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kaddshift",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::AtomicCounterGauge< IntT >::kAddShift",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kAddShift",
      "hasDetails": false,
      "initializer": "= 0",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 61,
        "column": 28,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 61
      },
      "name": "kAddShift",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a59772b2e1077c6fe54fb37ead5a245d3",
      "static": true,
      "strong": false,
      "title": "kAddShift",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-kaddshift",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kaddoverflowshift",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::AtomicCounterGauge< IntT >::kAddOverflowShift",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kAddOverflowShift",
      "hasDetails": false,
      "initializer": "= kNumCountBits - 1",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 62,
        "column": 28,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 62
      },
      "name": "kAddOverflowShift",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a5ff5ae097ffda704d725de054eedda27",
      "static": true,
      "strong": false,
      "title": "kAddOverflowShift",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-kaddoverflowshift",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-ksubshift",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::AtomicCounterGauge< IntT >::kSubShift",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kSubShift",
      "hasDetails": false,
      "initializer": "= kNumCountBits",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 64,
        "column": 28,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 64
      },
      "name": "kSubShift",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a150fe7fc9a59a01aac13f88f0a13d5d3",
      "static": true,
      "strong": false,
      "title": "kSubShift",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-ksubshift",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-ksuboverflowshift",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::AtomicCounterGauge< IntT >::kSubOverflowShift",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kSubOverflowShift",
      "hasDetails": false,
      "initializer": "= kNumBits - 1",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 65,
        "column": 28,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 65
      },
      "name": "kSubOverflowShift",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1aa15d2d5fdc6ebfa03c9f65f7f01094db",
      "static": true,
      "strong": false,
      "title": "kSubOverflowShift",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-ksuboverflowshift",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kaddincrement",
      "category": "attributes",
      "const": false,
      "definition": "constexpr value_type batt::AtomicCounterGauge< IntT >::kAddIncrement",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kAddIncrement",
      "hasDetails": false,
      "initializer": "= value_type{1} << kAddShift",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 67,
        "column": 33,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 67
      },
      "name": "kAddIncrement",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a188a9e7b4f19d41b44c0c5847f313b33",
      "static": true,
      "strong": false,
      "title": "kAddIncrement",
      "type": "constexpr value_type",
      "typePlain": "constexpr value_type",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-kaddincrement",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kaddoverflow",
      "category": "attributes",
      "const": false,
      "definition": "constexpr value_type batt::AtomicCounterGauge< IntT >::kAddOverflow",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kAddOverflow",
      "hasDetails": false,
      "initializer": "= value_type{1} << kAddOverflowShift",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 68,
        "column": 33,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 68
      },
      "name": "kAddOverflow",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1ae3be48ee884e435a3b2e45ee34fd4002",
      "static": true,
      "strong": false,
      "title": "kAddOverflow",
      "type": "constexpr value_type",
      "typePlain": "constexpr value_type",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-kaddoverflow",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-kaddmask",
      "category": "attributes",
      "const": false,
      "definition": "constexpr value_type batt::AtomicCounterGauge< IntT >::kAddMask",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kAddMask",
      "hasDetails": false,
      "initializer": "= kHalfMask << kAddShift",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 69,
        "column": 33,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 69
      },
      "name": "kAddMask",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1ad1bb0003deec7125f72902f214205661",
      "static": true,
      "strong": false,
      "title": "kAddMask",
      "type": "constexpr value_type",
      "typePlain": "constexpr value_type",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-kaddmask",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-ksubincrement",
      "category": "attributes",
      "const": false,
      "definition": "constexpr value_type batt::AtomicCounterGauge< IntT >::kSubIncrement",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kSubIncrement",
      "hasDetails": false,
      "initializer": "= value_type{1} << kSubShift",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 71,
        "column": 33,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 71
      },
      "name": "kSubIncrement",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a79beae73d10bc7138bc9f624eb4c2970",
      "static": true,
      "strong": false,
      "title": "kSubIncrement",
      "type": "constexpr value_type",
      "typePlain": "constexpr value_type",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-ksubincrement",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-ksuboverflow",
      "category": "attributes",
      "const": false,
      "definition": "constexpr value_type batt::AtomicCounterGauge< IntT >::kSubOverflow",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kSubOverflow",
      "hasDetails": false,
      "initializer": "= value_type{1} << kSubOverflowShift",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 72,
        "column": 33,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 72
      },
      "name": "kSubOverflow",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1ae0e01c6862e695020e1e267126cab89b",
      "static": true,
      "strong": false,
      "title": "kSubOverflow",
      "type": "constexpr value_type",
      "typePlain": "constexpr value_type",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-ksuboverflow",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-ksubmask",
      "category": "attributes",
      "const": false,
      "definition": "constexpr value_type batt::AtomicCounterGauge< IntT >::kSubMask",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::kSubMask",
      "hasDetails": false,
      "initializer": "= kHalfMask << kSubShift",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 73,
        "column": 33,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 73
      },
      "name": "kSubMask",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a57aa5b48b5716498e623c6ac530436e0",
      "static": true,
      "strong": false,
      "title": "kSubMask",
      "type": "constexpr value_type",
      "typePlain": "constexpr value_type",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#variable-ksubmask",
      "visibility": "public"
    }
  ],
  "publicClasses": [
    {
      "anchor": "",
      "brief": "A value of the atomic variable that implements [AtomicCounterGauge](/_autogen/Classes/classbatt_1_1AtomicCounterGauge/). ",
      "category": "classes",
      "fullname": "batt::AtomicCounterGauge::State",
      "kind": "class",
      "language": "cpp",
      "name": "batt::AtomicCounterGauge::State",
      "refid": "classbatt_1_1AtomicCounterGauge_1_1State",
      "summary": "A value of the atomic variable that implements AtomicCounterGauge. ",
      "title": "batt::AtomicCounterGauge::State",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-atomiccountergauge",
      "argsString": "(value_type initial_value=0) noexcept",
      "brief": "Constructs an [AtomicCounterGauge](/_autogen/Classes/classbatt_1_1AtomicCounterGauge/) with the given initial (gauge) value. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::AtomicCounterGauge< IntT >::AtomicCounterGauge",
      "deleted": false,
      "explicit": true,
      "fullname": "batt::AtomicCounterGauge::AtomicCounterGauge",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 218,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 215,
        "column": 14,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 215
      },
      "name": "AtomicCounterGauge",
      "override": false,
      "params": [
        {
          "defval": "0",
          "defvalPlain": "0",
          "name": "initial_value",
          "type": "value_type",
          "typePlain": "value_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a917ffc7ede3eec63d2ac29bcb22c0dd7",
      "static": false,
      "strong": false,
      "summary": "Constructs an AtomicCounterGauge with the given initial (gauge) value. ",
      "title": "AtomicCounterGauge",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-atomiccountergauge",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-atomiccountergauge",
      "argsString": "(State initial_state) noexcept",
      "brief": "Constructs an [AtomicCounterGauge](/_autogen/Classes/classbatt_1_1AtomicCounterGauge/) with the given initial raw state value. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::AtomicCounterGauge< IntT >::AtomicCounterGauge",
      "deleted": false,
      "explicit": true,
      "fullname": "batt::AtomicCounterGauge::AtomicCounterGauge",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 224,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 222,
        "column": 14,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 222
      },
      "name": "AtomicCounterGauge",
      "override": false,
      "params": [
        {
          "name": "initial_state",
          "type": "[State](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/)",
          "typePlain": "State"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a1bbb9bfceecebbff37e4f6b7ea405fec",
      "static": false,
      "strong": false,
      "summary": "Constructs an AtomicCounterGauge with the given initial raw state value. ",
      "title": "AtomicCounterGauge",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-atomiccountergauge",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-load",
      "argsString": "() noexcept",
      "brief": "Atomically loads and returns the value of the variable. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "State batt::AtomicCounterGauge< IntT >::load",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::load",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 231,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 228,
        "column": 11,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 228
      },
      "name": "load",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a125f2d6001413a124328006e85415c20",
      "static": false,
      "strong": false,
      "summary": "Atomically loads and returns the value of the variable. ",
      "title": "load",
      "type": "[State](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/)",
      "typePlain": "State",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-load",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-store",
      "argsString": "(value_type new_value) noexcept",
      "brief": "Atomically updates the (gauge) value of the variable. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::AtomicCounterGauge< IntT >::store",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::store",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 238,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 235,
        "column": 10,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 235
      },
      "name": "store",
      "override": false,
      "params": [
        {
          "name": "new_value",
          "type": "value_type",
          "typePlain": "value_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a40f9363f2fa4d1037ce248b67709cdb6",
      "static": false,
      "strong": false,
      "summary": "Atomically updates the (gauge) value of the variable. ",
      "title": "store",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-store",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-store",
      "argsString": "(State new_state) noexcept",
      "brief": "Atomically updates the raw state value of the variable. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::AtomicCounterGauge< IntT >::store",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::store",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 245,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 242,
        "column": 10,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 242
      },
      "name": "store",
      "override": false,
      "params": [
        {
          "name": "new_state",
          "type": "[State](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/)",
          "typePlain": "State"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a9608c24835c0a0f682f9ff3aca2733e2",
      "static": false,
      "strong": false,
      "summary": "Atomically updates the raw state value of the variable. ",
      "title": "store",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-store",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-exchange",
      "argsString": "(State new_state) noexcept",
      "brief": "Atomically swaps the raw state value of the variable, returning its old value. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "State batt::AtomicCounterGauge< IntT >::exchange",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::exchange",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 252,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 249,
        "column": 11,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 249
      },
      "name": "exchange",
      "override": false,
      "params": [
        {
          "name": "new_state",
          "type": "[State](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/)",
          "typePlain": "State"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a4c299cd71d294ebc82eeca46e3ae3556",
      "static": false,
      "strong": false,
      "summary": "Atomically swaps the raw state value of the variable, returning its old value. ",
      "title": "exchange",
      "type": "[State](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/)",
      "typePlain": "State",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-exchange",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-exchange",
      "argsString": "(value_type new_value) noexcept",
      "brief": "Atomically swaps the gauge value of the variable, returning its old value. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "State batt::AtomicCounterGauge< IntT >::exchange",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::exchange",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 259,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 256,
        "column": 11,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 256
      },
      "name": "exchange",
      "override": false,
      "params": [
        {
          "name": "new_value",
          "type": "value_type",
          "typePlain": "value_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a4349b236b2fd862bceaec860d7db9e32",
      "static": false,
      "strong": false,
      "summary": "Atomically swaps the gauge value of the variable, returning its old value. ",
      "title": "exchange",
      "type": "[State](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/)",
      "typePlain": "State",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-exchange",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-fetch-add",
      "argsString": "(value_type delta) noexcept",
      "brief": "Atomically increments the variable by increasing the add counter. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "State batt::AtomicCounterGauge< IntT >::fetch_add",
      "deleted": false,
      "details": "`delta` must NOT be negative; use [AtomicCounterGauge::fetch_sub](/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-fetch-sub) in this case. ",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::fetch_add",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 281,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 265,
        "column": 11,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 265
      },
      "name": "fetch_add",
      "override": false,
      "params": [
        {
          "name": "delta",
          "type": "value_type",
          "typePlain": "value_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a8eebe0f788fad4d161ae7669bb320313",
      "static": false,
      "strong": false,
      "summary": "Atomically increments the variable by increasing the add counter. ",
      "title": "fetch_add",
      "type": "[State](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/)",
      "typePlain": "State",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-fetch-add",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-increment",
      "argsString": "() noexcept",
      "brief": "Same as `this->fetch_add(1)`. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "State batt::AtomicCounterGauge< IntT >::increment",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::increment",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 288,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 285,
        "column": 11,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 285
      },
      "name": "increment",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1aeeb5a2029e988998c2c0341ca3c96be9",
      "static": false,
      "strong": false,
      "summary": "Same as this->fetch_add(1). ",
      "title": "increment",
      "type": "[State](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/)",
      "typePlain": "State",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-increment",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-fetch-sub",
      "argsString": "(value_type delta) noexcept",
      "brief": "Atomically decrements the variable by increasing the sub counter. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "State batt::AtomicCounterGauge< IntT >::fetch_sub",
      "deleted": false,
      "details": "`delta` must NOT be negative; use [AtomicCounterGauge::fetch_sub](/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-fetch-sub) in this case. ",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::fetch_sub",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 310,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 294,
        "column": 11,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 294
      },
      "name": "fetch_sub",
      "override": false,
      "params": [
        {
          "name": "delta",
          "type": "value_type",
          "typePlain": "value_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1ad8b328d2e1dd43d4600de0ff1cbf887a",
      "static": false,
      "strong": false,
      "summary": "Atomically decrements the variable by increasing the sub counter. ",
      "title": "fetch_sub",
      "type": "[State](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/)",
      "typePlain": "State",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-fetch-sub",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-decrement",
      "argsString": "() noexcept",
      "brief": "Same as `this->fetch_sub(1)`. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "State batt::AtomicCounterGauge< IntT >::decrement",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::decrement",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 317,
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 314,
        "column": 11,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 314
      },
      "name": "decrement",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1a45a559ab01296c4df30eb12266ed104a",
      "static": false,
      "strong": false,
      "summary": "Same as this->fetch_sub(1). ",
      "title": "decrement",
      "type": "[State](/_autogen/Classes/classbatt_1_1AtomicCounterGauge_1_1State/)",
      "typePlain": "State",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#function-decrement",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#using-self",
      "category": "types",
      "const": false,
      "definition": "using batt::AtomicCounterGauge< IntT >::Self =  AtomicCounterGauge",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::Self",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 29,
        "column": 5,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 29
      },
      "name": "Self",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1ae7942dcf99b486cdea00905abd8d927b",
      "static": false,
      "strong": false,
      "title": "Self",
      "type": "[AtomicCounterGauge](/_autogen/Classes/classbatt_1_1AtomicCounterGauge/)",
      "typePlain": "AtomicCounterGauge",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#using-self",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#using-value-type",
      "category": "types",
      "const": false,
      "definition": "using batt::AtomicCounterGauge< IntT >::value_type =  IntT",
      "explicit": false,
      "fullname": "batt::AtomicCounterGauge::value_type",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/atomic_counter_gauge.hpp",
        "bodyStart": 31,
        "column": 5,
        "file": "batteries/atomic_counter_gauge.hpp",
        "line": 31
      },
      "name": "value_type",
      "override": false,
      "refid": "classbatt_1_1AtomicCounterGauge_1ac8a6e180bac343367851d241c0d4a635",
      "static": false,
      "strong": false,
      "title": "value_type",
      "type": "IntT",
      "typePlain": "IntT",
      "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/#using-value-type",
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1AtomicCounterGauge",
  "static": false,
  "strong": false,
  "summary": "An atomic variable that maintains a gauge-like value, which can rise and fall over time, by means of two monotonic counters: one for increases, one for decreases. ",
  "templateParams": [
    {
      "name": "",
      "type": "typename IntT",
      "typePlain": "typename IntT"
    }
  ],
  "title": "batt::AtomicCounterGauge",
  "url": "/_autogen/Classes/classbatt_1_1AtomicCounterGauge/",
  "visibility": "public"
}