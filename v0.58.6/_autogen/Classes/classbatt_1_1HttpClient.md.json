{
  "abstract": false,
  "anchor": "",
  "brief": "An HTTP/1.1 client implementation. ",
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "batt::HttpClient",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "includes": "<batteries/http/http_client.hpp>",
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 166,
    "bodyFile": "batteries/http/http_client.hpp",
    "bodyStart": 45,
    "column": 1,
    "file": "batteries/http/http_client.hpp",
    "line": 44
  },
  "name": "batt::HttpClient",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "privateAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-io-",
      "brief": "Passed in at creation time; used to schedule all I/O and tasks associated with this client. ",
      "category": "attributes",
      "const": false,
      "definition": "boost::asio::io_context& batt::HttpClient::io_",
      "explicit": false,
      "fullname": "batt::HttpClient::io_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 141,
        "column": 29,
        "file": "batteries/http/http_client.hpp",
        "line": 141
      },
      "name": "io_",
      "override": false,
      "refid": "classbatt_1_1HttpClient_1a3527688db83616623a1f90a1dae9d8be",
      "static": false,
      "strong": false,
      "summary": "Passed in at creation time; used to schedule all I/O and tasks associated with this client. ",
      "title": "io_",
      "type": "boost::asio::io_context &",
      "typePlain": "boost::asio::io_context &",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#variable-io-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-ssl-init-fn-mutex-",
      "brief": "Protects access to `this->ssl_init_fn_`. ",
      "category": "attributes",
      "const": false,
      "definition": "std::mutex batt::HttpClient::ssl_init_fn_mutex_",
      "explicit": false,
      "fullname": "batt::HttpClient::ssl_init_fn_mutex_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 145,
        "column": 24,
        "file": "batteries/http/http_client.hpp",
        "line": 145
      },
      "name": "ssl_init_fn_mutex_",
      "override": false,
      "refid": "classbatt_1_1HttpClient_1a217ce128b04ee5786fbc3b4b8d43790e",
      "static": false,
      "strong": false,
      "summary": "Protects access to this->ssl_init_fn_. ",
      "title": "ssl_init_fn_mutex_",
      "type": "std::mutex",
      "typePlain": "std::mutex",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#variable-ssl-init-fn-mutex-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-ssl-init-fn-",
      "brief": "A customizable function to initialize SSL contexts for HTTPS connections. ",
      "category": "attributes",
      "const": false,
      "definition": "std::function<void(Optional<boost::asio::ssl::context>&, const HostAddress&)> batt::HttpClient::ssl_init_fn_",
      "explicit": false,
      "fullname": "batt::HttpClient::ssl_init_fn_",
      "hasDetails": false,
      "initializer": "=\n        [](Optional<boost::asio::ssl::context>& context, const HostAddress&) {\n            context.emplace(HttpClient::kDefaultSslMethod);\n        }",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 149,
        "column": 19,
        "file": "batteries/http/http_client.hpp",
        "line": 149
      },
      "name": "ssl_init_fn_",
      "override": false,
      "refid": "classbatt_1_1HttpClient_1a9721bf83c0c05f42a20673aab29ac689",
      "static": false,
      "strong": false,
      "summary": "A customizable function to initialize SSL contexts for HTTPS connections. ",
      "title": "ssl_init_fn_",
      "type": "std::function< void([Optional](/_autogen/Classes/classbatt_1_1Optional/)< boost::asio::ssl::context > &, const [HostAddress](/_autogen/Classes/structbatt_1_1HostAddress/) &)>",
      "typePlain": "std::function< void(Optional< boost::asio::ssl::context > &, const HostAddress &)>",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#variable-ssl-init-fn-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-default-max-connections-per-host-",
      "brief": "The default connection count limit for newly created [HttpClientHostContext]() objects. ",
      "category": "attributes",
      "const": false,
      "definition": "std::atomic<usize> batt::HttpClient::default_max_connections_per_host_",
      "explicit": false,
      "fullname": "batt::HttpClient::default_max_connections_per_host_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 156,
        "column": 17,
        "file": "batteries/http/http_client.hpp",
        "line": 156
      },
      "name": "default_max_connections_per_host_",
      "override": false,
      "refid": "classbatt_1_1HttpClient_1ad03b490bd196b1c9eefc4c48a00d9ba0",
      "static": false,
      "strong": false,
      "summary": "The default connection count limit for newly created HttpClientHostContext objects. ",
      "title": "default_max_connections_per_host_",
      "type": "std::atomic< usize >",
      "typePlain": "std::atomic< usize >",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#variable-default-max-connections-per-host-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-default-connection-timeout-ms-",
      "brief": "The default idle connection timeout, in milliseconds. ",
      "category": "attributes",
      "const": false,
      "definition": "std::atomic<usize> batt::HttpClient::default_connection_timeout_ms_",
      "explicit": false,
      "fullname": "batt::HttpClient::default_connection_timeout_ms_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 160,
        "column": 17,
        "file": "batteries/http/http_client.hpp",
        "line": 160
      },
      "name": "default_connection_timeout_ms_",
      "override": false,
      "refid": "classbatt_1_1HttpClient_1a6f20cc932e505c8678a79353bcd87243",
      "static": false,
      "strong": false,
      "summary": "The default idle connection timeout, in milliseconds. ",
      "title": "default_connection_timeout_ms_",
      "type": "std::atomic< usize >",
      "typePlain": "std::atomic< usize >",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#variable-default-connection-timeout-ms-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-host-contexts-",
      "brief": "The set of [HttpClientHostContext]() objects associated with this [HttpClient](/_autogen/Classes/classbatt_1_1HttpClient/). ",
      "category": "attributes",
      "const": false,
      "definition": "Mutex<std::unordered_map<HostAddress, SharedPtr<HttpClientHostContext>, boost::hash<HostAddress> > > batt::HttpClient::host_contexts_",
      "explicit": false,
      "fullname": "batt::HttpClient::host_contexts_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 165,
        "column": 9,
        "file": "batteries/http/http_client.hpp",
        "line": 165
      },
      "name": "host_contexts_",
      "override": false,
      "refid": "classbatt_1_1HttpClient_1ad052901872cfc8c9e020175b0b42a117",
      "static": false,
      "strong": false,
      "summary": "The set of HttpClientHostContext objects associated with this HttpClient. ",
      "title": "host_contexts_",
      "type": "[Mutex](/_autogen/Classes/classbatt_1_1Mutex/)< std::unordered_map< [HostAddress](/_autogen/Classes/structbatt_1_1HostAddress/), SharedPtr< [HttpClientHostContext](/_autogen/Classes/classbatt_1_1HttpClientHostContext/) >, boost::hash< [HostAddress](/_autogen/Classes/structbatt_1_1HostAddress/) > > >",
      "typePlain": "Mutex< std::unordered_map< HostAddress, SharedPtr< HttpClientHostContext >, boost::hash< HostAddress > > >",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#variable-host-contexts-",
      "visibility": "private"
    }
  ],
  "privateFunctions": [
    {
      "abstract": false,
      "anchor": "#function-find-host-context",
      "argsString": "(const HostAddress &host_address, CreateIfNotFound create=CreateIfNotFound{true})",
      "brief": "Finds or optionally creates the [HttpClientHostContext]() for this [HttpClient](/_autogen/Classes/classbatt_1_1HttpClient/). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "SharedPtr< HttpClientHostContext > batt::HttpClient::find_host_context",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::HttpClient::find_host_context",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 120,
        "bodyFile": "batteries/http/http_client_impl.hpp",
        "bodyStart": 105,
        "column": 15,
        "file": "batteries/http/http_client.hpp",
        "line": 134
      },
      "name": "find_host_context",
      "override": false,
      "params": [
        {
          "name": "host_address",
          "type": "const [HostAddress](/_autogen/Classes/structbatt_1_1HostAddress/) &",
          "typePlain": "const HostAddress &"
        },
        {
          "defval": "[CreateIfNotFound](/_autogen/Classes/classbatt_1_1StrongType/){true}",
          "defvalPlain": "CreateIfNotFound{true}",
          "name": "create",
          "type": "[CreateIfNotFound](/_autogen/Classes/classbatt_1_1StrongType/)",
          "typePlain": "CreateIfNotFound"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1a74f4697e552b8a08e5b835da10bf9724",
      "static": false,
      "strong": false,
      "summary": "Finds or optionally creates the HttpClientHostContext for this HttpClient. ",
      "title": "find_host_context",
      "type": "SharedPtr< [HttpClientHostContext](/_autogen/Classes/classbatt_1_1HttpClientHostContext/) >",
      "typePlain": "SharedPtr< HttpClientHostContext >",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-find-host-context",
      "virtual": false,
      "visibility": "private"
    }
  ],
  "publicAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-kdefaultsslmethod",
      "brief": "The default security method for a secure (https) connection. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr boost::asio::ssl::context::method batt::HttpClient::kDefaultSslMethod",
      "explicit": false,
      "fullname": "batt::HttpClient::kDefaultSslMethod",
      "hasDetails": false,
      "initializer": "= boost::asio::ssl::context::tlsv12",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 55,
        "column": 56,
        "file": "batteries/http/http_client.hpp",
        "line": 55
      },
      "name": "kDefaultSslMethod",
      "override": false,
      "refid": "classbatt_1_1HttpClient_1af05f0be319cd96ee0d72fd2092e98abd",
      "static": true,
      "strong": false,
      "summary": "The default security method for a secure (https) connection. ",
      "title": "kDefaultSslMethod",
      "type": "constexpr boost::asio::ssl::context::method",
      "typePlain": "constexpr boost::asio::ssl::context::method",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#variable-kdefaultsslmethod",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-strong-typedef-default-value",
      "argsString": "(CreateIfNotFound_TAG *)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "constexpr bool batt::HttpClient::strong_typedef_default_value",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::HttpClient::strong_typedef_default_value",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 49,
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 49,
        "column": 39,
        "file": "batteries/http/http_client.hpp",
        "line": 49
      },
      "name": "strong_typedef_default_value",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "CreateIfNotFound_TAG *",
          "typePlain": "CreateIfNotFound_TAG *"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1a34a7eb504701e11d1f92f41120cb8c5a",
      "static": false,
      "strong": false,
      "title": "strong_typedef_default_value",
      "type": "constexpr bool",
      "typePlain": "constexpr bool",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-strong-typedef-default-value",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-httpclient",
      "argsString": "(boost::asio::io_context &io) noexcept",
      "brief": "Constructs an [HttpClient](/_autogen/Classes/classbatt_1_1HttpClient/) that uses the specified io_context to schedule I/O and completions. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::HttpClient::HttpClient",
      "deleted": false,
      "explicit": true,
      "fullname": "batt::HttpClient::HttpClient",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 22,
        "bodyFile": "batteries/http/http_client_impl.hpp",
        "bodyStart": 16,
        "column": 14,
        "file": "batteries/http/http_client.hpp",
        "line": 61
      },
      "name": "HttpClient",
      "override": false,
      "params": [
        {
          "name": "io",
          "type": "boost::asio::io_context &",
          "typePlain": "boost::asio::io_context &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1ae9355b1d3f611404ab303bd99fef2329",
      "static": false,
      "strong": false,
      "summary": "Constructs an HttpClient that uses the specified io_context to schedule I/O and completions. ",
      "title": "HttpClient",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-httpclient",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-get-io-context",
      "argsString": "() const noexcept",
      "brief": "Returns the io_context passed in at construction time. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "boost::asio::io_context& batt::HttpClient::get_io_context",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::HttpClient::get_io_context",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 68,
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 65,
        "column": 29,
        "file": "batteries/http/http_client.hpp",
        "line": 65
      },
      "name": "get_io_context",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1ac714e4d504fd64f35c00cddbdf9fc3eb",
      "static": false,
      "strong": false,
      "summary": "Returns the io_context passed in at construction time. ",
      "title": "get_io_context",
      "type": "boost::asio::io_context &",
      "typePlain": "boost::asio::io_context &",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-get-io-context",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-get-ssl-init-fn",
      "argsString": "() const noexcept",
      "brief": "Returns a copy of the current SSL context initialization function. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "std::function<void(Optional<boost::asio::ssl::context>&, const HostAddress&)> batt::HttpClient::get_ssl_init_fn",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::HttpClient::get_ssl_init_fn",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 77,
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 72,
        "column": 19,
        "file": "batteries/http/http_client.hpp",
        "line": 72
      },
      "name": "get_ssl_init_fn",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1a623be89987fb4ad558db341c6314e29e",
      "static": false,
      "strong": false,
      "summary": "Returns a copy of the current SSL context initialization function. ",
      "title": "get_ssl_init_fn",
      "type": "std::function< void([Optional](/_autogen/Classes/classbatt_1_1Optional/)< boost::asio::ssl::context > &, const [HostAddress](/_autogen/Classes/structbatt_1_1HostAddress/) &)>",
      "typePlain": "std::function< void(Optional< boost::asio::ssl::context > &, const HostAddress &)>",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-get-ssl-init-fn",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-set-ssl-init-fn",
      "argsString": "(std::function< void(Optional< boost::asio::ssl::context > &, const HostAddress &)> &&fn) noexcept",
      "brief": "Sets a custom initialization function for SSL contexts. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::HttpClient::set_ssl_init_fn",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::HttpClient::set_ssl_init_fn",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 86,
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 81,
        "column": 10,
        "file": "batteries/http/http_client.hpp",
        "line": 81
      },
      "name": "set_ssl_init_fn",
      "override": false,
      "params": [
        {
          "name": "fn",
          "type": "std::function< void([Optional](/_autogen/Classes/classbatt_1_1Optional/)< boost::asio::ssl::context > &, const [HostAddress](/_autogen/Classes/structbatt_1_1HostAddress/) &)> &&",
          "typePlain": "std::function< void(Optional< boost::asio::ssl::context > &, const HostAddress &)> &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1a598d10dace6c3d5922837040ddbd34fb",
      "static": false,
      "strong": false,
      "summary": "Sets a custom initialization function for SSL contexts. ",
      "title": "set_ssl_init_fn",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-set-ssl-init-fn",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-submit-request",
      "argsString": "(const HostAddress &host_address, Pin< HttpRequest > &&request, Pin< HttpResponse > &&response)",
      "brief": "Submits an [HttpRequest]() for asynchronous processing. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Status batt::HttpClient::submit_request",
      "deleted": false,
      "details": "This function returns as soon as the request/response pair has been queued for processing by the [HttpClientHostContext](/_autogen/Classes/classbatt_1_1HttpClientHostContext/) associated with the passed host_address. ",
      "explicit": false,
      "fullname": "batt::HttpClient::submit_request",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 34,
        "bodyFile": "batteries/http/http_client_impl.hpp",
        "bodyStart": 26,
        "column": 12,
        "file": "batteries/http/http_client.hpp",
        "line": 93
      },
      "name": "submit_request",
      "override": false,
      "params": [
        {
          "name": "host_address",
          "type": "const [HostAddress](/_autogen/Classes/structbatt_1_1HostAddress/) &",
          "typePlain": "const HostAddress &"
        },
        {
          "name": "request",
          "type": "[Pin](/_autogen/Classes/classbatt_1_1Pin/)< [HttpRequest](/_autogen/Classes/classbatt_1_1HttpRequest/) > &&",
          "typePlain": "Pin< HttpRequest > &&"
        },
        {
          "name": "response",
          "type": "[Pin](/_autogen/Classes/classbatt_1_1Pin/)< [HttpResponse](/_autogen/Classes/classbatt_1_1HttpResponse/) > &&",
          "typePlain": "Pin< HttpResponse > &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1a4f1cd0f0e1e32864f6594aa7f872b904",
      "static": false,
      "strong": false,
      "summary": "Submits an HttpRequest for asynchronous processing. ",
      "title": "submit_request",
      "type": "[Status](/_autogen/Classes/classbatt_1_1Status/)",
      "typePlain": "Status",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-submit-request",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-get-default-max-connections-per-host",
      "argsString": "() const noexcept",
      "brief": "Returns the default maximum TCP connection count per remote endpoint. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "usize batt::HttpClient::get_default_max_connections_per_host",
      "deleted": false,
      "details": "This can be changed via set_default_max_connections_per_host (for all hosts) or set_max_connections_per_host (for a specific host). ",
      "explicit": false,
      "fullname": "batt::HttpClient::get_default_max_connections_per_host",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 41,
        "bodyFile": "batteries/http/http_client_impl.hpp",
        "bodyStart": 38,
        "column": 11,
        "file": "batteries/http/http_client.hpp",
        "line": 100
      },
      "name": "get_default_max_connections_per_host",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1a2728f791594d2fed9ed27de0bc07f557",
      "static": false,
      "strong": false,
      "summary": "Returns the default maximum TCP connection count per remote endpoint. ",
      "title": "get_default_max_connections_per_host",
      "type": "usize",
      "typePlain": "usize",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-get-default-max-connections-per-host",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-set-default-max-connections-per-host",
      "argsString": "(usize max_connections) noexcept",
      "brief": "Sets the new default maximum connection count per remote host/port. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::HttpClient::set_default_max_connections_per_host",
      "deleted": false,
      "details": "This setting only affects [HttpClientHostContext](/_autogen/Classes/classbatt_1_1HttpClientHostContext/) objects created after the default is changed. To change this setting for an existing per-host pool of connections, use set_max_connections_per_host. ",
      "explicit": false,
      "fullname": "batt::HttpClient::set_default_max_connections_per_host",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 48,
        "bodyFile": "batteries/http/http_client_impl.hpp",
        "bodyStart": 45,
        "column": 10,
        "file": "batteries/http/http_client.hpp",
        "line": 106
      },
      "name": "set_default_max_connections_per_host",
      "override": false,
      "params": [
        {
          "name": "max_connections",
          "type": "usize",
          "typePlain": "usize"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1a584fa3c7340926c8895cd8e50eefbcff",
      "static": false,
      "strong": false,
      "summary": "Sets the new default maximum connection count per remote host/port. ",
      "title": "set_default_max_connections_per_host",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-set-default-max-connections-per-host",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-set-max-connections-per-host",
      "argsString": "(const HostAddress &host_address, usize max_connections) noexcept",
      "brief": "Sets the new maximum connection count for a specific host/port endpoint. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::HttpClient::set_max_connections_per_host",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::HttpClient::set_max_connections_per_host",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 57,
        "bodyFile": "batteries/http/http_client_impl.hpp",
        "bodyStart": 52,
        "column": 10,
        "file": "batteries/http/http_client.hpp",
        "line": 110
      },
      "name": "set_max_connections_per_host",
      "override": false,
      "params": [
        {
          "name": "host_address",
          "type": "const [HostAddress](/_autogen/Classes/structbatt_1_1HostAddress/) &",
          "typePlain": "const HostAddress &"
        },
        {
          "name": "max_connections",
          "type": "usize",
          "typePlain": "usize"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1a1cdda48d3d33acf783ab29df01b0f75a",
      "static": false,
      "strong": false,
      "summary": "Sets the new maximum connection count for a specific host/port endpoint. ",
      "title": "set_max_connections_per_host",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-set-max-connections-per-host",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-get-default-connection-timeout-ms",
      "argsString": "() const noexcept",
      "brief": "Returns the default connection idle timeout, in milliseconds. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "i32 batt::HttpClient::get_default_connection_timeout_ms",
      "deleted": false,
      "details": "Pooled connections that have not seen activity for more than this amount of time will be automatically closed. ",
      "explicit": false,
      "fullname": "batt::HttpClient::get_default_connection_timeout_ms",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 64,
        "bodyFile": "batteries/http/http_client_impl.hpp",
        "bodyStart": 61,
        "column": 9,
        "file": "batteries/http/http_client.hpp",
        "line": 115
      },
      "name": "get_default_connection_timeout_ms",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1abcc8639e6652b741a6fdba9564b6ce65",
      "static": false,
      "strong": false,
      "summary": "Returns the default connection idle timeout, in milliseconds. ",
      "title": "get_default_connection_timeout_ms",
      "type": "i32",
      "typePlain": "i32",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-get-default-connection-timeout-ms",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-set-default-connection-timeout-ms",
      "argsString": "(i32 timeout_ms) noexcept",
      "brief": "Sets the default connection idle timeout, in milliseconds. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::HttpClient::set_default_connection_timeout_ms",
      "deleted": false,
      "details": "Pooled connections that have not seen activity for more than this amount of time will be automatically closed. ",
      "explicit": false,
      "fullname": "batt::HttpClient::set_default_connection_timeout_ms",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 71,
        "bodyFile": "batteries/http/http_client_impl.hpp",
        "bodyStart": 68,
        "column": 10,
        "file": "batteries/http/http_client.hpp",
        "line": 120
      },
      "name": "set_default_connection_timeout_ms",
      "override": false,
      "params": [
        {
          "name": "timeout_ms",
          "type": "i32",
          "typePlain": "i32"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1af1e25282588ea6fc59feb7a2253590a0",
      "static": false,
      "strong": false,
      "summary": "Sets the default connection idle timeout, in milliseconds. ",
      "title": "set_default_connection_timeout_ms",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-set-default-connection-timeout-ms",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-count-active-connections",
      "argsString": "() const noexcept",
      "brief": "Returns the total number of active connections for this client. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "usize batt::HttpClient::count_active_connections",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::HttpClient::count_active_connections",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 101,
        "bodyFile": "batteries/http/http_client_impl.hpp",
        "bodyStart": 89,
        "column": 11,
        "file": "batteries/http/http_client.hpp",
        "line": 124
      },
      "name": "count_active_connections",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1a5208ca0fb99db78b3830c6108f26632b",
      "static": false,
      "strong": false,
      "summary": "Returns the total number of active connections for this client. ",
      "title": "count_active_connections",
      "type": "usize",
      "typePlain": "usize",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-count-active-connections",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-count-active-connections-for-host",
      "argsString": "(const HostAddress &host_address) noexcept",
      "brief": "Returns the total number of active connections in this client for the given host. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "usize batt::HttpClient::count_active_connections_for_host",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::HttpClient::count_active_connections_for_host",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 85,
        "bodyFile": "batteries/http/http_client_impl.hpp",
        "bodyStart": 75,
        "column": 11,
        "file": "batteries/http/http_client.hpp",
        "line": 128
      },
      "name": "count_active_connections_for_host",
      "override": false,
      "params": [
        {
          "name": "host_address",
          "type": "const [HostAddress](/_autogen/Classes/structbatt_1_1HostAddress/) &",
          "typePlain": "const HostAddress &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1HttpClient_1a19db2fda4faa43ac0a4131aba00734aa",
      "static": false,
      "strong": false,
      "summary": "Returns the total number of active connections in this client for the given host. ",
      "title": "count_active_connections_for_host",
      "type": "usize",
      "typePlain": "usize",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#function-count-active-connections-for-host",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#using-createifnotfound",
      "category": "types",
      "const": false,
      "definition": "using batt::HttpClient::CreateIfNotFound =  ::batt::StrongType< bool , CreateIfNotFound_TAG >",
      "explicit": false,
      "fullname": "batt::HttpClient::CreateIfNotFound",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/http/http_client.hpp",
        "bodyStart": 49,
        "column": 99,
        "file": "batteries/http/http_client.hpp",
        "line": 49
      },
      "name": "CreateIfNotFound",
      "override": false,
      "refid": "classbatt_1_1HttpClient_1a867804e55e31ed7a5941d451935d09a9",
      "static": false,
      "strong": false,
      "title": "CreateIfNotFound",
      "type": "::[batt::StrongType](/_autogen/Classes/classbatt_1_1StrongType/)< bool, CreateIfNotFound_TAG >",
      "typePlain": "::batt::StrongType< bool, CreateIfNotFound_TAG >",
      "url": "/_autogen/Classes/classbatt_1_1HttpClient/#using-createifnotfound",
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1HttpClient",
  "static": false,
  "strong": false,
  "summary": "An HTTP/1.1 client implementation. ",
  "title": "batt::HttpClient",
  "url": "/_autogen/Classes/classbatt_1_1HttpClient/",
  "visibility": "public"
}