{
  "abstract": false,
  "anchor": "",
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "batt::LatencyMetric",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 584,
    "bodyFile": "batteries/metrics/metric_collectors.hpp",
    "bodyStart": 496,
    "column": 1,
    "file": "batteries/metrics/metric_collectors.hpp",
    "line": 495
  },
  "name": "batt::LatencyMetric",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "publicAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-total-nanos",
      "category": "attributes",
      "const": false,
      "definition": "CountMetric<u64> batt::LatencyMetric::total_nanos",
      "explicit": false,
      "fullname": "batt::LatencyMetric::total_nanos",
      "hasDetails": false,
      "initializer": "{0}",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 582,
        "column": 17,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 582
      },
      "name": "total_nanos",
      "override": false,
      "refid": "classbatt_1_1LatencyMetric_1a8932181874b1620e5de32e9cc553afca",
      "static": false,
      "strong": false,
      "title": "total_nanos",
      "type": "[CountMetric](/_autogen/Classes/classbatt_1_1CountMetric/)< u64 >",
      "typePlain": "CountMetric< u64 >",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#variable-total-nanos",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-count",
      "category": "attributes",
      "const": false,
      "definition": "CountMetric<u64> batt::LatencyMetric::count",
      "explicit": false,
      "fullname": "batt::LatencyMetric::count",
      "hasDetails": false,
      "initializer": "{0}",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 583,
        "column": 17,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 583
      },
      "name": "count",
      "override": false,
      "refid": "classbatt_1_1LatencyMetric_1a2a2b9ca70c282348d7a910ad0e2a8b5b",
      "static": false,
      "strong": false,
      "title": "count",
      "type": "[CountMetric](/_autogen/Classes/classbatt_1_1CountMetric/)< u64 >",
      "typePlain": "CountMetric< u64 >",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#variable-count",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-update",
      "argsString": "(std::chrono::steady_clock::time_point start, u64 count_delta=1)",
      "brief": "Adds a set of samples to the metric. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::LatencyMetric::update",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyMetric::update",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 503,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 500,
        "column": 10,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 500
      },
      "name": "update",
      "override": false,
      "params": [
        {
          "name": "start",
          "type": "std::chrono::steady_clock::time_point",
          "typePlain": "std::chrono::steady_clock::time_point"
        },
        {
          "defval": "1",
          "defvalPlain": "1",
          "name": "count_delta",
          "type": "u64",
          "typePlain": "u64"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyMetric_1adcb169c200c2c1df7d82cf1ade6f9435",
      "static": false,
      "strong": false,
      "summary": "Adds a set of samples to the metric. ",
      "title": "update",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#function-update",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-update",
      "argsString": "(std::chrono::steady_clock::duration elapsed_duration, u64 count_delta=1)",
      "brief": "Adds a set of samples to the metric. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::LatencyMetric::update",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyMetric::update",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 514,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 507,
        "column": 10,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 507
      },
      "name": "update",
      "override": false,
      "params": [
        {
          "name": "elapsed_duration",
          "type": "std::chrono::steady_clock::duration",
          "typePlain": "std::chrono::steady_clock::duration"
        },
        {
          "defval": "1",
          "defvalPlain": "1",
          "name": "count_delta",
          "type": "u64",
          "typePlain": "u64"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyMetric_1a339899d07a2ca409c6fd09971bbebed6",
      "static": false,
      "strong": false,
      "summary": "Adds a set of samples to the metric. ",
      "title": "update",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#function-update",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-nonzero-count",
      "argsString": "() const noexcept",
      "brief": "Returns the current count or a very small non-zero number (if count is zero). ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "double batt::LatencyMetric::nonzero_count",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyMetric::nonzero_count",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 525,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 518,
        "column": 12,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 518
      },
      "name": "nonzero_count",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyMetric_1ac9b5ab15792fd585a12f96b9216a6af2",
      "static": false,
      "strong": false,
      "summary": "Returns the current count or a very small non-zero number (if count is zero). ",
      "title": "nonzero_count",
      "type": "double",
      "typePlain": "double",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#function-nonzero-count",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-nonzero-total-nanos",
      "argsString": "() const noexcept",
      "brief": "Returns the current total elapsed nanoseconds or a very small non-zero number (if elapsed time is zero). ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "double batt::LatencyMetric::nonzero_total_nanos",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyMetric::nonzero_total_nanos",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 537,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 530,
        "column": 12,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 530
      },
      "name": "nonzero_total_nanos",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyMetric_1a480ff28f1b26308b04c080b799bde687",
      "static": false,
      "strong": false,
      "summary": "Returns the current total elapsed nanoseconds or a very small non-zero number (if elapsed time is zero). ",
      "title": "nonzero_total_nanos",
      "type": "double",
      "typePlain": "double",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#function-nonzero-total-nanos",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-rate-per-second",
      "argsString": "() const noexcept",
      "brief": "Computes and returns the rate per second of this metric. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "double batt::LatencyMetric::rate_per_second",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyMetric::rate_per_second",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 544,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 541,
        "column": 12,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 541
      },
      "name": "rate_per_second",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyMetric_1a59f065f78d472db6057b363ac176cd9e",
      "static": false,
      "strong": false,
      "summary": "Computes and returns the rate per second of this metric. ",
      "title": "rate_per_second",
      "type": "double",
      "typePlain": "double",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#function-rate-per-second",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-total-usec",
      "argsString": "() const noexcept",
      "brief": "Returns the total elapsed microseconds for all samples. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "double batt::LatencyMetric::total_usec",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyMetric::total_usec",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 551,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 548,
        "column": 12,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 548
      },
      "name": "total_usec",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyMetric_1a260bf446198c8f9cef8aaef6b84f29cc",
      "static": false,
      "strong": false,
      "summary": "Returns the total elapsed microseconds for all samples. ",
      "title": "total_usec",
      "type": "double",
      "typePlain": "double",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#function-total-usec",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-total-msec",
      "argsString": "() const noexcept",
      "brief": "Returns the total elapsed seconds for all samples. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "double batt::LatencyMetric::total_msec",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyMetric::total_msec",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 558,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 555,
        "column": 12,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 555
      },
      "name": "total_msec",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyMetric_1af2b4a65903851735c1e9b28c08f9e581",
      "static": false,
      "strong": false,
      "summary": "Returns the total elapsed seconds for all samples. ",
      "title": "total_msec",
      "type": "double",
      "typePlain": "double",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#function-total-msec",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-total-seconds",
      "argsString": "() const noexcept",
      "brief": "Returns the total elapsed seconds for all samples. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "double batt::LatencyMetric::total_seconds",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyMetric::total_seconds",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 565,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 562,
        "column": 12,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 562
      },
      "name": "total_seconds",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyMetric_1aec68cd1bfef4662d892205d44436efd5",
      "static": false,
      "strong": false,
      "summary": "Returns the total elapsed seconds for all samples. ",
      "title": "total_seconds",
      "type": "double",
      "typePlain": "double",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#function-total-seconds",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-average-usec",
      "argsString": "() const noexcept",
      "brief": "Returns the average latency in microseconds. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "double batt::LatencyMetric::average_usec",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyMetric::average_usec",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 572,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 569,
        "column": 12,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 569
      },
      "name": "average_usec",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyMetric_1a3212b39ba97033a10ff48a8a7a8b20e2",
      "static": false,
      "strong": false,
      "summary": "Returns the average latency in microseconds. ",
      "title": "average_usec",
      "type": "double",
      "typePlain": "double",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#function-average-usec",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-reset",
      "argsString": "() noexcept",
      "brief": "Resets the metric to its initial state. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::LatencyMetric::reset",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyMetric::reset",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 580,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 576,
        "column": 10,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 576
      },
      "name": "reset",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyMetric_1a1ad07d50078b35727aed92410a04ba4c",
      "static": false,
      "strong": false,
      "summary": "Resets the metric to its initial state. ",
      "title": "reset",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/#function-reset",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1LatencyMetric",
  "static": false,
  "strong": false,
  "title": "batt::LatencyMetric",
  "url": "/_autogen/Classes/classbatt_1_1LatencyMetric/",
  "visibility": "public"
}