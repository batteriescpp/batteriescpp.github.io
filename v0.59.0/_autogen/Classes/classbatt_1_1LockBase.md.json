{
  "abstract": false,
  "anchor": "",
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "batt::LockBase",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 303,
    "bodyFile": "batteries/async/mutex.hpp",
    "bodyStart": 40,
    "column": 1,
    "file": "batteries/async/mutex.hpp",
    "line": 39
  },
  "name": "batt::LockBase",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "privateAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-mutex-",
      "category": "attributes",
      "const": false,
      "definition": "const MutexBase* batt::LockBase::mutex_",
      "explicit": false,
      "fullname": "batt::LockBase::mutex_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 299,
        "column": 21,
        "file": "batteries/async/mutex.hpp",
        "line": 299
      },
      "name": "mutex_",
      "override": false,
      "refid": "classbatt_1_1LockBase_1a1ee24e6f646556389f7048cb1d7256ae",
      "static": false,
      "strong": false,
      "title": "mutex_",
      "type": "const [MutexBase](/_autogen/Classes/classbatt_1_1MutexBase/) *",
      "typePlain": "const MutexBase *",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#variable-mutex-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-state-",
      "category": "attributes",
      "const": false,
      "definition": "State batt::LockBase::state_",
      "explicit": false,
      "fullname": "batt::LockBase::state_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 300,
        "column": 11,
        "file": "batteries/async/mutex.hpp",
        "line": 300
      },
      "name": "state_",
      "override": false,
      "refid": "classbatt_1_1LockBase_1a4a75562631613a9cadec24add9a4865d",
      "static": false,
      "strong": false,
      "title": "state_",
      "type": "[State](/_autogen/Classes/classbatt_1_1LockBase/#enum-state)",
      "typePlain": "State",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#variable-state-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-next-",
      "category": "attributes",
      "const": false,
      "definition": "CpuCacheLineIsolated<Watch<LockBase*> > batt::LockBase::next_",
      "explicit": false,
      "fullname": "batt::LockBase::next_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 301,
        "column": 26,
        "file": "batteries/async/mutex.hpp",
        "line": 301
      },
      "name": "next_",
      "override": false,
      "refid": "classbatt_1_1LockBase_1ae95e3060ea6e1f6863328fda773e50c7",
      "static": false,
      "strong": false,
      "title": "next_",
      "type": "[CpuCacheLineIsolated](/_autogen/Classes/classbatt_1_1CpuCacheLineIsolated/)< [Watch](/_autogen/Classes/classbatt_1_1Watch/)< [LockBase](/_autogen/Classes/classbatt_1_1LockBase/) * > >",
      "typePlain": "CpuCacheLineIsolated< Watch< LockBase * > >",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#variable-next-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-waiting-to-acquire-",
      "category": "attributes",
      "const": false,
      "definition": "CpuCacheLineIsolated<Watch<bool> > batt::LockBase::waiting_to_acquire_",
      "explicit": false,
      "fullname": "batt::LockBase::waiting_to_acquire_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 302,
        "column": 26,
        "file": "batteries/async/mutex.hpp",
        "line": 302
      },
      "name": "waiting_to_acquire_",
      "override": false,
      "refid": "classbatt_1_1LockBase_1a94133fede67547ea0d9686fe6cfd272e",
      "static": false,
      "strong": false,
      "title": "waiting_to_acquire_",
      "type": "[CpuCacheLineIsolated](/_autogen/Classes/classbatt_1_1CpuCacheLineIsolated/)< [Watch](/_autogen/Classes/classbatt_1_1Watch/)< bool > >",
      "typePlain": "CpuCacheLineIsolated< Watch< bool > >",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#variable-waiting-to-acquire-",
      "visibility": "private"
    }
  ],
  "privateFunctions": [
    {
      "abstract": false,
      "anchor": "#function-acquire-impl",
      "argsString": "() noexcept",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::LockBase::acquire_impl",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::acquire_impl",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 179,
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 152,
        "column": 10,
        "file": "batteries/async/mutex.hpp",
        "line": 152
      },
      "name": "acquire_impl",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1a5f6c3d1847604fa5151564b990a509c2",
      "static": false,
      "strong": false,
      "title": "acquire_impl",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-acquire-impl",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-move-impl",
      "argsString": "(LockBase &&src) noexcept",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::LockBase::move_impl",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::move_impl",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 256,
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 181,
        "column": 10,
        "file": "batteries/async/mutex.hpp",
        "line": 181
      },
      "name": "move_impl",
      "override": false,
      "params": [
        {
          "name": "src",
          "type": "[LockBase](/_autogen/Classes/classbatt_1_1LockBase/) &&",
          "typePlain": "LockBase &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1a68076e206df2e22acdea0118da4d4e69",
      "static": false,
      "strong": false,
      "title": "move_impl",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-move-impl",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-release-impl",
      "argsString": "() noexcept",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::LockBase::release_impl",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::release_impl",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 295,
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 258,
        "column": 10,
        "file": "batteries/async/mutex.hpp",
        "line": 258
      },
      "name": "release_impl",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1ad6d627c53c895656233e2b6d2debc33c",
      "static": false,
      "strong": false,
      "title": "release_impl",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-release-impl",
      "virtual": false,
      "visibility": "private"
    }
  ],
  "publicAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-kmaxlockdepth",
      "brief": "The maximum number of locks a thread can hold at a time, if using the legacy [Mutex<T>::lock()]() API. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr usize batt::LockBase::kMaxLockDepth",
      "explicit": false,
      "fullname": "batt::LockBase::kMaxLockDepth",
      "hasDetails": false,
      "initializer": "= 8",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 45,
        "column": 28,
        "file": "batteries/async/mutex.hpp",
        "line": 45
      },
      "name": "kMaxLockDepth",
      "override": false,
      "refid": "classbatt_1_1LockBase_1abf34416a740f217852e23d64dbf36bc7",
      "static": true,
      "strong": false,
      "summary": "The maximum number of locks a thread can hold at a time, if using the legacy Mutex<T>::lock() API. ",
      "title": "kMaxLockDepth",
      "type": "constexpr usize",
      "typePlain": "constexpr usize",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#variable-kmaxlockdepth",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-per-thread",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static PerThreadState& batt::LockBase::per_thread",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::per_thread",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 27,
        "file": "batteries/async/mutex.hpp",
        "line": 51
      },
      "name": "per_thread",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1ac534c1b4f5baee10715fb17e2c042b8e",
      "static": true,
      "strong": false,
      "title": "per_thread",
      "type": "PerThreadState &",
      "typePlain": "PerThreadState &",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-per-thread",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-acquire",
      "argsString": "(const MutexBase &mutex)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "BATT_INLINE_IMPL LockBase * batt::LockBase::acquire",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::acquire",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 15,
        "bodyFile": "batteries/async/mutex_impl.hpp",
        "bodyStart": 12,
        "column": 21,
        "file": "batteries/async/mutex.hpp",
        "line": 53
      },
      "name": "acquire",
      "override": false,
      "params": [
        {
          "name": "mutex",
          "type": "const [MutexBase](/_autogen/Classes/classbatt_1_1MutexBase/) &",
          "typePlain": "const MutexBase &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1ada04ebe870045e52b853e3cb7ea7f51a",
      "static": true,
      "strong": false,
      "title": "acquire",
      "type": "[LockBase](/_autogen/Classes/classbatt_1_1LockBase/) *",
      "typePlain": "LockBase *",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-acquire",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-release",
      "argsString": "(LockBase *lock)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "BATT_INLINE_IMPL void batt::LockBase::release",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::release",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 22,
        "bodyFile": "batteries/async/mutex_impl.hpp",
        "bodyStart": 19,
        "column": 17,
        "file": "batteries/async/mutex.hpp",
        "line": 55
      },
      "name": "release",
      "override": false,
      "params": [
        {
          "name": "lock",
          "type": "[LockBase](/_autogen/Classes/classbatt_1_1LockBase/) *",
          "typePlain": "LockBase *"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1aacb58fa5a19dbf98375688364d9836e9",
      "static": true,
      "strong": false,
      "title": "release",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-release",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-lockbase",
      "argsString": "() noexcept",
      "brief": "Constructs a lock object in an unlocked state. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::LockBase::LockBase",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::LockBase",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 88,
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 82,
        "column": 5,
        "file": "batteries/async/mutex.hpp",
        "line": 82
      },
      "name": "LockBase",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1aaf36aca71e309c5c470e046612c2383b",
      "static": false,
      "strong": false,
      "summary": "Constructs a lock object in an unlocked state. ",
      "title": "LockBase",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-lockbase",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-lockbase",
      "argsString": "(const MutexBase &mutex) noexcept",
      "brief": "Constructs a lock object, returning from the constructor only after having acquired the mutex. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::LockBase::LockBase",
      "deleted": false,
      "explicit": true,
      "fullname": "batt::LockBase::LockBase",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 103,
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 92,
        "column": 14,
        "file": "batteries/async/mutex.hpp",
        "line": 92
      },
      "name": "LockBase",
      "override": false,
      "params": [
        {
          "name": "mutex",
          "type": "const [MutexBase](/_autogen/Classes/classbatt_1_1MutexBase/) &",
          "typePlain": "const MutexBase &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1aaac7df11eb4720a5b3ec2b45f262cdb9",
      "static": false,
      "strong": false,
      "summary": "Constructs a lock object, returning from the constructor only after having acquired the mutex. ",
      "title": "LockBase",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-lockbase",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-lockbase",
      "argsString": "(LockBase &&src) noexcept",
      "brief": "Moves the passed lock into a newly constructed lock object, retaining its locked state. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::LockBase::LockBase",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::LockBase",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 114,
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 107,
        "column": 5,
        "file": "batteries/async/mutex.hpp",
        "line": 107
      },
      "name": "LockBase",
      "override": false,
      "params": [
        {
          "name": "src",
          "type": "[LockBase](/_autogen/Classes/classbatt_1_1LockBase/) &&",
          "typePlain": "LockBase &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1a1161bd64de296ff635acf70469ecb757",
      "static": false,
      "strong": false,
      "summary": "Moves the passed lock into a newly constructed lock object, retaining its locked state. ",
      "title": "LockBase",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-lockbase",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-lockbase",
      "argsString": "(const LockBase &)=delete",
      "brief": "Locks may not be copy-constructed. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::LockBase::LockBase",
      "deleted": true,
      "explicit": false,
      "fullname": "batt::LockBase::LockBase",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 5,
        "file": "batteries/async/mutex.hpp",
        "line": 118
      },
      "name": "LockBase",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "const [LockBase](/_autogen/Classes/classbatt_1_1LockBase/) &",
          "typePlain": "const LockBase &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1af01e8d708ac95fa64bbdf259095ff134",
      "static": false,
      "strong": false,
      "summary": "Locks may not be copy-constructed. ",
      "title": "LockBase",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-lockbase",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator=",
      "argsString": "(const LockBase &)=delete",
      "brief": "Locks may not be copy-assigned. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "LockBase& batt::LockBase::operator=",
      "deleted": true,
      "explicit": false,
      "fullname": "batt::LockBase::operator=",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 14,
        "file": "batteries/async/mutex.hpp",
        "line": 122
      },
      "name": "operator=",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "const [LockBase](/_autogen/Classes/classbatt_1_1LockBase/) &",
          "typePlain": "const LockBase &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1a8d9479756fb60ace34a67d46bf17f1e4",
      "static": false,
      "strong": false,
      "summary": "Locks may not be copy-assigned. ",
      "title": "operator=",
      "type": "[LockBase](/_autogen/Classes/classbatt_1_1LockBase/) &",
      "typePlain": "LockBase &",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-operator=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-~lockbase",
      "argsString": "() noexcept",
      "brief": "Destroys this lock object, releasing the mutex if it is currently held by this. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::LockBase::~LockBase",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::~LockBase",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 129,
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 126,
        "column": 5,
        "file": "batteries/async/mutex.hpp",
        "line": 126
      },
      "name": "~LockBase",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1a3f9c07baa882575cf0e8d327dc3ea91c",
      "static": false,
      "strong": false,
      "summary": "Destroys this lock object, releasing the mutex if it is currently held by this. ",
      "title": "~LockBase",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-~lockbase",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator=",
      "argsString": "(LockBase &&src) noexcept",
      "brief": "Releases any mutex currently held by this, and moves `src` into this, retaining its locked state. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "LockBase& batt::LockBase::operator=",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::operator=",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 140,
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 134,
        "column": 14,
        "file": "batteries/async/mutex.hpp",
        "line": 134
      },
      "name": "operator=",
      "override": false,
      "params": [
        {
          "name": "src",
          "type": "[LockBase](/_autogen/Classes/classbatt_1_1LockBase/) &&",
          "typePlain": "LockBase &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1a81fde81f019338219cd2bbc4bc0ccfbb",
      "static": false,
      "strong": false,
      "summary": "Releases any mutex currently held by this, and moves src into this, retaining its locked state. ",
      "title": "operator=",
      "type": "[LockBase](/_autogen/Classes/classbatt_1_1LockBase/) &",
      "typePlain": "LockBase &",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-operator=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-release",
      "argsString": "() noexcept",
      "brief": "Releases the mutex, if held; safe to call if this lock object isn't currently holding the mutex. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::LockBase::release",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LockBase::release",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 148,
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 145,
        "column": 10,
        "file": "batteries/async/mutex.hpp",
        "line": 145
      },
      "name": "release",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LockBase_1a64629176ed493eb7cffd706ac8a09f6f",
      "static": false,
      "strong": false,
      "summary": "Releases the mutex, if held; safe to call if this lock object isn't currently holding the mutex. ",
      "title": "release",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#function-release",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#enum-state",
      "brief": "The possible local states for a lock. ",
      "category": "types",
      "const": false,
      "definition": "",
      "enumvalues": [
        {
          "anchor": "#enumvalue-kunlocked",
          "brief": "This lock does not hold the mutex. ",
          "category": "types",
          "definition": "",
          "fullname": "State::kUnlocked",
          "hasDetails": false,
          "initializer": "= 0",
          "kind": "enumvalue",
          "language": "",
          "name": "kUnlocked",
          "refid": "classbatt_1_1LockBase_1a0b82cdb15c277b21505e3f11ef9c2bccaa890be143892865fa47681432a3a4753",
          "summary": "This lock does not hold the mutex. ",
          "title": "kUnlocked",
          "url": "/_autogen/Classes/classbatt_1_1LockBase/#enumvalue-kunlocked",
          "visibility": "public"
        },
        {
          "anchor": "#enumvalue-klocked",
          "brief": "This lock holds the mutex; it is not known whether it is still at the back of the mutex queue, nor whether its next pointer has been set. ",
          "category": "types",
          "definition": "",
          "fullname": "State::kLocked",
          "hasDetails": false,
          "initializer": "= 1",
          "kind": "enumvalue",
          "language": "",
          "name": "kLocked",
          "refid": "classbatt_1_1LockBase_1a0b82cdb15c277b21505e3f11ef9c2bccaadef232ba6c055ef7c282d6e42b4112d",
          "summary": "This lock holds the mutex; it is not known whether it is still at the back of the mutex queue, nor whether its next pointer has been set. ",
          "title": "kLocked",
          "url": "/_autogen/Classes/classbatt_1_1LockBase/#enumvalue-klocked",
          "visibility": "public"
        },
        {
          "anchor": "#enumvalue-klockedhavenext",
          "brief": "This lock holds the mutex; it is known that it is no longer at the back of the mutex queue, and that its next pointer has been set. ",
          "category": "types",
          "definition": "",
          "fullname": "State::kLockedHaveNext",
          "hasDetails": false,
          "initializer": "= 2",
          "kind": "enumvalue",
          "language": "",
          "name": "kLockedHaveNext",
          "refid": "classbatt_1_1LockBase_1a0b82cdb15c277b21505e3f11ef9c2bcca0c72a179eaa68057af7e679291e79d55",
          "summary": "This lock holds the mutex; it is known that it is no longer at the back of the mutex queue, and that its next pointer has been set. ",
          "title": "kLockedHaveNext",
          "url": "/_autogen/Classes/classbatt_1_1LockBase/#enumvalue-klockedhavenext",
          "visibility": "public"
        },
        {
          "anchor": "#enumvalue-kinvalid",
          "category": "types",
          "definition": "",
          "fullname": "State::kInvalid",
          "hasDetails": false,
          "initializer": "= 3",
          "kind": "enumvalue",
          "language": "",
          "name": "kInvalid",
          "refid": "classbatt_1_1LockBase_1a0b82cdb15c277b21505e3f11ef9c2bccab10913c938482a8aa4ba85b7a1116cb4",
          "title": "kInvalid",
          "url": "/_autogen/Classes/classbatt_1_1LockBase/#enumvalue-kinvalid",
          "visibility": "public"
        }
      ],
      "explicit": false,
      "fullname": "batt::LockBase::State",
      "hasDetails": false,
      "inline": false,
      "kind": "enum",
      "language": "cpp",
      "location": {
        "bodyEnd": 76,
        "bodyFile": "batteries/async/mutex.hpp",
        "bodyStart": 59,
        "column": 5,
        "file": "batteries/async/mutex.hpp",
        "line": 59
      },
      "name": "State",
      "override": false,
      "refid": "classbatt_1_1LockBase_1a0b82cdb15c277b21505e3f11ef9c2bcc",
      "static": false,
      "strong": true,
      "summary": "The possible local states for a lock. ",
      "title": "State",
      "url": "/_autogen/Classes/classbatt_1_1LockBase/#enum-state",
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1LockBase",
  "static": false,
  "strong": false,
  "title": "batt::LockBase",
  "url": "/_autogen/Classes/classbatt_1_1LockBase/",
  "visibility": "public"
}