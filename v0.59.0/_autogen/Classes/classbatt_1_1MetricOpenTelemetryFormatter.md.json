{
  "abstract": false,
  "anchor": "",
  "baseClasses": [
    {
      "external": false,
      "name": "batt::MetricFormatter",
      "protectedFunctions": [
        {
          "abstract": false,
          "anchor": "#function-metricformatter",
          "argsString": "()=default",
          "category": "functions",
          "const": false,
          "default": true,
          "definition": "batt::MetricFormatter::MetricFormatter",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::MetricFormatter::MetricFormatter",
          "hasDetails": false,
          "inline": false,
          "kind": "function",
          "language": "cpp",
          "location": {
            "column": 5,
            "file": "batteries/metrics/metric_formatter.hpp",
            "line": 38
          },
          "name": "MetricFormatter",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1MetricFormatter_1aefb08305052e68f1f1e09dd85ab80654",
          "static": false,
          "strong": false,
          "title": "MetricFormatter",
          "url": "/_autogen/Classes/classbatt_1_1MetricFormatter/#function-metricformatter",
          "virtual": false,
          "visibility": "protected"
        },
        {
          "abstract": false,
          "anchor": "#function-fully-qualified-name",
          "argsString": "(std::string_view name, const MetricLabelSet &labels)",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "std::string batt::MetricFormatter::fully_qualified_name",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::MetricFormatter::fully_qualified_name",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 60,
            "bodyFile": "batteries/metrics/metric_formatter.hpp",
            "bodyStart": 43,
            "column": 17,
            "file": "batteries/metrics/metric_formatter.hpp",
            "line": 43
          },
          "name": "fully_qualified_name",
          "override": false,
          "params": [
            {
              "name": "name",
              "type": "std::string_view",
              "typePlain": "std::string_view"
            },
            {
              "name": "labels",
              "type": "const MetricLabelSet &",
              "typePlain": "const MetricLabelSet &"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1MetricFormatter_1a3381e4eb37799da368b07ec9d44eb432",
          "static": false,
          "strong": false,
          "title": "fully_qualified_name",
          "type": "std::string",
          "typePlain": "std::string",
          "url": "/_autogen/Classes/classbatt_1_1MetricFormatter/#function-fully-qualified-name",
          "virtual": false,
          "visibility": "protected"
        }
      ],
      "publicFunctions": [
        {
          "abstract": false,
          "anchor": "#function-metricformatter",
          "argsString": "(const MetricFormatter &)=delete",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "batt::MetricFormatter::MetricFormatter",
          "deleted": true,
          "explicit": false,
          "fullname": "batt::MetricFormatter::MetricFormatter",
          "hasDetails": false,
          "inline": false,
          "kind": "function",
          "language": "cpp",
          "location": {
            "column": 5,
            "file": "batteries/metrics/metric_formatter.hpp",
            "line": 20
          },
          "name": "MetricFormatter",
          "override": false,
          "params": [
            {
              "name": "",
              "type": "const [MetricFormatter](/_autogen/Classes/classbatt_1_1MetricFormatter/) &",
              "typePlain": "const MetricFormatter &"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1MetricFormatter_1a07584ad8cf9279a2959cec63011fb1b5",
          "static": false,
          "strong": false,
          "title": "MetricFormatter",
          "url": "/_autogen/Classes/classbatt_1_1MetricFormatter/#function-metricformatter",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-operator=",
          "argsString": "(const MetricFormatter &)=delete",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "MetricFormatter& batt::MetricFormatter::operator=",
          "deleted": true,
          "explicit": false,
          "fullname": "batt::MetricFormatter::operator=",
          "hasDetails": false,
          "inline": false,
          "kind": "function",
          "language": "cpp",
          "location": {
            "column": 21,
            "file": "batteries/metrics/metric_formatter.hpp",
            "line": 21
          },
          "name": "operator=",
          "override": false,
          "params": [
            {
              "name": "",
              "type": "const [MetricFormatter](/_autogen/Classes/classbatt_1_1MetricFormatter/) &",
              "typePlain": "const MetricFormatter &"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1MetricFormatter_1acd86c8e19976584fdf08ac5c399d1e27",
          "static": false,
          "strong": false,
          "title": "operator=",
          "type": "[MetricFormatter](/_autogen/Classes/classbatt_1_1MetricFormatter/) &",
          "typePlain": "MetricFormatter &",
          "url": "/_autogen/Classes/classbatt_1_1MetricFormatter/#function-operator=",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-~metricformatter",
          "argsString": "()=default",
          "category": "functions",
          "const": false,
          "default": true,
          "definition": "virtual batt::MetricFormatter::~MetricFormatter",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::MetricFormatter::~MetricFormatter",
          "hasDetails": false,
          "inline": false,
          "kind": "function",
          "language": "cpp",
          "location": {
            "column": 13,
            "file": "batteries/metrics/metric_formatter.hpp",
            "line": 23
          },
          "name": "~MetricFormatter",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1MetricFormatter_1a20daa148c0f4c4d2cfdc57988677ea17",
          "static": false,
          "strong": false,
          "title": "~MetricFormatter",
          "url": "/_autogen/Classes/classbatt_1_1MetricFormatter/#function-~metricformatter",
          "virtual": true,
          "visibility": "public"
        }
      ],
      "refid": "classbatt_1_1MetricFormatter",
      "url": "/_autogen/Classes/classbatt_1_1MetricFormatter/",
      "virtual": "non-virtual",
      "visibility": "public"
    }
  ],
  "brief": "Format metrics into OpenTelemetry data format: <metric name>{<label name>=<label value>, ...} <metric value> ",
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "Example: `http_requests_total{method=\"POST\", job=\"Batteries\"} 36000`\n\nUsage: Call `format_values` any number of times to format the current metric values stored in `src` to `dst`. `format_values` implementation is stateless and does not require calling `initialize` / `finished`. Note that `dst` is not flushed (and it's left up to the caller to decide when to perform this action).\n\nOutput to `dst` is reported in lexicographic order to maintain consistency between calls. Since it's possible for metrics to be added or removed from `src` over time, the data reported to `dst` represents a snapshot of the current metrics and values during `format_values` call time. ",
  "explicit": false,
  "fullname": "batt::MetricOpenTelemetryFormatter",
  "hasAdditionalMembers": true,
  "hasDetails": true,
  "includes": "<batteries/metrics/metric_otel_formatter.hpp>",
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 48,
    "bodyFile": "batteries/metrics/metric_otel_formatter.hpp",
    "bodyStart": 32,
    "column": 1,
    "file": "batteries/metrics/metric_otel_formatter.hpp",
    "line": 31
  },
  "name": "batt::MetricOpenTelemetryFormatter",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "publicAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-kmetricvalueprecision",
      "brief": "The maximum precision for reporting metric numeric value to `dst`. ",
      "category": "attributes",
      "const": false,
      "definition": "constexpr int batt::MetricOpenTelemetryFormatter::kMetricValuePrecision",
      "explicit": false,
      "fullname": "batt::MetricOpenTelemetryFormatter::kMetricValuePrecision",
      "hasDetails": false,
      "initializer": "= 10",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/metrics/metric_otel_formatter.hpp",
        "bodyStart": 35,
        "column": 26,
        "file": "batteries/metrics/metric_otel_formatter.hpp",
        "line": 35
      },
      "name": "kMetricValuePrecision",
      "override": false,
      "refid": "classbatt_1_1MetricOpenTelemetryFormatter_1a3d2c2dcdd93a6d794dc5954b8dc64647",
      "static": true,
      "strong": false,
      "summary": "The maximum precision for reporting metric numeric value to dst. ",
      "title": "kMetricValuePrecision",
      "type": "constexpr int",
      "typePlain": "constexpr int",
      "url": "/_autogen/Classes/classbatt_1_1MetricOpenTelemetryFormatter/#variable-kmetricvalueprecision",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-initialize",
      "argsString": "(MetricRegistry &src, std::ostream &dst) override",
      "brief": "Nothing to do for OpenTelemtry format (stateless implementation). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::MetricOpenTelemetryFormatter::initialize",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::MetricOpenTelemetryFormatter::initialize",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 36,
        "bodyFile": "batteries/metrics/metric_otel_formatter_impl.hpp",
        "bodyStart": 33,
        "column": 10,
        "file": "batteries/metrics/metric_otel_formatter.hpp",
        "line": 38
      },
      "name": "initialize",
      "override": true,
      "params": [
        {
          "name": "src",
          "type": "[MetricRegistry](/_autogen/Classes/classbatt_1_1MetricRegistry/) &",
          "typePlain": "MetricRegistry &"
        },
        {
          "name": "dst",
          "type": "std::ostream &",
          "typePlain": "std::ostream &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1MetricOpenTelemetryFormatter_1acf2ae897e57e9551a0a513eaef9e4c01",
      "reimplements": {
        "anchor": "#function-initialize",
        "category": "functions",
        "fullname": "batt::MetricFormatter::initialize",
        "kind": "function",
        "language": "cpp",
        "name": "initialize",
        "pureVirtual": true,
        "refid": "classbatt_1_1MetricFormatter_1a8d3234c4ad9b9946b31735c8a9532262",
        "title": "initialize",
        "url": "/_autogen/Classes/classbatt_1_1MetricFormatter/#function-initialize",
        "virtual": true,
        "visibility": "public"
      },
      "static": false,
      "strong": false,
      "summary": "Nothing to do for OpenTelemtry format (stateless implementation). ",
      "title": "initialize",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1MetricOpenTelemetryFormatter/#function-initialize",
      "virtual": true,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-format-values",
      "argsString": "(MetricRegistry &src, std::ostream &dst) override",
      "brief": "Format the current metrics and values stored in `src` to `dst`. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::MetricOpenTelemetryFormatter::format_values",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::MetricOpenTelemetryFormatter::format_values",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 69,
        "bodyFile": "batteries/metrics/metric_otel_formatter_impl.hpp",
        "bodyStart": 38,
        "column": 10,
        "file": "batteries/metrics/metric_otel_formatter.hpp",
        "line": 44
      },
      "name": "format_values",
      "override": true,
      "paramList": [
        {
          "name": "src",
          "text": "The [MetricRegistry](/_autogen/Classes/classbatt_1_1MetricRegistry/) where metrics and values are stored. "
        },
        {
          "name": "dst",
          "text": "The output stream to where formatted data is reported. "
        }
      ],
      "params": [
        {
          "name": "src",
          "type": "[MetricRegistry](/_autogen/Classes/classbatt_1_1MetricRegistry/) &",
          "typePlain": "MetricRegistry &"
        },
        {
          "name": "dst",
          "type": "std::ostream &",
          "typePlain": "std::ostream &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1MetricOpenTelemetryFormatter_1ae01a78c583e61aecae4b643d5941596b",
      "reimplements": {
        "anchor": "#function-format-values",
        "category": "functions",
        "fullname": "batt::MetricFormatter::format_values",
        "kind": "function",
        "language": "cpp",
        "name": "format_values",
        "pureVirtual": true,
        "refid": "classbatt_1_1MetricFormatter_1a9aa70b2e99f736887635173651b2b788",
        "title": "format_values",
        "url": "/_autogen/Classes/classbatt_1_1MetricFormatter/#function-format-values",
        "virtual": true,
        "visibility": "public"
      },
      "static": false,
      "strong": false,
      "summary": "Format the current metrics and values stored in src to dst. ",
      "title": "format_values",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1MetricOpenTelemetryFormatter/#function-format-values",
      "virtual": true,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-finished",
      "argsString": "(MetricRegistry &src, std::ostream &dst) override",
      "brief": "Nothing to do for OpenTelemtry format (stateless implementation). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::MetricOpenTelemetryFormatter::finished",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::MetricOpenTelemetryFormatter::finished",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 74,
        "bodyFile": "batteries/metrics/metric_otel_formatter_impl.hpp",
        "bodyStart": 71,
        "column": 10,
        "file": "batteries/metrics/metric_otel_formatter.hpp",
        "line": 47
      },
      "name": "finished",
      "override": true,
      "params": [
        {
          "name": "src",
          "type": "[MetricRegistry](/_autogen/Classes/classbatt_1_1MetricRegistry/) &",
          "typePlain": "MetricRegistry &"
        },
        {
          "name": "dst",
          "type": "std::ostream &",
          "typePlain": "std::ostream &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1MetricOpenTelemetryFormatter_1ae3098c52c9e62fc7249960142ec3a5ef",
      "reimplements": {
        "anchor": "#function-finished",
        "category": "functions",
        "fullname": "batt::MetricFormatter::finished",
        "kind": "function",
        "language": "cpp",
        "name": "finished",
        "pureVirtual": true,
        "refid": "classbatt_1_1MetricFormatter_1a2a5042babc0c28e9f1bdaf38b0848bd7",
        "title": "finished",
        "url": "/_autogen/Classes/classbatt_1_1MetricFormatter/#function-finished",
        "virtual": true,
        "visibility": "public"
      },
      "static": false,
      "strong": false,
      "summary": "Nothing to do for OpenTelemtry format (stateless implementation). ",
      "title": "finished",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1MetricOpenTelemetryFormatter/#function-finished",
      "virtual": true,
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1MetricOpenTelemetryFormatter",
  "static": false,
  "strong": false,
  "summary": "Format metrics into OpenTelemetry data format: <metric name>{<label name>=<label value>, ...} <metric value> ",
  "title": "batt::MetricOpenTelemetryFormatter",
  "url": "/_autogen/Classes/classbatt_1_1MetricOpenTelemetryFormatter/",
  "visibility": "public"
}