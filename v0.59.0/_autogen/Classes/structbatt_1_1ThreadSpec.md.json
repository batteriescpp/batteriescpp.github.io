{
  "abstract": false,
  "anchor": "",
  "brief": "A mapping from threads to allowed CPUs, for creating thread pools. ",
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "This type specifies a thread pool, with CPU pinning. The number of threads in the pool is given by `this->allowed_cpus_for_thread.size()`. The set of allowed CPUs for a given thread `i` is given by `this->allowed_cpus_for_thread[i]`.",
  "explicit": false,
  "fullname": "batt::ThreadSpec",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<batteries/cpu_align.hpp>",
  "inline": false,
  "kind": "struct",
  "language": "cpp",
  "location": {
    "bodyEnd": 234,
    "bodyFile": "batteries/cpu_align.hpp",
    "bodyStart": 200,
    "column": 1,
    "file": "batteries/cpu_align.hpp",
    "line": 200
  },
  "name": "batt::ThreadSpec",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "publicAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-allowed-cpus-for-thread",
      "category": "attributes",
      "const": false,
      "definition": "std::vector<std::vector<usize> > batt::ThreadSpec::allowed_cpus_for_thread",
      "explicit": false,
      "fullname": "batt::ThreadSpec::allowed_cpus_for_thread",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/cpu_align.hpp",
        "bodyStart": 201,
        "column": 17,
        "file": "batteries/cpu_align.hpp",
        "line": 201
      },
      "name": "allowed_cpus_for_thread",
      "override": false,
      "refid": "structbatt_1_1ThreadSpec_1aa448037b1ef8f701b71b975d7ef29582",
      "static": false,
      "strong": false,
      "title": "allowed_cpus_for_thread",
      "type": "std::vector< std::vector< usize > >",
      "typePlain": "std::vector< std::vector< usize > >",
      "url": "/_autogen/Classes/structbatt_1_1ThreadSpec/#variable-allowed-cpus-for-thread",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-size",
      "argsString": "() const",
      "brief": "Returns the number of threads in this spec. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "usize batt::ThreadSpec::size",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::ThreadSpec::size",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 211,
        "bodyFile": "batteries/cpu_align.hpp",
        "bodyStart": 208,
        "column": 11,
        "file": "batteries/cpu_align.hpp",
        "line": 208
      },
      "name": "size",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "structbatt_1_1ThreadSpec_1a862ed5891e8938d184cc97affdfe0c94",
      "static": false,
      "strong": false,
      "summary": "Returns the number of threads in this spec. ",
      "title": "size",
      "type": "usize",
      "typePlain": "usize",
      "url": "/_autogen/Classes/structbatt_1_1ThreadSpec/#function-size",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-empty",
      "argsString": "() const",
      "brief": "Returns true iff this spec is empty. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "bool batt::ThreadSpec::empty",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::ThreadSpec::empty",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 218,
        "bodyFile": "batteries/cpu_align.hpp",
        "bodyStart": 215,
        "column": 10,
        "file": "batteries/cpu_align.hpp",
        "line": 215
      },
      "name": "empty",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "structbatt_1_1ThreadSpec_1aa178ca0631ae1cbae240c1382c9a6009",
      "static": false,
      "strong": false,
      "summary": "Returns true iff this spec is empty. ",
      "title": "empty",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/structbatt_1_1ThreadSpec/#function-empty",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator[]",
      "argsString": "(usize i) const",
      "brief": "Returns a const reference to the vector of allowed CPUs for thread `i`. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "const std::vector<usize>& batt::ThreadSpec::operator[]",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::ThreadSpec::operator[]",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 225,
        "bodyFile": "batteries/cpu_align.hpp",
        "bodyStart": 222,
        "column": 23,
        "file": "batteries/cpu_align.hpp",
        "line": 222
      },
      "name": "operator[]",
      "override": false,
      "params": [
        {
          "name": "i",
          "type": "usize",
          "typePlain": "usize"
        }
      ],
      "pureVirtual": false,
      "refid": "structbatt_1_1ThreadSpec_1a34afc94446d43e6fc1106577360e59ce",
      "static": false,
      "strong": false,
      "summary": "Returns a const reference to the vector of allowed CPUs for thread i. ",
      "title": "operator[]",
      "type": "const std::vector< usize > &",
      "typePlain": "const std::vector< usize > &",
      "url": "/_autogen/Classes/structbatt_1_1ThreadSpec/#function-operator[]",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-get",
      "argsString": "(usize i) const",
      "brief": "Same as operator[], but adds a bounds check for `i`; panics if `i` is out of bounds. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "const std::vector<usize>& batt::ThreadSpec::get",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::ThreadSpec::get",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 233,
        "bodyFile": "batteries/cpu_align.hpp",
        "bodyStart": 229,
        "column": 23,
        "file": "batteries/cpu_align.hpp",
        "line": 229
      },
      "name": "get",
      "override": false,
      "params": [
        {
          "name": "i",
          "type": "usize",
          "typePlain": "usize"
        }
      ],
      "pureVirtual": false,
      "refid": "structbatt_1_1ThreadSpec_1a356b6915df0765a5806c30f42cf268ed",
      "static": false,
      "strong": false,
      "summary": "Same as operator[], but adds a bounds check for i; panics if i is out of bounds. ",
      "title": "get",
      "type": "const std::vector< usize > &",
      "typePlain": "const std::vector< usize > &",
      "url": "/_autogen/Classes/structbatt_1_1ThreadSpec/#function-get",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "refid": "structbatt_1_1ThreadSpec",
  "see": [
    "parse_thread_spec "
  ],
  "static": false,
  "strong": false,
  "summary": "A mapping from threads to allowed CPUs, for creating thread pools. ",
  "title": "batt::ThreadSpec",
  "url": "/_autogen/Classes/structbatt_1_1ThreadSpec/",
  "visibility": "public"
}