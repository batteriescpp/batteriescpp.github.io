{
  "abstract": false,
  "anchor": "",
  "brief": "Takes a single latency sample and adds it to the metric passed in at construction time. ",
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "batt::LatencyTimer",
  "hasAdditionalMembers": false,
  "hasDetails": false,
  "includes": "<batteries/metrics/metric_collectors.hpp>",
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 804,
    "bodyFile": "batteries/metrics/metric_collectors.hpp",
    "bodyStart": 678,
    "column": 1,
    "file": "batteries/metrics/metric_collectors.hpp",
    "line": 677
  },
  "name": "batt::LatencyTimer",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "privateAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-metric-",
      "category": "attributes",
      "const": false,
      "definition": "LatencyMetric* batt::LatencyTimer::metric_",
      "explicit": false,
      "fullname": "batt::LatencyTimer::metric_",
      "hasDetails": false,
      "initializer": "= nullptr",
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 801,
        "column": 19,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 801
      },
      "name": "metric_",
      "override": false,
      "refid": "classbatt_1_1LatencyTimer_1afdbb09183281352296a603cd292b58dc",
      "static": false,
      "strong": false,
      "title": "metric_",
      "type": "[LatencyMetric](/_autogen/Classes/classbatt_1_1LatencyMetric/) *",
      "typePlain": "LatencyMetric *",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#variable-metric-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-delta-",
      "category": "attributes",
      "const": false,
      "definition": "u64 batt::LatencyTimer::delta_",
      "explicit": false,
      "fullname": "batt::LatencyTimer::delta_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 802,
        "column": 9,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 802
      },
      "name": "delta_",
      "override": false,
      "refid": "classbatt_1_1LatencyTimer_1a7cfb20c4c3a089bc601b58108d011b00",
      "static": false,
      "strong": false,
      "title": "delta_",
      "type": "u64",
      "typePlain": "u64",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#variable-delta-",
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#variable-start-storage-",
      "category": "attributes",
      "const": false,
      "definition": "std::aligned_storage_t<sizeof(TimePoint), alignof(TimePoint)> batt::LatencyTimer::start_storage_",
      "explicit": false,
      "fullname": "batt::LatencyTimer::start_storage_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 803,
        "column": 28,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 803
      },
      "name": "start_storage_",
      "override": false,
      "refid": "classbatt_1_1LatencyTimer_1a3111662bbcca1d755d9857385f2a8921",
      "static": false,
      "strong": false,
      "title": "start_storage_",
      "type": "std::aligned_storage_t< sizeof(TimePoint), alignof(TimePoint)>",
      "typePlain": "std::aligned_storage_t< sizeof(TimePoint), alignof(TimePoint)>",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#variable-start-storage-",
      "visibility": "private"
    }
  ],
  "privateFunctions": [
    {
      "abstract": false,
      "anchor": "#function-reset-start-time",
      "argsString": "() noexcept",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "TimePoint& batt::LatencyTimer::reset_start_time",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyTimer::reset_start_time",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 787,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 784,
        "column": 15,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 784
      },
      "name": "reset_start_time",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a7baf12379d2e8992be36100c27b49e16",
      "static": false,
      "strong": false,
      "title": "reset_start_time",
      "type": "TimePoint &",
      "typePlain": "TimePoint &",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-reset-start-time",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-get-start-time",
      "argsString": "() noexcept",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "TimePoint& batt::LatencyTimer::get_start_time",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyTimer::get_start_time",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 792,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 789,
        "column": 15,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 789
      },
      "name": "get_start_time",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a4ac58210b48ecbbbb40b2c41b837d4a6",
      "static": false,
      "strong": false,
      "title": "get_start_time",
      "type": "TimePoint &",
      "typePlain": "TimePoint &",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-get-start-time",
      "virtual": false,
      "visibility": "private"
    },
    {
      "abstract": false,
      "anchor": "#function-get-start-time",
      "argsString": "() const noexcept",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "const TimePoint& batt::LatencyTimer::get_start_time",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyTimer::get_start_time",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 797,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 794,
        "column": 21,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 794
      },
      "name": "get_start_time",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1aac53bf0fda568035dbf4ca611b4348e6",
      "static": false,
      "strong": false,
      "title": "get_start_time",
      "type": "const TimePoint &",
      "typePlain": "const TimePoint &",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-get-start-time",
      "virtual": false,
      "visibility": "private"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-get-overhead-nanos",
      "argsString": "()",
      "brief": "Returns the measured average overhead for a single timer sample. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "static double batt::LatencyTimer::get_overhead_nanos",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyTimer::get_overhead_nanos",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 688,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 685,
        "column": 19,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 685
      },
      "name": "get_overhead_nanos",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a996e9784c1f1319251150e6652f7e1b8",
      "static": true,
      "strong": false,
      "summary": "Returns the measured average overhead for a single timer sample. ",
      "title": "get_overhead_nanos",
      "type": "double",
      "typePlain": "double",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-get-overhead-nanos",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-latencytimer",
      "argsString": "()=default",
      "category": "functions",
      "const": false,
      "default": true,
      "definition": "batt::LatencyTimer::LatencyTimer",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyTimer::LatencyTimer",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 5,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 692
      },
      "name": "LatencyTimer",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a5adc7d49d55f4176d604f6126f87c518",
      "static": false,
      "strong": false,
      "title": "LatencyTimer",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-latencytimer",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-latencytimer",
      "argsString": "(const LatencyTimer &)=delete",
      "brief": "[LatencyTimer](/_autogen/Classes/classbatt_1_1LatencyTimer/) is not copyable. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::LatencyTimer::LatencyTimer",
      "deleted": true,
      "explicit": false,
      "fullname": "batt::LatencyTimer::LatencyTimer",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 5,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 696
      },
      "name": "LatencyTimer",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "const [LatencyTimer](/_autogen/Classes/classbatt_1_1LatencyTimer/) &",
          "typePlain": "const LatencyTimer &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a9d21e64e754f765e2c4276b9f8e4a62c",
      "static": false,
      "strong": false,
      "summary": "LatencyTimer is not copyable. ",
      "title": "LatencyTimer",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-latencytimer",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator=",
      "argsString": "(const LatencyTimer &)=delete",
      "brief": "[LatencyTimer](/_autogen/Classes/classbatt_1_1LatencyTimer/) is not copyable. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "LatencyTimer& batt::LatencyTimer::operator=",
      "deleted": true,
      "explicit": false,
      "fullname": "batt::LatencyTimer::operator=",
      "hasDetails": false,
      "inline": false,
      "kind": "function",
      "language": "cpp",
      "location": {
        "column": 18,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 700
      },
      "name": "operator=",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "const [LatencyTimer](/_autogen/Classes/classbatt_1_1LatencyTimer/) &",
          "typePlain": "const LatencyTimer &"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a00266453f1bfb4af2a47664b22cda8de",
      "static": false,
      "strong": false,
      "summary": "LatencyTimer is not copyable. ",
      "title": "operator=",
      "type": "[LatencyTimer](/_autogen/Classes/classbatt_1_1LatencyTimer/) &",
      "typePlain": "LatencyTimer &",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-operator=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-latencytimer",
      "argsString": "(LatencyMetric &metric, u64 delta=1) noexcept",
      "brief": "Starts collecting a latency sample for the given metric. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::LatencyTimer::LatencyTimer",
      "deleted": false,
      "explicit": true,
      "fullname": "batt::LatencyTimer::LatencyTimer",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 707,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 704,
        "column": 14,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 704
      },
      "name": "LatencyTimer",
      "override": false,
      "params": [
        {
          "name": "metric",
          "type": "[LatencyMetric](/_autogen/Classes/classbatt_1_1LatencyMetric/) &",
          "typePlain": "LatencyMetric &"
        },
        {
          "defval": "1",
          "defvalPlain": "1",
          "name": "delta",
          "type": "u64",
          "typePlain": "u64"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a3fe9e93411ea1eca89725ca916bf8880",
      "static": false,
      "strong": false,
      "summary": "Starts collecting a latency sample for the given metric. ",
      "title": "LatencyTimer",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-latencytimer",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-latencytimer",
      "argsString": "(RateSpec &&rate_spec, LatencyMetric &metric, u64 delta=1) noexcept",
      "brief": "Starts collecting a latency sample for the given metric, at random average rate. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::LatencyTimer::LatencyTimer",
      "deleted": false,
      "explicit": true,
      "fullname": "batt::LatencyTimer::LatencyTimer",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 716,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 712,
        "column": 14,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 712
      },
      "name": "LatencyTimer",
      "override": false,
      "params": [
        {
          "name": "rate_spec",
          "type": "RateSpec &&",
          "typePlain": "RateSpec &&"
        },
        {
          "name": "metric",
          "type": "[LatencyMetric](/_autogen/Classes/classbatt_1_1LatencyMetric/) &",
          "typePlain": "LatencyMetric &"
        },
        {
          "defval": "1",
          "defvalPlain": "1",
          "name": "delta",
          "type": "u64",
          "typePlain": "u64"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a9dd78c9521a5eee385d570d807f9bc4c",
      "static": false,
      "strong": false,
      "summary": "Starts collecting a latency sample for the given metric, at random average rate. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename RateSpec",
          "typePlain": "typename RateSpec"
        }
      ],
      "title": "LatencyTimer",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-latencytimer",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-~latencytimer",
      "argsString": "() noexcept",
      "brief": "Stops the timer and adds a sample to the metric. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "batt::LatencyTimer::~LatencyTimer",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyTimer::~LatencyTimer",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 723,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 720,
        "column": 5,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 720
      },
      "name": "~LatencyTimer",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1ada76fa84140ef5b270afc753764050f0",
      "static": false,
      "strong": false,
      "summary": "Stops the timer and adds a sample to the metric. ",
      "title": "~LatencyTimer",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-~latencytimer",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-start",
      "argsString": "(LatencyMetric &metric, u64 delta=1) noexcept",
      "brief": "Starts the timer and connects this object to the given metric. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::LatencyTimer::start",
      "deleted": false,
      "details": "Behavior is undefined unless this object was default-constructed. ",
      "explicit": false,
      "fullname": "batt::LatencyTimer::start",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 733,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 728,
        "column": 10,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 728
      },
      "name": "start",
      "override": false,
      "params": [
        {
          "name": "metric",
          "type": "[LatencyMetric](/_autogen/Classes/classbatt_1_1LatencyMetric/) &",
          "typePlain": "LatencyMetric &"
        },
        {
          "defval": "1",
          "defvalPlain": "1",
          "name": "delta",
          "type": "u64",
          "typePlain": "u64"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a8c5be75f6c5d5e4caf4bc85fb94237fb",
      "static": false,
      "strong": false,
      "summary": "Starts the timer and connects this object to the given metric. ",
      "title": "start",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-start",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-start-sampled",
      "argsString": "(RateSpec &&rate_spec, LatencyMetric &metric, u64 delta=1) noexcept",
      "brief": "Starts the timer and connects this object to the given metric, randomly at the given average rate. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::LatencyTimer::start_sampled",
      "deleted": false,
      "details": "Behavior is undefined unless this object was default-constructed. ",
      "explicit": false,
      "fullname": "batt::LatencyTimer::start_sampled",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 746,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 739,
        "column": 10,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 739
      },
      "name": "start_sampled",
      "override": false,
      "params": [
        {
          "name": "rate_spec",
          "type": "RateSpec &&",
          "typePlain": "RateSpec &&"
        },
        {
          "name": "metric",
          "type": "[LatencyMetric](/_autogen/Classes/classbatt_1_1LatencyMetric/) &",
          "typePlain": "LatencyMetric &"
        },
        {
          "defval": "1",
          "defvalPlain": "1",
          "name": "delta",
          "type": "u64",
          "typePlain": "u64"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a0e879c1521f7608204800ec99b22e658",
      "static": false,
      "strong": false,
      "summary": "Starts the timer and connects this object to the given metric, randomly at the given average rate. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename RateSpec",
          "typePlain": "typename RateSpec"
        }
      ],
      "title": "start_sampled",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-start-sampled",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-is-active",
      "argsString": "() const noexcept",
      "brief": "Returns true iff this timer is currently collecting a sample. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "bool batt::LatencyTimer::is_active",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyTimer::is_active",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 753,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 750,
        "column": 10,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 750
      },
      "name": "is_active",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1aa191d8c5c400d605551012ed9533893a",
      "static": false,
      "strong": false,
      "summary": "Returns true iff this timer is currently collecting a sample. ",
      "title": "is_active",
      "type": "bool",
      "typePlain": "bool",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-is-active",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-read-nanos",
      "argsString": "() const noexcept",
      "brief": "Returns the current elapsed nanoseconds, if active; undefined behavior if not. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "i64 batt::LatencyTimer::read_nanos",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyTimer::read_nanos",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 762,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 757,
        "column": 9,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 757
      },
      "name": "read_nanos",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a3dc6fd32f531d1aac2f740233b18afbb",
      "static": false,
      "strong": false,
      "summary": "Returns the current elapsed nanoseconds, if active; undefined behavior if not. ",
      "title": "read_nanos",
      "type": "i64",
      "typePlain": "i64",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-read-nanos",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-read-usec",
      "argsString": "() const noexcept",
      "brief": "Returns the current elapsed microseconds, if active; undefined behavior if not. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "i64 batt::LatencyTimer::read_usec",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyTimer::read_usec",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 769,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 766,
        "column": 9,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 766
      },
      "name": "read_usec",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1a4118faed6a8dfa57f77a315fcae2ecc7",
      "static": false,
      "strong": false,
      "summary": "Returns the current elapsed microseconds, if active; undefined behavior if not. ",
      "title": "read_usec",
      "type": "i64",
      "typePlain": "i64",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-read-usec",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-stop",
      "argsString": "() noexcept",
      "brief": "Stops the time and records the elapsed time to the attached latency metric. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::LatencyTimer::stop",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::LatencyTimer::stop",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 780,
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 773,
        "column": 10,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 773
      },
      "name": "stop",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1LatencyTimer_1ab9c994bb8c89acbe80dc8ca664cdb8a9",
      "static": false,
      "strong": false,
      "summary": "Stops the time and records the elapsed time to the attached latency metric. ",
      "title": "stop",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#function-stop",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#using-clock",
      "category": "types",
      "const": false,
      "definition": "using batt::LatencyTimer::Clock =  std::chrono::steady_clock",
      "explicit": false,
      "fullname": "batt::LatencyTimer::Clock",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 680,
        "column": 5,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 680
      },
      "name": "Clock",
      "override": false,
      "refid": "classbatt_1_1LatencyTimer_1a6a74bb66fa98d188856d9ffdbf559c90",
      "static": false,
      "strong": false,
      "title": "Clock",
      "type": "std::chrono::steady_clock",
      "typePlain": "std::chrono::steady_clock",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#using-clock",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#using-timepoint",
      "category": "types",
      "const": false,
      "definition": "using batt::LatencyTimer::TimePoint =  Clock::time_point",
      "explicit": false,
      "fullname": "batt::LatencyTimer::TimePoint",
      "hasDetails": false,
      "inline": false,
      "kind": "using",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/metrics/metric_collectors.hpp",
        "bodyStart": 681,
        "column": 5,
        "file": "batteries/metrics/metric_collectors.hpp",
        "line": 681
      },
      "name": "TimePoint",
      "override": false,
      "refid": "classbatt_1_1LatencyTimer_1af209676ada70af28e27876e110b05f85",
      "static": false,
      "strong": false,
      "title": "TimePoint",
      "type": "Clock::time_point",
      "typePlain": "Clock::time_point",
      "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/#using-timepoint",
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1LatencyTimer",
  "static": false,
  "strong": false,
  "summary": "Takes a single latency sample and adds it to the metric passed in at construction time. ",
  "title": "batt::LatencyTimer",
  "url": "/_autogen/Classes/classbatt_1_1LatencyTimer/",
  "visibility": "public"
}