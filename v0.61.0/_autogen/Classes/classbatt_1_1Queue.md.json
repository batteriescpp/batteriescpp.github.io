{
  "abstract": false,
  "anchor": "",
  "baseClasses": [
    {
      "external": false,
      "name": "batt::QueueBase",
      "privateAttributes": [
        {
          "abstract": false,
          "anchor": "#variable-pending-count-",
          "category": "attributes",
          "const": false,
          "definition": "Watch<i64> batt::QueueBase::pending_count_",
          "explicit": false,
          "fullname": "batt::QueueBase::pending_count_",
          "hasDetails": false,
          "initializer": "{0}",
          "inline": false,
          "kind": "variable",
          "language": "cpp",
          "location": {
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 147,
            "column": 11,
            "file": "batteries/async/queue.hpp",
            "line": 147
          },
          "name": "pending_count_",
          "override": false,
          "refid": "classbatt_1_1QueueBase_1ac897da6b3dd8bb9edd07250b9f254f2b",
          "static": false,
          "strong": false,
          "title": "pending_count_",
          "type": "[Watch](/_autogen/Classes/classbatt_1_1Watch/)< i64 >",
          "typePlain": "Watch< i64 >",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#variable-pending-count-",
          "visibility": "private"
        }
      ],
      "privateFunctions": [
        {
          "abstract": false,
          "anchor": "#function-decrement-if-positive",
          "argsString": "(i64 n) noexcept",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "static Optional<i64> batt::QueueBase::decrement_if_positive",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::decrement_if_positive",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 145,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 139,
            "column": 21,
            "file": "batteries/async/queue.hpp",
            "line": 139
          },
          "name": "decrement_if_positive",
          "override": false,
          "params": [
            {
              "name": "n",
              "type": "i64",
              "typePlain": "i64"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1adc2290d6e52351678a0abd0a5f46c53d",
          "static": true,
          "strong": false,
          "title": "decrement_if_positive",
          "type": "[Optional](/_autogen/Classes/classbatt_1_1Optional/)< i64 >",
          "typePlain": "Optional< i64 >",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-decrement-if-positive",
          "virtual": false,
          "visibility": "private"
        }
      ],
      "protectedFunctions": [
        {
          "abstract": false,
          "anchor": "#function-await-one",
          "argsString": "() noexcept",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "Status batt::QueueBase::await_one",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::await_one",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 90,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 82,
            "column": 12,
            "file": "batteries/async/queue.hpp",
            "line": 82
          },
          "name": "await_one",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1a9cf3210f554093c59cfe57a93aa03b2f",
          "static": false,
          "strong": false,
          "title": "await_one",
          "type": "[Status](/_autogen/Classes/classbatt_1_1Status/)",
          "typePlain": "Status",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-await-one",
          "virtual": false,
          "visibility": "protected"
        },
        {
          "abstract": false,
          "anchor": "#function-await-count-range",
          "argsString": "(i64 min_count, i64 max_count) noexcept",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "StatusOr<i64> batt::QueueBase::await_count_range",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::await_count_range",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 116,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 92,
            "column": 14,
            "file": "batteries/async/queue.hpp",
            "line": 92
          },
          "name": "await_count_range",
          "override": false,
          "params": [
            {
              "name": "min_count",
              "type": "i64",
              "typePlain": "i64"
            },
            {
              "name": "max_count",
              "type": "i64",
              "typePlain": "i64"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1acb8d84ef60c3f08ee5362cf058ffe971",
          "static": false,
          "strong": false,
          "title": "await_count_range",
          "type": "[StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< i64 >",
          "typePlain": "StatusOr< i64 >",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-await-count-range",
          "virtual": false,
          "visibility": "protected"
        },
        {
          "abstract": false,
          "anchor": "#function-try-acquire",
          "argsString": "() noexcept",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "bool batt::QueueBase::try_acquire",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::try_acquire",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 126,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 118,
            "column": 10,
            "file": "batteries/async/queue.hpp",
            "line": 118
          },
          "name": "try_acquire",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1a38b50efa7d3fa918da5f700132a02b8f",
          "static": false,
          "strong": false,
          "title": "try_acquire",
          "type": "bool",
          "typePlain": "bool",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-try-acquire",
          "virtual": false,
          "visibility": "protected"
        },
        {
          "abstract": false,
          "anchor": "#function-notify",
          "argsString": "(i64 count)",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::QueueBase::notify",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::notify",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 131,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 128,
            "column": 10,
            "file": "batteries/async/queue.hpp",
            "line": 128
          },
          "name": "notify",
          "override": false,
          "params": [
            {
              "name": "count",
              "type": "i64",
              "typePlain": "i64"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1ae2eeeb1d8ed7570ab8690d43e38d27fa",
          "static": false,
          "strong": false,
          "title": "notify",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-notify",
          "virtual": false,
          "visibility": "protected"
        },
        {
          "abstract": false,
          "anchor": "#function-close-impl",
          "argsString": "() noexcept",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::QueueBase::close_impl",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::close_impl",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 136,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 133,
            "column": 10,
            "file": "batteries/async/queue.hpp",
            "line": 133
          },
          "name": "close_impl",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1a1c34366310cb69cdd6e84336e9c6d005",
          "static": false,
          "strong": false,
          "title": "close_impl",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-close-impl",
          "virtual": false,
          "visibility": "protected"
        }
      ],
      "publicFunctions": [
        {
          "abstract": false,
          "anchor": "#function-is-open",
          "argsString": "() const",
          "brief": "Tests whether the [Queue]() is in an open state. ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "bool batt::QueueBase::is_open",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::is_open",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 33,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 30,
            "column": 10,
            "file": "batteries/async/queue.hpp",
            "line": 30
          },
          "name": "is_open",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1a7f4bd0fb585b0d4eca2ed3333151dc01",
          "static": false,
          "strong": false,
          "summary": "Tests whether the Queue is in an open state. ",
          "title": "is_open",
          "type": "bool",
          "typePlain": "bool",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-is-open",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-is-closed",
          "argsString": "() const",
          "brief": "Tests whether the [Queue]() is in a closed state. ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "bool batt::QueueBase::is_closed",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::is_closed",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 40,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 37,
            "column": 10,
            "file": "batteries/async/queue.hpp",
            "line": 37
          },
          "name": "is_closed",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1abd247678616be1d544b826f2d5888fbc",
          "static": false,
          "strong": false,
          "summary": "Tests whether the Queue is in a closed state. ",
          "title": "is_closed",
          "type": "bool",
          "typePlain": "bool",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-is-closed",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-size",
          "argsString": "() const",
          "brief": "The number of items currently in the [Queue](). ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "i64 batt::QueueBase::size",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::size",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 47,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 44,
            "column": 9,
            "file": "batteries/async/queue.hpp",
            "line": 44
          },
          "name": "size",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1a6a8d0baddc20f170c0d01361f2e3cab6",
          "static": false,
          "strong": false,
          "summary": "The number of items currently in the Queue. ",
          "title": "size",
          "type": "i64",
          "typePlain": "i64",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-size",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-empty",
          "argsString": "() const",
          "brief": "Tests whether this->[size()](/_autogen/Classes/classbatt_1_1QueueBase/#function-size) is zero. ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "bool batt::QueueBase::empty",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::empty",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 54,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 51,
            "column": 10,
            "file": "batteries/async/queue.hpp",
            "line": 51
          },
          "name": "empty",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1a6a457d7715bb4fae87abee44c6fae3ed",
          "static": false,
          "strong": false,
          "summary": "Tests whether this->size() is zero. ",
          "title": "empty",
          "type": "bool",
          "typePlain": "bool",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-empty",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-await-size-is-truly",
          "argsString": "(Predicate &&predicate)",
          "brief": "Blocks the current Task/thread until this->[size()](/_autogen/Classes/classbatt_1_1QueueBase/#function-size) satisfies the given predicate. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "StatusOr<i64> batt::QueueBase::await_size_is_truly",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::await_size_is_truly",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 62,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 59,
            "column": 14,
            "file": "batteries/async/queue.hpp",
            "line": 59
          },
          "name": "await_size_is_truly",
          "override": false,
          "params": [
            {
              "name": "predicate",
              "type": "Predicate &&",
              "typePlain": "Predicate &&"
            }
          ],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1a7489db376d7ea3708cda5cd68625967d",
          "static": false,
          "strong": false,
          "summary": "Blocks the current Task/thread until this->size() satisfies the given predicate. ",
          "templateParams": [
            {
              "defval": "bool(i64)",
              "defvalPlain": "bool(i64)",
              "name": "",
              "type": "typename Predicate",
              "typePlain": "typename Predicate"
            }
          ],
          "title": "await_size_is_truly",
          "type": "[StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< i64 >",
          "typePlain": "StatusOr< i64 >",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-await-size-is-truly",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-await-empty",
          "argsString": "()",
          "brief": "Blocks the current Task/thread until the [Queue]() is empty. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "StatusOr<i64> batt::QueueBase::await_empty",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::await_empty",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 72,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 66,
            "column": 14,
            "file": "batteries/async/queue.hpp",
            "line": 66
          },
          "name": "await_empty",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1a7e7be25844532627aa188543cae0bf7a",
          "static": false,
          "strong": false,
          "summary": "Blocks the current Task/thread until the Queue is empty. ",
          "title": "await_empty",
          "type": "[StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< i64 >",
          "typePlain": "StatusOr< i64 >",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-await-empty",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-poke",
          "argsString": "()",
          "brief": "Wakes all waiters with StatusCode::kPoke. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void batt::QueueBase::poke",
          "deleted": false,
          "explicit": false,
          "fullname": "batt::QueueBase::poke",
          "hasDetails": false,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 79,
            "bodyFile": "batteries/async/queue.hpp",
            "bodyStart": 76,
            "column": 10,
            "file": "batteries/async/queue.hpp",
            "line": 76
          },
          "name": "poke",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classbatt_1_1QueueBase_1a2cece17672523a9b771da5b6106bcd34",
          "static": false,
          "strong": false,
          "summary": "Wakes all waiters with StatusCode::kPoke. ",
          "title": "poke",
          "type": "void",
          "typePlain": "void",
          "url": "/_autogen/Classes/classbatt_1_1QueueBase/#function-poke",
          "virtual": false,
          "visibility": "public"
        }
      ],
      "refid": "classbatt_1_1QueueBase",
      "url": "/_autogen/Classes/classbatt_1_1QueueBase/",
      "virtual": "non-virtual",
      "visibility": "public"
    }
  ],
  "brief": "Unbounded multi-producer/multi-consumer (MPMC) FIFO queue. ",
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "batt::Queue",
  "hasAdditionalMembers": true,
  "hasDetails": true,
  "includes": "<batteries/async/queue.hpp>",
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 360,
    "bodyFile": "batteries/async/queue.hpp",
    "bodyStart": 157,
    "column": 1,
    "file": "batteries/async/queue.hpp",
    "line": 156
  },
  "name": "batt::Queue",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "batt",
    "kind": "namespace",
    "language": "cpp",
    "name": "batt",
    "refid": "namespacebatt",
    "title": "batt",
    "url": "/_autogen/Namespaces/namespacebatt/",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "batt",
      "kind": "namespace",
      "language": "cpp",
      "name": "batt",
      "refid": "namespacebatt",
      "title": "batt",
      "url": "/_autogen/Namespaces/namespacebatt/",
      "visibility": "public"
    }
  ],
  "privateAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-pending-items-",
      "category": "attributes",
      "const": false,
      "definition": "Mutex<FlatDeque<T> > batt::Queue< T >::pending_items_",
      "explicit": false,
      "fullname": "batt::Queue::pending_items_",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 359,
        "column": 11,
        "file": "batteries/async/queue.hpp",
        "line": 359
      },
      "name": "pending_items_",
      "override": false,
      "refid": "classbatt_1_1Queue_1a016d5d747aefd8f72966444c7632083b",
      "static": false,
      "strong": false,
      "title": "pending_items_",
      "type": "[Mutex](/_autogen/Classes/classbatt_1_1Mutex/)< [FlatDeque](/_autogen/Classes/classbatt_1_1FlatDeque/)< T > >",
      "typePlain": "Mutex< FlatDeque< T > >",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#variable-pending-items-",
      "visibility": "private"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-close",
      "argsString": "()",
      "brief": "Closes the queue, causing all current/future read operations to fail/unblock immediately. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "void batt::Queue< T >::close",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Queue::close",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 165,
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 161,
        "column": 10,
        "file": "batteries/async/queue.hpp",
        "line": 161
      },
      "name": "close",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Queue_1a586fc70abdff78f7964b09b462560b11",
      "static": false,
      "strong": false,
      "summary": "Closes the queue, causing all current/future read operations to fail/unblock immediately. ",
      "title": "close",
      "type": "void",
      "typePlain": "void",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#function-close",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-push",
      "argsString": "(Args &&... args)",
      "brief": "Emplaces a single instance of T into the back of the queue using the passed arguments. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Status batt::Queue< T >::push",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Queue::push",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 183,
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 172,
        "column": 12,
        "file": "batteries/async/queue.hpp",
        "line": 172
      },
      "name": "push",
      "override": false,
      "params": [
        {
          "name": "args",
          "type": "Args &&...",
          "typePlain": "Args &&..."
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Queue_1a5716b9bef44d0f96558174ad9d6eabad",
      "returns": [
        "true if the push succeeded; false if the queue was closed. "
      ],
      "static": false,
      "strong": false,
      "summary": "Emplaces a single instance of T into the back of the queue using the passed arguments. ",
      "templateParams": [
        {
          "name": "Args",
          "type": "typename...",
          "typePlain": "typename..."
        }
      ],
      "title": "push",
      "type": "[Status](/_autogen/Classes/classbatt_1_1Status/)",
      "typePlain": "Status",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#function-push",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-push-with-lock",
      "argsString": "(FactoryFn &&factory_fn)",
      "brief": "Atomically invokes the factory_fn to create an instance of T to push into the [Queue](/_autogen/Classes/classbatt_1_1Queue/). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Status batt::Queue< T >::push_with_lock",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Queue::push_with_lock",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 199,
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 188,
        "column": 12,
        "file": "batteries/async/queue.hpp",
        "line": 188
      },
      "name": "push_with_lock",
      "override": false,
      "params": [
        {
          "name": "factory_fn",
          "type": "FactoryFn &&",
          "typePlain": "FactoryFn &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Queue_1afbf465c6ec03fe210b29e8ae4037ffd6",
      "static": false,
      "strong": false,
      "summary": "Atomically invokes the factory_fn to create an instance of T to push into the Queue. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename FactoryFn",
          "typePlain": "typename FactoryFn"
        }
      ],
      "title": "push_with_lock",
      "type": "[Status](/_autogen/Classes/classbatt_1_1Status/)",
      "typePlain": "Status",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#function-push-with-lock",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-push-all",
      "argsString": "(Items &&items)",
      "brief": "Inserts multiple items atomically into the [Queue](/_autogen/Classes/classbatt_1_1Queue/). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Status batt::Queue< T >::push_all",
      "deleted": false,
      "details": "[Queue::push_all](/_autogen/Classes/classbatt_1_1Queue/#function-push-all) guarantees that the passed items will be inserted in the given order, with no other items interposed (via concurrent calls to [Queue::push](/_autogen/Classes/classbatt_1_1Queue/#function-push) or similar).\n\n`items` should be an STL sequence; i.e., something that can be iterated via a for-each loop. ",
      "explicit": false,
      "fullname": "batt::Queue::push_all",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 233,
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 209,
        "column": 12,
        "file": "batteries/async/queue.hpp",
        "line": 209
      },
      "name": "push_all",
      "override": false,
      "params": [
        {
          "name": "items",
          "type": "Items &&",
          "typePlain": "Items &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Queue_1ac2d8e934f4dadec0922a426cdad13df9",
      "static": false,
      "strong": false,
      "summary": "Inserts multiple items atomically into the Queue. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename Items",
          "typePlain": "typename Items"
        }
      ],
      "title": "push_all",
      "type": "[Status](/_autogen/Classes/classbatt_1_1Status/)",
      "typePlain": "Status",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#function-push-all",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-consume-all",
      "argsString": "(Items &&items)",
      "brief": "Move-copies multiple items atomically into the [Queue](/_autogen/Classes/classbatt_1_1Queue/). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Status batt::Queue< T >::consume_all",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Queue::consume_all",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 264,
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 238,
        "column": 12,
        "file": "batteries/async/queue.hpp",
        "line": 238
      },
      "name": "consume_all",
      "override": false,
      "params": [
        {
          "name": "items",
          "type": "Items &&",
          "typePlain": "Items &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Queue_1ab490e716e2c4f42d9621e9417ba3c483",
      "static": false,
      "strong": false,
      "summary": "Move-copies multiple items atomically into the Queue. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename Items",
          "typePlain": "typename Items"
        }
      ],
      "title": "consume_all",
      "type": "[Status](/_autogen/Classes/classbatt_1_1Status/)",
      "typePlain": "Status",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#function-consume-all",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await-next",
      "argsString": "()",
      "brief": "Reads a single item from the [Queue](/_autogen/Classes/classbatt_1_1Queue/). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "StatusOr<T> batt::Queue< T >::await_next",
      "deleted": false,
      "details": "Blocks until an item is available or the [Queue](/_autogen/Classes/classbatt_1_1Queue/) is closed. ",
      "explicit": false,
      "fullname": "batt::Queue::await_next",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 276,
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 270,
        "column": 14,
        "file": "batteries/async/queue.hpp",
        "line": 270
      },
      "name": "await_next",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Queue_1a46a7caa95e6c1023e8c831bbc0340502",
      "static": false,
      "strong": false,
      "summary": "Reads a single item from the Queue. ",
      "title": "await_next",
      "type": "[StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< T >",
      "typePlain": "StatusOr< T >",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#function-await-next",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-await-some",
      "argsString": "(Iter &&first_out, Iter &&last_out)",
      "brief": "Reads a batch of items form the [Queue](/_autogen/Classes/classbatt_1_1Queue/). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "StatusOr<Iter> batt::Queue< T >::await_some",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Queue::await_some",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 305,
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 283,
        "column": 14,
        "file": "batteries/async/queue.hpp",
        "line": 283
      },
      "name": "await_some",
      "override": false,
      "params": [
        {
          "name": "first_out",
          "type": "Iter &&",
          "typePlain": "Iter &&"
        },
        {
          "name": "last_out",
          "type": "Iter &&",
          "typePlain": "Iter &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Queue_1a2ee29321a883e69e7e9972db296239b6",
      "returns": [
        "The end iterator for the read sequence on success, error status code otherwise. "
      ],
      "static": false,
      "strong": false,
      "summary": "Reads a batch of items form the Queue. ",
      "templateParams": [
        {
          "name": "",
          "type": "typename Iter",
          "typePlain": "typename Iter"
        }
      ],
      "title": "await_some",
      "type": "[StatusOr](/_autogen/Classes/classbatt_1_1StatusOr/)< Iter >",
      "typePlain": "StatusOr< Iter >",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#function-await-some",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-try-pop-next",
      "argsString": "()",
      "brief": "Attempts to read a single item from the [Queue](/_autogen/Classes/classbatt_1_1Queue/) (non-blocking). ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "Optional<T> batt::Queue< T >::try_pop_next",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Queue::try_pop_next",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 317,
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 311,
        "column": 14,
        "file": "batteries/async/queue.hpp",
        "line": 311
      },
      "name": "try_pop_next",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Queue_1a83ccd895208081f6f8bd91916a9add97",
      "returns": [
        "The extracted item if successful; batt::None otherwise "
      ],
      "static": false,
      "strong": false,
      "summary": "Attempts to read a single item from the Queue (non-blocking). ",
      "title": "try_pop_next",
      "type": "[Optional](/_autogen/Classes/classbatt_1_1Optional/)< T >",
      "typePlain": "Optional< T >",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#function-try-pop-next",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-pop-next-or-panic",
      "argsString": "()",
      "brief": "Reads a single item from the [Queue](/_autogen/Classes/classbatt_1_1Queue/) (non-blocking), panicking if the [Queue](/_autogen/Classes/classbatt_1_1Queue/) is empty. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "T batt::Queue< T >::pop_next_or_panic",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Queue::pop_next_or_panic",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 331,
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 321,
        "column": 7,
        "file": "batteries/async/queue.hpp",
        "line": 321
      },
      "name": "pop_next_or_panic",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classbatt_1_1Queue_1a694005a0e799018f828458e9ca6325c2",
      "static": false,
      "strong": false,
      "summary": "Reads a single item from the Queue (non-blocking), panicking if the Queue is empty. ",
      "title": "pop_next_or_panic",
      "type": "T",
      "typePlain": "T",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#function-pop-next-or-panic",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-drain",
      "argsString": "(CleanupFn &&cleanup_fn={})",
      "brief": "Reads and discards items from the [Queue](/_autogen/Classes/classbatt_1_1Queue/) until it is observed to be empty. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "usize batt::Queue< T >::drain",
      "deleted": false,
      "explicit": false,
      "fullname": "batt::Queue::drain",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 356,
        "bodyFile": "batteries/async/queue.hpp",
        "bodyStart": 340,
        "column": 11,
        "file": "batteries/async/queue.hpp",
        "line": 340
      },
      "name": "drain",
      "override": false,
      "paramList": [
        {
          "name": "cleanup_fn",
          "text": "([Optional](/_autogen/Classes/classbatt_1_1Optional/)) A function to run on each drained item in the queue"
        }
      ],
      "params": [
        {
          "defval": "{}",
          "defvalPlain": "{}",
          "name": "cleanup_fn",
          "type": "CleanupFn &&",
          "typePlain": "CleanupFn &&"
        }
      ],
      "pureVirtual": false,
      "refid": "classbatt_1_1Queue_1a6b0ed438fbe2c13b48bae3efeb4b668a",
      "returns": [
        "the number of items read. "
      ],
      "static": false,
      "strong": false,
      "summary": "Reads and discards items from the Queue until it is observed to be empty. ",
      "templateParams": [
        {
          "defval": "[DoNothing](/_autogen/Classes/structbatt_1_1DoNothing/)",
          "defvalPlain": "DoNothing",
          "name": "",
          "type": "typename CleanupFn",
          "typePlain": "typename CleanupFn"
        }
      ],
      "title": "drain",
      "type": "usize",
      "typePlain": "usize",
      "url": "/_autogen/Classes/classbatt_1_1Queue/#function-drain",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "refid": "classbatt_1_1Queue",
  "see": [
    "[QueueBase](/_autogen/Classes/classbatt_1_1QueueBase/)"
  ],
  "static": false,
  "strong": false,
  "summary": "Unbounded multi-producer/multi-consumer (MPMC) FIFO queue. ",
  "templateParams": [
    {
      "name": "",
      "type": "typename T",
      "typePlain": "typename T"
    }
  ],
  "title": "batt::Queue",
  "url": "/_autogen/Classes/classbatt_1_1Queue/",
  "visibility": "public"
}